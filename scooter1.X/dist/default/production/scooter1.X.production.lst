

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 08 22:52:30 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Generated 06/04/2022 GMT
    46                           ; 
    47                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F46K20 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80                           	psect	idataCOMRAM
    81   00E686                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _Button_Backward_state
    85   00E686  01                 	db	1
    86                           
    87                           ;initializer for _Button_forward_state
    88   00E687  01                 	db	1
    89                           
    90                           ;initializer for _speed_down_btn_state_final
    91   00E688  01                 	db	1
    92                           
    93                           ;initializer for _speed_up_btn_state_final
    94   00E689  01                 	db	1
    95                           
    96                           ;initializer for _MOTORS_BACKWARD
    97   00E68A  44                 	db	68
    98   00E68B  01                 	db	1
    99   00E68C  00                 	db	0
   100                           
   101                           ;initializer for _MOTORS_FORWARD
   102   00E68D  5E                 	db	94
   103   00E68E  01                 	db	1
   104   00E68F  00                 	db	0
   105                           
   106                           ;initializer for _LIGHTS_btn_ON
   107   00E690  4F                 	db	79
   108   00E691  01                 	db	1
   109   00E692  00                 	db	0
   110                           
   111                           ;initializer for _motor_2
   112   00E693  23                 	db	35
   113   00E694  33                 	db	51
   114                           
   115                           ;initializer for _motor_1
   116   00E695  03                 	db	3
   117   00E696  13                 	db	19
   118                           
   119                           ;initializer for _speed_down_btn_state
   120   00E697  01                 	db	1
   121                           
   122                           ;initializer for _speed_up_btn_state
   123   00E698  01                 	db	1
   124                           
   125                           ;initializer for _MOTORS_btn_BACKWARD_activ
   126   00E699  01                 	db	1
   127                           
   128                           ;initializer for _MOTORS_btn_FORWARD_activ
   129   00E69A  01                 	db	1
   130                           
   131                           ;initializer for _LIGHTS_btn_OFF_activ
   132   00E69B  01                 	db	1
   133                           
   134                           ;initializer for _LIGHTS_btn_ON_activ
   135   00E69C  01                 	db	1
   136                           
   137                           ;initializer for _LIGHT_LED
   138   00E69D  53                 	db	83
   139                           
   140                           	psect	idataBANK0
   141   00E737                     __pidataBANK0:
   142                           	callstack 0
   143                           
   144                           ;initializer for _port_register
   145   00E737  80                 	db	128
   146   00E738  0F                 	db	15
   147   00E739  81                 	db	129
   148   00E73A  0F                 	db	15
   149   00E73B  82                 	db	130
   150   00E73C  0F                 	db	15
   151   00E73D  83                 	db	131
   152   00E73E  0F                 	db	15
   153   00E73F  84                 	db	132
   154   00E740  0F                 	db	15
   155                           
   156                           ;initializer for _lat_register
   157   00E741  89                 	db	137
   158   00E742  0F                 	db	15
   159   00E743  8A                 	db	138
   160   00E744  0F                 	db	15
   161   00E745  8B                 	db	139
   162   00E746  0F                 	db	15
   163   00E747  8C                 	db	140
   164   00E748  0F                 	db	15
   165   00E749  8D                 	db	141
   166   00E74A  0F                 	db	15
   167                           
   168                           ;initializer for _tris_register
   169   00E74B  92                 	db	146
   170   00E74C  0F                 	db	15
   171   00E74D  93                 	db	147
   172   00E74E  0F                 	db	15
   173   00E74F  94                 	db	148
   174   00E750  0F                 	db	15
   175   00E751  95                 	db	149
   176   00E752  0F                 	db	15
   177   00E753  96                 	db	150
   178   00E754  0F                 	db	15
   179                           
   180                           ;initializer for _motor_sp
   181   00E755  0032               	dw	50
   182   00E757  10                 	db	16
   183   00E758  10                 	db	16
   184   00E759  00                 	db	0
   185   00E75A  11                 	db	17
   186   00E75B  02                 	db	2
   187   00E75C  00                 	db	0
   188   00E75D  01                 	db	1
   189                           
   190                           ;initializer for _myseg
   191   00E75E  10                 	db	16
   192   00E75F  14                 	db	20
   193   00E760  12                 	db	18
   194   00E761  13                 	db	19
   195   00E762  00                 	db	0
   196                           
   197                           ;initializer for _Speed_down
   198   00E763  5C                 	db	92
   199   00E764  01                 	db	1
   200   00E765  00                 	db	0
   201                           
   202                           ;initializer for _Speed_up
   203   00E766  46                 	db	70
   204   00E767  01                 	db	1
   205   00E768  00                 	db	0
   206                           
   207                           ;initializer for _LIGHTS_btn_OFF
   208   00E769  4E                 	db	78
   209   00E76A  01                 	db	1
   210   00E76B  00                 	db	0
   211   000000                     _TRISCbits	set	3988
   212   000000                     _PORTA	set	3968
   213   000000                     _LATA	set	3977
   214   000000                     _TRISA	set	3986
   215   000000                     _PIR1bits	set	3998
   216   000000                     _CCP2CONbits	set	4026
   217   000000                     _CCP1CONbits	set	4029
   218   000000                     _TRISE	set	3990
   219   000000                     _TRISD	set	3989
   220   000000                     _TRISC	set	3988
   221   000000                     _TRISB	set	3987
   222   000000                     _LATE	set	3981
   223   000000                     _LATD	set	3980
   224   000000                     _LATC	set	3979
   225   000000                     _LATB	set	3978
   226   000000                     _PORTE	set	3972
   227   000000                     _PORTD	set	3971
   228   000000                     _PORTC	set	3970
   229   000000                     _PORTB	set	3969
   230   000000                     _CCPR1L	set	4030
   231   000000                     _T2CONbits	set	4042
   232   000000                     _PR2	set	4043
   233   000000                     _CCPR2L	set	4027
   234                           
   235                           ; #config settings
   236                           
   237                           	psect	cinit
   238   00E76C                     __pcinit:
   239                           	callstack 0
   240   00E76C                     start_initialization:
   241                           	callstack 0
   242   00E76C                     __initialization:
   243                           	callstack 0
   244                           
   245                           ; Initialize objects allocated to BANK0 (53 bytes)
   246                           ; load TBLPTR registers with __pidataBANK0
   247   00E76C  0E37               	movlw	low __pidataBANK0
   248   00E76E  6EF6               	movwf	tblptrl,c
   249   00E770  0EE7               	movlw	high __pidataBANK0
   250   00E772  6EF7               	movwf	tblptrh,c
   251   00E774  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   252   00E776  6EF8               	movwf	tblptru,c
   253   00E778  EE00  F060         	lfsr	0,__pdataBANK0
   254   00E77C  EE10 F035          	lfsr	1,53
   255   00E780                     copy_data0:
   256   00E780  0009               	tblrd		*+
   257   00E782  CFF5 FFEE          	movff	tablat,postinc0
   258   00E786  50E5               	movf	postdec1,w,c
   259   00E788  50E1               	movf	fsr1l,w,c
   260   00E78A  E1FA               	bnz	copy_data0
   261                           
   262                           ; Initialize objects allocated to COMRAM (24 bytes)
   263                           ; load TBLPTR registers with __pidataCOMRAM
   264   00E78C  0E86               	movlw	low __pidataCOMRAM
   265   00E78E  6EF6               	movwf	tblptrl,c
   266   00E790  0EE6               	movlw	high __pidataCOMRAM
   267   00E792  6EF7               	movwf	tblptrh,c
   268   00E794  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   269   00E796  6EF8               	movwf	tblptru,c
   270   00E798  EE00  F03F         	lfsr	0,__pdataCOMRAM
   271   00E79C  EE10 F018          	lfsr	1,24
   272   00E7A0                     copy_data1:
   273   00E7A0  0009               	tblrd		*+
   274   00E7A2  CFF5 FFEE          	movff	tablat,postinc0
   275   00E7A6  50E5               	movf	postdec1,w,c
   276   00E7A8  50E1               	movf	fsr1l,w,c
   277   00E7AA  E1FA               	bnz	copy_data1
   278                           
   279                           ; Clear objects allocated to COMRAM (9 bytes)
   280   00E7AC  EE00  F057         	lfsr	0,__pbssCOMRAM
   281   00E7B0  0E09               	movlw	9
   282   00E7B2                     clear_0:
   283   00E7B2  6AEE               	clrf	postinc0,c
   284   00E7B4  06E8               	decf	wreg,f,c
   285   00E7B6  E1FD               	bnz	clear_0
   286   00E7B8                     end_of_initialization:
   287                           	callstack 0
   288   00E7B8                     __end_of__initialization:
   289                           	callstack 0
   290   00E7B8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   291   00E7BA  6EF8               	movwf	tblptru,c
   292   00E7BC  0100               	movlb	0
   293   00E7BE  EFA9  F07C         	goto	_main	;jump to C main() function
   294                           
   295                           	psect	bssCOMRAM
   296   000057                     __pbssCOMRAM:
   297                           	callstack 0
   298   000057                     _MOTORS_BACKWARD_button_high_valid:
   299                           	callstack 0
   300   000057                     	ds	2
   301   000059                     _speed_down_button_high_valid:
   302                           	callstack 0
   303   000059                     	ds	2
   304   00005B                     _speed_up_button_high_valid:
   305                           	callstack 0
   306   00005B                     	ds	2
   307   00005D                     _MOTORS_FORWARD_button_high_valid:
   308                           	callstack 0
   309   00005D                     	ds	2
   310   00005F                     _data:
   311                           	callstack 0
   312   00005F                     	ds	1
   313                           
   314                           	psect	dataCOMRAM
   315   00003F                     __pdataCOMRAM:
   316                           	callstack 0
   317   00003F                     _Button_Backward_state:
   318                           	callstack 0
   319   00003F                     	ds	1
   320   000040                     _Button_forward_state:
   321                           	callstack 0
   322   000040                     	ds	1
   323   000041                     _speed_down_btn_state_final:
   324                           	callstack 0
   325   000041                     	ds	1
   326   000042                     _speed_up_btn_state_final:
   327                           	callstack 0
   328   000042                     	ds	1
   329   000043                     _MOTORS_BACKWARD:
   330                           	callstack 0
   331   000043                     	ds	3
   332   000046                     _MOTORS_FORWARD:
   333                           	callstack 0
   334   000046                     	ds	3
   335   000049                     _LIGHTS_btn_ON:
   336                           	callstack 0
   337   000049                     	ds	3
   338   00004C                     _motor_2:
   339                           	callstack 0
   340   00004C                     	ds	2
   341   00004E                     _motor_1:
   342                           	callstack 0
   343   00004E                     	ds	2
   344   000050                     _speed_down_btn_state:
   345                           	callstack 0
   346   000050                     	ds	1
   347   000051                     _speed_up_btn_state:
   348                           	callstack 0
   349   000051                     	ds	1
   350   000052                     _MOTORS_btn_BACKWARD_activ:
   351                           	callstack 0
   352   000052                     	ds	1
   353   000053                     _MOTORS_btn_FORWARD_activ:
   354                           	callstack 0
   355   000053                     	ds	1
   356   000054                     _LIGHTS_btn_OFF_activ:
   357                           	callstack 0
   358   000054                     	ds	1
   359   000055                     _LIGHTS_btn_ON_activ:
   360                           	callstack 0
   361   000055                     	ds	1
   362   000056                     _LIGHT_LED:
   363                           	callstack 0
   364   000056                     	ds	1
   365                           
   366                           	psect	dataBANK0
   367   000060                     __pdataBANK0:
   368                           	callstack 0
   369   000060                     _port_register:
   370                           	callstack 0
   371   000060                     	ds	10
   372   00006A                     _lat_register:
   373                           	callstack 0
   374   00006A                     	ds	10
   375   000074                     _tris_register:
   376                           	callstack 0
   377   000074                     	ds	10
   378   00007E                     _motor_sp:
   379                           	callstack 0
   380   00007E                     	ds	9
   381   000087                     _myseg:
   382                           	callstack 0
   383   000087                     	ds	5
   384   00008C                     _Speed_down:
   385                           	callstack 0
   386   00008C                     	ds	3
   387   00008F                     _Speed_up:
   388                           	callstack 0
   389   00008F                     	ds	3
   390   000092                     _LIGHTS_btn_OFF:
   391                           	callstack 0
   392   000092                     	ds	3
   393                           
   394                           	psect	cstackCOMRAM
   395   000001                     __pcstackCOMRAM:
   396                           	callstack 0
   397   000001                     ?___wmul:
   398                           	callstack 0
   399   000001                     ?___lldiv:
   400                           	callstack 0
   401   000001                     gpio_pin_intilaize@pin:
   402                           	callstack 0
   403   000001                     gpio_pin_write_logic@pin:
   404                           	callstack 0
   405   000001                     gpio_pin_read_logic@pin:
   406                           	callstack 0
   407   000001                     CCP_PWM_Start@_ccp_obj:
   408                           	callstack 0
   409   000001                     CCP_PWM_Stop@_ccp_obj:
   410                           	callstack 0
   411   000001                     ___wmul@multiplier:
   412                           	callstack 0
   413   000001                     ___lldiv@dividend:
   414                           	callstack 0
   415                           
   416                           ; 4 bytes @ 0x0
   417   000001                     	ds	2
   418   000003                     ??_gpio_pin_intilaize:
   419   000003                     gpio_pin_write_logic@logic:
   420                           	callstack 0
   421   000003                     gpio_pin_read_logic@status:
   422                           	callstack 0
   423   000003                     ___wmul@multiplicand:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x2
   427   000003                     	ds	1
   428   000004                     ??_gpio_pin_write_logic:
   429                           
   430                           ; 1 bytes @ 0x3
   431   000004                     	ds	1
   432   000005                     ??_gpio_pin_read_logic:
   433   000005                     ___wmul@product:
   434                           	callstack 0
   435   000005                     ___lldiv@divisor:
   436                           	callstack 0
   437                           
   438                           ; 4 bytes @ 0x4
   439   000005                     	ds	2
   440   000007                     ?___xxtofl:
   441                           	callstack 0
   442   000007                     ___xxtofl@val:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0x6
   446   000007                     	ds	2
   447   000009                     gpio_pin_intilaize@ret:
   448                           	callstack 0
   449   000009                     ___lldiv@quotient:
   450                           	callstack 0
   451                           
   452                           ; 4 bytes @ 0x8
   453   000009                     	ds	1
   454   00000A                     gpio_pin_write_logic@ret:
   455                           	callstack 0
   456   00000A                     button_initialize@btn:
   457                           	callstack 0
   458   00000A                     button_read_state@btn:
   459                           	callstack 0
   460   00000A                     DC_motor_initialize@motor:
   461                           	callstack 0
   462   00000A                     led_initialize@led:
   463                           	callstack 0
   464   00000A                     segment_intilaize@seg:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x9
   468   00000A                     	ds	1
   469   00000B                     ??___xxtofl:
   470   00000B                     DC_motor_MOve_clock_Wise@motor:
   471                           	callstack 0
   472   00000B                     DC_motor_MOve_Anti_clock_Wise@motor:
   473                           	callstack 0
   474   00000B                     DC_motor_Stop@motor:
   475                           	callstack 0
   476   00000B                     led_turn_on@led:
   477                           	callstack 0
   478   00000B                     led_turn_off@led:
   479                           	callstack 0
   480   00000B                     segment_write@seg:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0xA
   484   00000B                     	ds	1
   485   00000C                     ??_led_initialize:
   486   00000C                     ??_DC_motor_initialize:
   487   00000C                     button_read_state@btn_state:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0xB
   491   00000C                     	ds	1
   492   00000D                     ??_led_turn_on:
   493   00000D                     ??_led_turn_off:
   494   00000D                     ??_DC_motor_MOve_clock_Wise:
   495   00000D                     ??_DC_motor_MOve_Anti_clock_Wise:
   496   00000D                     ??_DC_motor_Stop:
   497   00000D                     DC_motor_initialize@pin_obj_1:
   498                           	callstack 0
   499   00000D                     led_initialize@pin_obj:
   500                           	callstack 0
   501   00000D                     segment_write@data:
   502                           	callstack 0
   503   00000D                     ___lldiv@counter:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0xC
   507   00000D                     	ds	1
   508   00000E                     DC_motor_initialize@pin_obj_2:
   509                           	callstack 0
   510   00000E                     DC_motor_MOve_clock_Wise@pin_obj_1:
   511                           	callstack 0
   512   00000E                     DC_motor_MOve_Anti_clock_Wise@pin_obj_1:
   513                           	callstack 0
   514   00000E                     DC_motor_Stop@pin_obj_1:
   515                           	callstack 0
   516   00000E                     led_turn_on@pin_obj:
   517                           	callstack 0
   518   00000E                     led_turn_off@pin_obj:
   519                           	callstack 0
   520   00000E                     CCP_Init@_ccp_obj:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0xD
   524   00000E                     	ds	1
   525   00000F                     button_read_state@Pin_logic:
   526                           	callstack 0
   527   00000F                     DC_motor_MOve_clock_Wise@pin_obj_2:
   528                           	callstack 0
   529   00000F                     DC_motor_MOve_Anti_clock_Wise@pin_obj_2:
   530                           	callstack 0
   531   00000F                     DC_motor_Stop@pin_obj_2:
   532                           	callstack 0
   533   00000F                     ___xxtofl@sign:
   534                           	callstack 0
   535                           
   536                           ; 1 bytes @ 0xE
   537   00000F                     	ds	1
   538   000010                     ??_CCP_Init:
   539   000010                     ___xxtofl@exp:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0xF
   543   000010                     	ds	1
   544   000011                     ___xxtofl@arg:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x10
   548   000011                     	ds	1
   549   000012                     _CCP_Init$1539:
   550                           	callstack 0
   551                           
   552                           ; 4 bytes @ 0x11
   553   000012                     	ds	3
   554   000015                     ?___fldiv:
   555                           	callstack 0
   556   000015                     ___fldiv@b:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x14
   560   000015                     	ds	1
   561   000016                     _CCP_Init$1540:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x15
   565   000016                     	ds	3
   566   000019                     ___fldiv@a:
   567                           	callstack 0
   568                           
   569                           ; 4 bytes @ 0x18
   570   000019                     	ds	1
   571   00001A                     
   572                           ; 1 bytes @ 0x19
   573   00001A                     	ds	3
   574   00001D                     ??___fldiv:
   575                           
   576                           ; 1 bytes @ 0x1C
   577   00001D                     	ds	4
   578   000021                     ___fldiv@rem:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x20
   582   000021                     	ds	4
   583   000025                     ___fldiv@sign:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0x24
   587   000025                     	ds	1
   588   000026                     ___fldiv@new_exp:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x25
   592   000026                     	ds	2
   593   000028                     ___fldiv@grs:
   594                           	callstack 0
   595                           
   596                           ; 4 bytes @ 0x27
   597   000028                     	ds	4
   598   00002C                     ___fldiv@bexp:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0x2B
   602   00002C                     	ds	1
   603   00002D                     ___fldiv@aexp:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x2C
   607   00002D                     	ds	1
   608   00002E                     ?___fltol:
   609                           	callstack 0
   610   00002E                     ___fltol@f1:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x2D
   614   00002E                     	ds	4
   615   000032                     ??___fltol:
   616                           
   617                           ; 1 bytes @ 0x31
   618   000032                     	ds	4
   619   000036                     ___fltol@sign1:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x35
   623   000036                     	ds	1
   624   000037                     ___fltol@exp1:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x36
   628   000037                     	ds	1
   629   000038                     CCP_PWM_Set_Duty@_ccp_obj:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x37
   633   000038                     	ds	2
   634   00003A                     CCP_PWM_Set_Duty@_duty:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x39
   638   00003A                     	ds	1
   639   00003B                     ??_CCP_PWM_Set_Duty:
   640                           
   641                           ; 1 bytes @ 0x3A
   642   00003B                     	ds	2
   643   00003D                     CCP_PWM_Set_Duty@l_duty_temp:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x3C
   647   00003D                     	ds	2
   648   00003F                     
   649                           ; 1 bytes @ 0x3E
   650 ;;
   651 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   652 ;;
   653 ;; *************** function _main *****************
   654 ;; Defined at:
   655 ;;		line 117 in file "MAin_scooter.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  2  212[None  ] int 
   662 ;; Registers used:
   663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   673 ;;Total ram usage:        0 bytes
   674 ;; Hardware stack levels required when called: 3
   675 ;; This function calls:
   676 ;;		_CCP_PWM_Set_Duty
   677 ;;		_CCP_PWM_Start
   678 ;;		_CCP_PWM_Stop
   679 ;;		_button_read_state
   680 ;;		_led_turn_off
   681 ;;		_led_turn_on
   682 ;;		_scooter_backward
   683 ;;		_scooter_forward
   684 ;;		_scooter_stop
   685 ;;		_segment_write
   686 ;;		_system_init
   687 ;; This function is called by:
   688 ;;		Startup code after reset
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text0
   693   00F952                     __ptext0:
   694                           	callstack 0
   695   00F952                     _main:
   696                           	callstack 28
   697   00F952                     
   698                           ;MAin_scooter.c: 120:   system_init();
   699   00F952  EC76  F075         	call	_system_init	;wreg free
   700   00F956                     l213:
   701                           
   702                           ;MAin_scooter.c: 123:     {button_read_state(&Speed_up,&speed_up_btn_state);
   703   00F956  0E8F               	movlw	low _Speed_up
   704   00F958  6E0A               	movwf	button_read_state@btn^0,c
   705   00F95A  0E00               	movlw	high _Speed_up
   706   00F95C  6E0B               	movwf	(button_read_state@btn+1)^0,c
   707   00F95E  0E51               	movlw	low _speed_up_btn_state
   708   00F960  6E0C               	movwf	button_read_state@btn_state^0,c
   709   00F962  0E00               	movlw	high _speed_up_btn_state
   710   00F964  6E0D               	movwf	(button_read_state@btn_state+1)^0,c
   711   00F966  ECB7  F077         	call	_button_read_state	;wreg free
   712                           
   713                           ;MAin_scooter.c: 124:     button_read_state(&Speed_down,&speed_down_btn_state);
   714   00F96A  0E8C               	movlw	low _Speed_down
   715   00F96C  6E0A               	movwf	button_read_state@btn^0,c
   716   00F96E  0E00               	movlw	high _Speed_down
   717   00F970  6E0B               	movwf	(button_read_state@btn+1)^0,c
   718   00F972  0E50               	movlw	low _speed_down_btn_state
   719   00F974  6E0C               	movwf	button_read_state@btn_state^0,c
   720   00F976  0E00               	movlw	high _speed_down_btn_state
   721   00F978  6E0D               	movwf	(button_read_state@btn_state+1)^0,c
   722   00F97A  ECB7  F077         	call	_button_read_state	;wreg free
   723                           
   724                           ;MAin_scooter.c: 125:     button_read_state(&LIGHTS_btn_OFF,&LIGHTS_btn_OFF_activ);
   725   00F97E  0E92               	movlw	low _LIGHTS_btn_OFF
   726   00F980  6E0A               	movwf	button_read_state@btn^0,c
   727   00F982  0E00               	movlw	high _LIGHTS_btn_OFF
   728   00F984  6E0B               	movwf	(button_read_state@btn+1)^0,c
   729   00F986  0E54               	movlw	low _LIGHTS_btn_OFF_activ
   730   00F988  6E0C               	movwf	button_read_state@btn_state^0,c
   731   00F98A  0E00               	movlw	high _LIGHTS_btn_OFF_activ
   732   00F98C  6E0D               	movwf	(button_read_state@btn_state+1)^0,c
   733   00F98E  ECB7  F077         	call	_button_read_state	;wreg free
   734                           
   735                           ;MAin_scooter.c: 126:      button_read_state(&LIGHTS_btn_ON,&LIGHTS_btn_ON_activ);
   736   00F992  0E49               	movlw	low _LIGHTS_btn_ON
   737   00F994  6E0A               	movwf	button_read_state@btn^0,c
   738   00F996  0E00               	movlw	high _LIGHTS_btn_ON
   739   00F998  6E0B               	movwf	(button_read_state@btn+1)^0,c
   740   00F99A  0E55               	movlw	low _LIGHTS_btn_ON_activ
   741   00F99C  6E0C               	movwf	button_read_state@btn_state^0,c
   742   00F99E  0E00               	movlw	high _LIGHTS_btn_ON_activ
   743   00F9A0  6E0D               	movwf	(button_read_state@btn_state+1)^0,c
   744   00F9A2  ECB7  F077         	call	_button_read_state	;wreg free
   745                           
   746                           ;MAin_scooter.c: 127:      button_read_state(&MOTORS_BACKWARD,&MOTORS_btn_BACKWARD_activ
      +                          );
   747   00F9A6  0E43               	movlw	low _MOTORS_BACKWARD
   748   00F9A8  6E0A               	movwf	button_read_state@btn^0,c
   749   00F9AA  0E00               	movlw	high _MOTORS_BACKWARD
   750   00F9AC  6E0B               	movwf	(button_read_state@btn+1)^0,c
   751   00F9AE  0E52               	movlw	low _MOTORS_btn_BACKWARD_activ
   752   00F9B0  6E0C               	movwf	button_read_state@btn_state^0,c
   753   00F9B2  0E00               	movlw	high _MOTORS_btn_BACKWARD_activ
   754   00F9B4  6E0D               	movwf	(button_read_state@btn_state+1)^0,c
   755   00F9B6  ECB7  F077         	call	_button_read_state	;wreg free
   756                           
   757                           ;MAin_scooter.c: 128:      button_read_state(&MOTORS_FORWARD,&MOTORS_btn_FORWARD_activ);
   758   00F9BA  0E46               	movlw	low _MOTORS_FORWARD
   759   00F9BC  6E0A               	movwf	button_read_state@btn^0,c
   760   00F9BE  0E00               	movlw	high _MOTORS_FORWARD
   761   00F9C0  6E0B               	movwf	(button_read_state@btn+1)^0,c
   762   00F9C2  0E53               	movlw	low _MOTORS_btn_FORWARD_activ
   763   00F9C4  6E0C               	movwf	button_read_state@btn_state^0,c
   764   00F9C6  0E00               	movlw	high _MOTORS_btn_FORWARD_activ
   765   00F9C8  6E0D               	movwf	(button_read_state@btn_state+1)^0,c
   766   00F9CA  ECB7  F077         	call	_button_read_state	;wreg free
   767   00F9CE                     
   768                           ;MAin_scooter.c: 129:      if(LIGHTS_btn_ON_activ==BUTTON_ACTIVE_HIGH)
   769   00F9CE  5055               	movf	_LIGHTS_btn_ON_activ^0,w,c
   770   00F9D0  A4D8               	btfss	status,2,c
   771   00F9D2  EFED  F07C         	goto	u2481
   772   00F9D6  EFEF  F07C         	goto	u2480
   773   00F9DA                     u2481:
   774   00F9DA  EFF5  F07C         	goto	l2598
   775   00F9DE                     u2480:
   776   00F9DE                     
   777                           ;MAin_scooter.c: 130:          {;MAin_scooter.c: 131:              led_turn_on(&LIGHT_LE
      +                          D);
   778   00F9DE  0E56               	movlw	low _LIGHT_LED
   779   00F9E0  6E0B               	movwf	led_turn_on@led^0,c
   780   00F9E2  0E00               	movlw	high _LIGHT_LED
   781   00F9E4  6E0C               	movwf	(led_turn_on@led+1)^0,c
   782   00F9E6  EC81  F074         	call	_led_turn_on	;wreg free
   783   00F9EA                     l2598:
   784                           
   785                           ;MAin_scooter.c: 133:   if(LIGHTS_btn_OFF_activ==BUTTON_ACTIVE_HIGH)
   786   00F9EA  5054               	movf	_LIGHTS_btn_OFF_activ^0,w,c
   787   00F9EC  A4D8               	btfss	status,2,c
   788   00F9EE  EFFB  F07C         	goto	u2491
   789   00F9F2  EFFD  F07C         	goto	u2490
   790   00F9F6                     u2491:
   791   00F9F6  EF03  F07D         	goto	l2602
   792   00F9FA                     u2490:
   793   00F9FA                     
   794                           ;MAin_scooter.c: 134:          {;MAin_scooter.c: 135:              led_turn_off(&LIGHT_L
      +                          ED);
   795   00F9FA  0E56               	movlw	low _LIGHT_LED
   796   00F9FC  6E0B               	movwf	led_turn_off@led^0,c
   797   00F9FE  0E00               	movlw	high _LIGHT_LED
   798   00FA00  6E0C               	movwf	(led_turn_off@led+1)^0,c
   799   00FA02  EC48  F074         	call	_led_turn_off	;wreg free
   800   00FA06                     l2602:
   801                           
   802                           ;MAin_scooter.c: 137:      if(MOTORS_btn_BACKWARD_activ==BUTTON_PRESSED)
   803   00FA06  5052               	movf	_MOTORS_btn_BACKWARD_activ^0,w,c
   804   00FA08  A4D8               	btfss	status,2,c
   805   00FA0A  EF09  F07D         	goto	u2501
   806   00FA0E  EF0B  F07D         	goto	u2500
   807   00FA12                     u2501:
   808   00FA12  EF1C  F07D         	goto	l2610
   809   00FA16                     u2500:
   810   00FA16                     
   811                           ;MAin_scooter.c: 138:      {MOTORS_BACKWARD_button_high_valid++;
   812   00FA16  4A57               	infsnz	_MOTORS_BACKWARD_button_high_valid^0,f,c
   813   00FA18  2A58               	incf	(_MOTORS_BACKWARD_button_high_valid+1)^0,f,c
   814   00FA1A                     
   815                           ;MAin_scooter.c: 139:      if(MOTORS_BACKWARD_button_high_valid>10)
   816   00FA1A  5058               	movf	(_MOTORS_BACKWARD_button_high_valid+1)^0,w,c
   817   00FA1C  E109               	bnz	u2510
   818   00FA1E  0E0B               	movlw	11
   819   00FA20  5C57               	subwf	_MOTORS_BACKWARD_button_high_valid^0,w,c
   820   00FA22  A0D8               	btfss	status,0,c
   821   00FA24  EF16  F07D         	goto	u2511
   822   00FA28  EF18  F07D         	goto	u2510
   823   00FA2C                     u2511:
   824   00FA2C  EF2A  F07D         	goto	l219
   825   00FA30                     u2510:
   826   00FA30                     
   827                           ;MAin_scooter.c: 140:      {;MAin_scooter.c: 141:          Button_Backward_state=BUTTON_
      +                          PRESSED;
   828   00FA30  0E00               	movlw	0
   829   00FA32  6E3F               	movwf	_Button_Backward_state^0,c
   830                           
   831                           ;MAin_scooter.c: 142:      }
   832   00FA34  EF2A  F07D         	goto	l219
   833   00FA38                     l2610:
   834   00FA38  0452               	decf	_MOTORS_btn_BACKWARD_activ^0,w,c
   835   00FA3A  A4D8               	btfss	status,2,c
   836   00FA3C  EF22  F07D         	goto	u2521
   837   00FA40  EF24  F07D         	goto	u2520
   838   00FA44                     u2521:
   839   00FA44  EF2A  F07D         	goto	l219
   840   00FA48                     u2520:
   841   00FA48                     
   842                           ;MAin_scooter.c: 146:      {;MAin_scooter.c: 147:          MOTORS_BACKWARD_button_high_v
      +                          alid=0;
   843   00FA48  0E00               	movlw	0
   844   00FA4A  6E58               	movwf	(_MOTORS_BACKWARD_button_high_valid+1)^0,c
   845   00FA4C  0E00               	movlw	0
   846   00FA4E  6E57               	movwf	_MOTORS_BACKWARD_button_high_valid^0,c
   847                           
   848                           ;MAin_scooter.c: 148:          Button_Backward_state=BUTTON_RELEASED;
   849   00FA50  0E01               	movlw	1
   850   00FA52  6E3F               	movwf	_Button_Backward_state^0,c
   851   00FA54                     l219:
   852                           
   853                           ;MAin_scooter.c: 150:      if(MOTORS_btn_FORWARD_activ==BUTTON_PRESSED)
   854   00FA54  5053               	movf	_MOTORS_btn_FORWARD_activ^0,w,c
   855   00FA56  A4D8               	btfss	status,2,c
   856   00FA58  EF30  F07D         	goto	u2531
   857   00FA5C  EF32  F07D         	goto	u2530
   858   00FA60                     u2531:
   859   00FA60  EF43  F07D         	goto	l2620
   860   00FA64                     u2530:
   861   00FA64                     
   862                           ;MAin_scooter.c: 151:      {MOTORS_FORWARD_button_high_valid++;
   863   00FA64  4A5D               	infsnz	_MOTORS_FORWARD_button_high_valid^0,f,c
   864   00FA66  2A5E               	incf	(_MOTORS_FORWARD_button_high_valid+1)^0,f,c
   865   00FA68                     
   866                           ;MAin_scooter.c: 152:      if(MOTORS_FORWARD_button_high_valid>10)
   867   00FA68  505E               	movf	(_MOTORS_FORWARD_button_high_valid+1)^0,w,c
   868   00FA6A  E109               	bnz	u2540
   869   00FA6C  0E0B               	movlw	11
   870   00FA6E  5C5D               	subwf	_MOTORS_FORWARD_button_high_valid^0,w,c
   871   00FA70  A0D8               	btfss	status,0,c
   872   00FA72  EF3D  F07D         	goto	u2541
   873   00FA76  EF3F  F07D         	goto	u2540
   874   00FA7A                     u2541:
   875   00FA7A  EF51  F07D         	goto	l223
   876   00FA7E                     u2540:
   877   00FA7E                     
   878                           ;MAin_scooter.c: 153:      {;MAin_scooter.c: 154:          Button_forward_state=BUTTON_P
      +                          RESSED;
   879   00FA7E  0E00               	movlw	0
   880   00FA80  6E40               	movwf	_Button_forward_state^0,c
   881   00FA82  EF51  F07D         	goto	l223
   882   00FA86                     l2620:
   883   00FA86  0453               	decf	_MOTORS_btn_FORWARD_activ^0,w,c
   884   00FA88  A4D8               	btfss	status,2,c
   885   00FA8A  EF49  F07D         	goto	u2551
   886   00FA8E  EF4B  F07D         	goto	u2550
   887   00FA92                     u2551:
   888   00FA92  EF51  F07D         	goto	l223
   889   00FA96                     u2550:
   890   00FA96                     
   891                           ;MAin_scooter.c: 157:      {Button_forward_state=BUTTON_RELEASED;
   892   00FA96  0E01               	movlw	1
   893   00FA98  6E40               	movwf	_Button_forward_state^0,c
   894                           
   895                           ;MAin_scooter.c: 158:          MOTORS_FORWARD_button_high_valid=0;
   896   00FA9A  0E00               	movlw	0
   897   00FA9C  6E5E               	movwf	(_MOTORS_FORWARD_button_high_valid+1)^0,c
   898   00FA9E  0E00               	movlw	0
   899   00FAA0  6E5D               	movwf	_MOTORS_FORWARD_button_high_valid^0,c
   900   00FAA2                     l223:
   901                           
   902                           ;MAin_scooter.c: 161:      if(Button_Backward_state==BUTTON_PRESSED)
   903   00FAA2  503F               	movf	_Button_Backward_state^0,w,c
   904   00FAA4  A4D8               	btfss	status,2,c
   905   00FAA6  EF57  F07D         	goto	u2561
   906   00FAAA  EF59  F07D         	goto	u2560
   907   00FAAE                     u2561:
   908   00FAAE  EF5B  F07D         	goto	l2626
   909   00FAB2                     u2560:
   910   00FAB2                     
   911                           ;MAin_scooter.c: 162:      {;MAin_scooter.c: 163:          scooter_forward();
   912   00FAB2  EC5C  F073         	call	_scooter_forward	;wreg free
   913   00FAB6                     l2626:
   914                           
   915                           ;MAin_scooter.c: 165:      if(Button_forward_state==BUTTON_PRESSED)
   916   00FAB6  5040               	movf	_Button_forward_state^0,w,c
   917   00FAB8  A4D8               	btfss	status,2,c
   918   00FABA  EF61  F07D         	goto	u2571
   919   00FABE  EF63  F07D         	goto	u2570
   920   00FAC2                     u2571:
   921   00FAC2  EF65  F07D         	goto	l2630
   922   00FAC6                     u2570:
   923   00FAC6                     
   924                           ;MAin_scooter.c: 166:      {;MAin_scooter.c: 167:          scooter_backward();
   925   00FAC6  EC4F  F073         	call	_scooter_backward	;wreg free
   926   00FACA                     l2630:
   927                           
   928                           ;MAin_scooter.c: 169:       if((Button_Backward_state==BUTTON_RELEASED)&&(Button_forward
      +                          _state==BUTTON_RELEASED))
   929   00FACA  043F               	decf	_Button_Backward_state^0,w,c
   930   00FACC  A4D8               	btfss	status,2,c
   931   00FACE  EF6B  F07D         	goto	u2581
   932   00FAD2  EF6D  F07D         	goto	u2580
   933   00FAD6                     u2581:
   934   00FAD6  EF77  F07D         	goto	l2636
   935   00FADA                     u2580:
   936   00FADA  0440               	decf	_Button_forward_state^0,w,c
   937   00FADC  A4D8               	btfss	status,2,c
   938   00FADE  EF73  F07D         	goto	u2591
   939   00FAE2  EF75  F07D         	goto	u2590
   940   00FAE6                     u2591:
   941   00FAE6  EF77  F07D         	goto	l2636
   942   00FAEA                     u2590:
   943   00FAEA                     
   944                           ;MAin_scooter.c: 170:      {;MAin_scooter.c: 171:          scooter_stop();
   945   00FAEA  EC69  F073         	call	_scooter_stop	;wreg free
   946   00FAEE                     l2636:
   947                           
   948                           ;MAin_scooter.c: 173:      if(speed_up_btn_state_final==BUTTON_PRESSED)
   949   00FAEE  5042               	movf	_speed_up_btn_state_final^0,w,c
   950   00FAF0  A4D8               	btfss	status,2,c
   951   00FAF2  EF7D  F07D         	goto	u2601
   952   00FAF6  EF7F  F07D         	goto	u2600
   953   00FAFA                     u2601:
   954   00FAFA  EFA8  F07D         	goto	l2652
   955   00FAFE                     u2600:
   956   00FAFE                     
   957                           ;MAin_scooter.c: 174:      {if(data<4){
   958   00FAFE  0E04               	movlw	4
   959   00FB00  605F               	cpfslt	_data^0,c
   960   00FB02  EF85  F07D         	goto	u2611
   961   00FB06  EF87  F07D         	goto	u2610
   962   00FB0A                     u2611:
   963   00FB0A  EF88  F07D         	goto	l2642
   964   00FB0E                     u2610:
   965   00FB0E                     
   966                           ;MAin_scooter.c: 175:          data++;}
   967   00FB0E  2A5F               	incf	_data^0,f,c
   968   00FB10                     l2642:
   969                           
   970                           ;MAin_scooter.c: 176:      CCP_PWM_Stop(&motor_sp);
   971   00FB10  0E7E               	movlw	low _motor_sp
   972   00FB12  6E01               	movwf	CCP_PWM_Stop@_ccp_obj^0,c
   973   00FB14  0E00               	movlw	high _motor_sp
   974   00FB16  6E02               	movwf	(CCP_PWM_Stop@_ccp_obj+1)^0,c
   975   00FB18  ECE1  F073         	call	_CCP_PWM_Stop	;wreg free
   976   00FB1C                     
   977                           ;MAin_scooter.c: 177:      CCP_PWM_Start(&motor_sp);
   978   00FB1C  0E7E               	movlw	low _motor_sp
   979   00FB1E  6E01               	movwf	CCP_PWM_Start@_ccp_obj^0,c
   980   00FB20  0E00               	movlw	high _motor_sp
   981   00FB22  6E02               	movwf	(CCP_PWM_Start@_ccp_obj+1)^0,c
   982   00FB24  ECBA  F074         	call	_CCP_PWM_Start	;wreg free
   983   00FB28                     
   984                           ;MAin_scooter.c: 178:      CCP_PWM_Set_Duty(&motor_sp,data*25);
   985   00FB28  0E7E               	movlw	low _motor_sp
   986   00FB2A  6E38               	movwf	CCP_PWM_Set_Duty@_ccp_obj^0,c
   987   00FB2C  0E00               	movlw	high _motor_sp
   988   00FB2E  6E39               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)^0,c
   989   00FB30  505F               	movf	_data^0,w,c
   990   00FB32  0D19               	mullw	25
   991   00FB34  CFF3 F03A          	movff	prodl,CCP_PWM_Set_Duty@_duty
   992   00FB38  EC3C  F079         	call	_CCP_PWM_Set_Duty	;wreg free
   993   00FB3C                     
   994                           ;MAin_scooter.c: 180:      speed_up_btn_state_final=BUTTON_RELEASED;
   995   00FB3C  0E01               	movlw	1
   996   00FB3E  6E42               	movwf	_speed_up_btn_state_final^0,c
   997   00FB40                     
   998                           ;MAin_scooter.c: 181:          segment_write(&myseg,data);
   999   00FB40  0E87               	movlw	low _myseg
  1000   00FB42  6E0B               	movwf	segment_write@seg^0,c
  1001   00FB44  0E00               	movlw	high _myseg
  1002   00FB46  6E0C               	movwf	(segment_write@seg+1)^0,c
  1003   00FB48  C05F  F00D         	movff	_data,segment_write@data
  1004   00FB4C  EC33  F075         	call	_segment_write	;wreg free
  1005   00FB50                     l2652:
  1006                           
  1007                           ;MAin_scooter.c: 183:      if(speed_down_btn_state_final==BUTTON_PRESSED)
  1008   00FB50  5041               	movf	_speed_down_btn_state_final^0,w,c
  1009   00FB52  A4D8               	btfss	status,2,c
  1010   00FB54  EFAE  F07D         	goto	u2621
  1011   00FB58  EFB0  F07D         	goto	u2620
  1012   00FB5C                     u2621:
  1013   00FB5C  EFD9  F07D         	goto	l2668
  1014   00FB60                     u2620:
  1015   00FB60                     
  1016                           ;MAin_scooter.c: 184:      {if(data>0){
  1017   00FB60  505F               	movf	_data^0,w,c
  1018   00FB62  B4D8               	btfsc	status,2,c
  1019   00FB64  EFB6  F07D         	goto	u2631
  1020   00FB68  EFB8  F07D         	goto	u2630
  1021   00FB6C                     u2631:
  1022   00FB6C  EFB9  F07D         	goto	l2658
  1023   00FB70                     u2630:
  1024   00FB70                     
  1025                           ;MAin_scooter.c: 185:          data--;}
  1026   00FB70  065F               	decf	_data^0,f,c
  1027   00FB72                     l2658:
  1028                           
  1029                           ;MAin_scooter.c: 186:      CCP_PWM_Stop(&motor_sp);
  1030   00FB72  0E7E               	movlw	low _motor_sp
  1031   00FB74  6E01               	movwf	CCP_PWM_Stop@_ccp_obj^0,c
  1032   00FB76  0E00               	movlw	high _motor_sp
  1033   00FB78  6E02               	movwf	(CCP_PWM_Stop@_ccp_obj+1)^0,c
  1034   00FB7A  ECE1  F073         	call	_CCP_PWM_Stop	;wreg free
  1035   00FB7E                     
  1036                           ;MAin_scooter.c: 187:      CCP_PWM_Start(&motor_sp);
  1037   00FB7E  0E7E               	movlw	low _motor_sp
  1038   00FB80  6E01               	movwf	CCP_PWM_Start@_ccp_obj^0,c
  1039   00FB82  0E00               	movlw	high _motor_sp
  1040   00FB84  6E02               	movwf	(CCP_PWM_Start@_ccp_obj+1)^0,c
  1041   00FB86  ECBA  F074         	call	_CCP_PWM_Start	;wreg free
  1042   00FB8A                     
  1043                           ;MAin_scooter.c: 188:      CCP_PWM_Set_Duty(&motor_sp,data*25);
  1044   00FB8A  0E7E               	movlw	low _motor_sp
  1045   00FB8C  6E38               	movwf	CCP_PWM_Set_Duty@_ccp_obj^0,c
  1046   00FB8E  0E00               	movlw	high _motor_sp
  1047   00FB90  6E39               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)^0,c
  1048   00FB92  505F               	movf	_data^0,w,c
  1049   00FB94  0D19               	mullw	25
  1050   00FB96  CFF3 F03A          	movff	prodl,CCP_PWM_Set_Duty@_duty
  1051   00FB9A  EC3C  F079         	call	_CCP_PWM_Set_Duty	;wreg free
  1052   00FB9E                     
  1053                           ;MAin_scooter.c: 190:      speed_down_btn_state_final=BUTTON_RELEASED;
  1054   00FB9E  0E01               	movlw	1
  1055   00FBA0  6E41               	movwf	_speed_down_btn_state_final^0,c
  1056   00FBA2                     
  1057                           ;MAin_scooter.c: 191:          segment_write(&myseg,data);
  1058   00FBA2  0E87               	movlw	low _myseg
  1059   00FBA4  6E0B               	movwf	segment_write@seg^0,c
  1060   00FBA6  0E00               	movlw	high _myseg
  1061   00FBA8  6E0C               	movwf	(segment_write@seg+1)^0,c
  1062   00FBAA  C05F  F00D         	movff	_data,segment_write@data
  1063   00FBAE  EC33  F075         	call	_segment_write	;wreg free
  1064   00FBB2                     l2668:
  1065                           
  1066                           ;MAin_scooter.c: 193:      if(speed_up_btn_state==BUTTON_PRESSED)
  1067   00FBB2  5051               	movf	_speed_up_btn_state^0,w,c
  1068   00FBB4  A4D8               	btfss	status,2,c
  1069   00FBB6  EFDF  F07D         	goto	u2641
  1070   00FBBA  EFE1  F07D         	goto	u2640
  1071   00FBBE                     u2641:
  1072   00FBBE  EFF6  F07D         	goto	l2676
  1073   00FBC2                     u2640:
  1074   00FBC2                     
  1075                           ;MAin_scooter.c: 194:      {speed_up_button_high_valid++;
  1076   00FBC2  4A5B               	infsnz	_speed_up_button_high_valid^0,f,c
  1077   00FBC4  2A5C               	incf	(_speed_up_button_high_valid+1)^0,f,c
  1078   00FBC6                     
  1079                           ;MAin_scooter.c: 195:      if(speed_up_button_high_valid>100)
  1080   00FBC6  505C               	movf	(_speed_up_button_high_valid+1)^0,w,c
  1081   00FBC8  E109               	bnz	u2650
  1082   00FBCA  0E65               	movlw	101
  1083   00FBCC  5C5B               	subwf	_speed_up_button_high_valid^0,w,c
  1084   00FBCE  A0D8               	btfss	status,0,c
  1085   00FBD0  EFEC  F07D         	goto	u2651
  1086   00FBD4  EFEE  F07D         	goto	u2650
  1087   00FBD8                     u2651:
  1088   00FBD8  EF04  F07E         	goto	l234
  1089   00FBDC                     u2650:
  1090   00FBDC                     
  1091                           ;MAin_scooter.c: 196:      {;MAin_scooter.c: 197:          speed_up_btn_state_final=BUTT
      +                          ON_PRESSED;
  1092   00FBDC  0E00               	movlw	0
  1093   00FBDE  6E42               	movwf	_speed_up_btn_state_final^0,c
  1094                           
  1095                           ;MAin_scooter.c: 198:           speed_up_button_high_valid=0;
  1096   00FBE0  0E00               	movlw	0
  1097   00FBE2  6E5C               	movwf	(_speed_up_button_high_valid+1)^0,c
  1098   00FBE4  0E00               	movlw	0
  1099   00FBE6  6E5B               	movwf	_speed_up_button_high_valid^0,c
  1100   00FBE8  EF04  F07E         	goto	l234
  1101   00FBEC                     l2676:
  1102   00FBEC  0451               	decf	_speed_up_btn_state^0,w,c
  1103   00FBEE  A4D8               	btfss	status,2,c
  1104   00FBF0  EFFC  F07D         	goto	u2661
  1105   00FBF4  EFFE  F07D         	goto	u2660
  1106   00FBF8                     u2661:
  1107   00FBF8  EF04  F07E         	goto	l234
  1108   00FBFC                     u2660:
  1109   00FBFC                     
  1110                           ;MAin_scooter.c: 202:      {;MAin_scooter.c: 203:          speed_up_button_high_valid=0;
  1111   00FBFC  0E00               	movlw	0
  1112   00FBFE  6E5C               	movwf	(_speed_up_button_high_valid+1)^0,c
  1113   00FC00  0E00               	movlw	0
  1114   00FC02  6E5B               	movwf	_speed_up_button_high_valid^0,c
  1115                           
  1116                           ;MAin_scooter.c: 204:          speed_up_btn_state_final=BUTTON_RELEASED;
  1117   00FC04  0E01               	movlw	1
  1118   00FC06  6E42               	movwf	_speed_up_btn_state_final^0,c
  1119   00FC08                     l234:
  1120                           
  1121                           ;MAin_scooter.c: 206:      if(speed_down_btn_state==BUTTON_PRESSED)
  1122   00FC08  5050               	movf	_speed_down_btn_state^0,w,c
  1123   00FC0A  A4D8               	btfss	status,2,c
  1124   00FC0C  EF0A  F07E         	goto	u2671
  1125   00FC10  EF0C  F07E         	goto	u2670
  1126   00FC14                     u2671:
  1127   00FC14  EF21  F07E         	goto	l2686
  1128   00FC18                     u2670:
  1129   00FC18                     
  1130                           ;MAin_scooter.c: 207:      {speed_down_button_high_valid++;
  1131   00FC18  4A59               	infsnz	_speed_down_button_high_valid^0,f,c
  1132   00FC1A  2A5A               	incf	(_speed_down_button_high_valid+1)^0,f,c
  1133   00FC1C                     
  1134                           ;MAin_scooter.c: 208:      if(speed_down_button_high_valid>100)
  1135   00FC1C  505A               	movf	(_speed_down_button_high_valid+1)^0,w,c
  1136   00FC1E  E109               	bnz	u2680
  1137   00FC20  0E65               	movlw	101
  1138   00FC22  5C59               	subwf	_speed_down_button_high_valid^0,w,c
  1139   00FC24  A0D8               	btfss	status,0,c
  1140   00FC26  EF17  F07E         	goto	u2681
  1141   00FC2A  EF19  F07E         	goto	u2680
  1142   00FC2E                     u2681:
  1143   00FC2E  EFAB  F07C         	goto	l213
  1144   00FC32                     u2680:
  1145   00FC32                     
  1146                           ;MAin_scooter.c: 209:      {;MAin_scooter.c: 210:          speed_down_btn_state_final=BU
      +                          TTON_PRESSED;
  1147   00FC32  0E00               	movlw	0
  1148   00FC34  6E41               	movwf	_speed_down_btn_state_final^0,c
  1149                           
  1150                           ;MAin_scooter.c: 211:          speed_down_button_high_valid=0;
  1151   00FC36  0E00               	movlw	0
  1152   00FC38  6E5A               	movwf	(_speed_down_button_high_valid+1)^0,c
  1153   00FC3A  0E00               	movlw	0
  1154   00FC3C  6E59               	movwf	_speed_down_button_high_valid^0,c
  1155   00FC3E  EFAB  F07C         	goto	l213
  1156   00FC42                     l2686:
  1157   00FC42  0450               	decf	_speed_down_btn_state^0,w,c
  1158   00FC44  A4D8               	btfss	status,2,c
  1159   00FC46  EF27  F07E         	goto	u2691
  1160   00FC4A  EF29  F07E         	goto	u2690
  1161   00FC4E                     u2691:
  1162   00FC4E  EFAB  F07C         	goto	l213
  1163   00FC52                     u2690:
  1164   00FC52                     
  1165                           ;MAin_scooter.c: 215:      {;MAin_scooter.c: 216:          speed_down_button_high_valid=
      +                          0;
  1166   00FC52  0E00               	movlw	0
  1167   00FC54  6E5A               	movwf	(_speed_down_button_high_valid+1)^0,c
  1168   00FC56  0E00               	movlw	0
  1169   00FC58  6E59               	movwf	_speed_down_button_high_valid^0,c
  1170                           
  1171                           ;MAin_scooter.c: 217:          speed_down_btn_state_final=BUTTON_RELEASED;
  1172   00FC5A  0E01               	movlw	1
  1173   00FC5C  6E41               	movwf	_speed_down_btn_state_final^0,c
  1174   00FC5E  EFAB  F07C         	goto	l213
  1175   00FC62  EF00  F000         	goto	start
  1176   00FC66                     __end_of_main:
  1177                           	callstack 0
  1178                           
  1179 ;; *************** function _system_init *****************
  1180 ;; Defined at:
  1181 ;;		line 225 in file "MAin_scooter.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;Total ram usage:        0 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; Hardware stack levels required when called: 2
  1202 ;; This function calls:
  1203 ;;		_CCP_Init
  1204 ;;		_DC_motor_initialize
  1205 ;;		_button_initialize
  1206 ;;		_led_initialize
  1207 ;;		_segment_intilaize
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text1
  1214   00EAEC                     __ptext1:
  1215                           	callstack 0
  1216   00EAEC                     _system_init:
  1217                           	callstack 28
  1218   00EAEC  0E49               	movlw	low _LIGHTS_btn_ON
  1219   00EAEE  6E0A               	movwf	button_initialize@btn^0,c
  1220   00EAF0  0E00               	movlw	high _LIGHTS_btn_ON
  1221   00EAF2  6E0B               	movwf	(button_initialize@btn+1)^0,c
  1222   00EAF4  EC76  F073         	call	_button_initialize	;wreg free
  1223                           
  1224                           ;MAin_scooter.c: 227:     button_initialize(&LIGHTS_btn_OFF);
  1225   00EAF8  0E92               	movlw	low _LIGHTS_btn_OFF
  1226   00EAFA  6E0A               	movwf	button_initialize@btn^0,c
  1227   00EAFC  0E00               	movlw	high _LIGHTS_btn_OFF
  1228   00EAFE  6E0B               	movwf	(button_initialize@btn+1)^0,c
  1229   00EB00  EC76  F073         	call	_button_initialize	;wreg free
  1230                           
  1231                           ;MAin_scooter.c: 228:     button_initialize(&Speed_up);
  1232   00EB04  0E8F               	movlw	low _Speed_up
  1233   00EB06  6E0A               	movwf	button_initialize@btn^0,c
  1234   00EB08  0E00               	movlw	high _Speed_up
  1235   00EB0A  6E0B               	movwf	(button_initialize@btn+1)^0,c
  1236   00EB0C  EC76  F073         	call	_button_initialize	;wreg free
  1237                           
  1238                           ;MAin_scooter.c: 229:     button_initialize(&Speed_down);
  1239   00EB10  0E8C               	movlw	low _Speed_down
  1240   00EB12  6E0A               	movwf	button_initialize@btn^0,c
  1241   00EB14  0E00               	movlw	high _Speed_down
  1242   00EB16  6E0B               	movwf	(button_initialize@btn+1)^0,c
  1243   00EB18  EC76  F073         	call	_button_initialize	;wreg free
  1244                           
  1245                           ;MAin_scooter.c: 230:     button_initialize(&MOTORS_FORWARD);
  1246   00EB1C  0E46               	movlw	low _MOTORS_FORWARD
  1247   00EB1E  6E0A               	movwf	button_initialize@btn^0,c
  1248   00EB20  0E00               	movlw	high _MOTORS_FORWARD
  1249   00EB22  6E0B               	movwf	(button_initialize@btn+1)^0,c
  1250   00EB24  EC76  F073         	call	_button_initialize	;wreg free
  1251                           
  1252                           ;MAin_scooter.c: 231:     button_initialize(&MOTORS_BACKWARD);
  1253   00EB28  0E43               	movlw	low _MOTORS_BACKWARD
  1254   00EB2A  6E0A               	movwf	button_initialize@btn^0,c
  1255   00EB2C  0E00               	movlw	high _MOTORS_BACKWARD
  1256   00EB2E  6E0B               	movwf	(button_initialize@btn+1)^0,c
  1257   00EB30  EC76  F073         	call	_button_initialize	;wreg free
  1258                           
  1259                           ;MAin_scooter.c: 232:     led_initialize(&LIGHT_LED);
  1260   00EB34  0E56               	movlw	low _LIGHT_LED
  1261   00EB36  6E0A               	movwf	led_initialize@led^0,c
  1262   00EB38  0E00               	movlw	high _LIGHT_LED
  1263   00EB3A  6E0B               	movwf	(led_initialize@led+1)^0,c
  1264   00EB3C  EC11  F074         	call	_led_initialize	;wreg free
  1265                           
  1266                           ;MAin_scooter.c: 233:     DC_motor_initialize(&motor_1);
  1267   00EB40  0E4E               	movlw	low _motor_1
  1268   00EB42  6E0A               	movwf	DC_motor_initialize@motor^0,c
  1269   00EB44  0E00               	movlw	high _motor_1
  1270   00EB46  6E0B               	movwf	(DC_motor_initialize@motor+1)^0,c
  1271   00EB48  EC0B  F076         	call	_DC_motor_initialize	;wreg free
  1272                           
  1273                           ;MAin_scooter.c: 234:     DC_motor_initialize(&motor_2);
  1274   00EB4C  0E4C               	movlw	low _motor_2
  1275   00EB4E  6E0A               	movwf	DC_motor_initialize@motor^0,c
  1276   00EB50  0E00               	movlw	high _motor_2
  1277   00EB52  6E0B               	movwf	(DC_motor_initialize@motor+1)^0,c
  1278   00EB54  EC0B  F076         	call	_DC_motor_initialize	;wreg free
  1279                           
  1280                           ;MAin_scooter.c: 235:     segment_intilaize(&myseg);
  1281   00EB58  0E87               	movlw	low _myseg
  1282   00EB5A  6E0A               	movwf	segment_intilaize@seg^0,c
  1283   00EB5C  0E00               	movlw	high _myseg
  1284   00EB5E  6E0B               	movwf	(segment_intilaize@seg+1)^0,c
  1285   00EB60  ECD2  F079         	call	_segment_intilaize	;wreg free
  1286                           
  1287                           ;MAin_scooter.c: 236:     CCP_Init(&motor_sp);
  1288   00EB64  0E7E               	movlw	low _motor_sp
  1289   00EB66  6E0E               	movwf	CCP_Init@_ccp_obj^0,c
  1290   00EB68  0E00               	movlw	high _motor_sp
  1291   00EB6A  6E0F               	movwf	(CCP_Init@_ccp_obj+1)^0,c
  1292   00EB6C  EC08  F07B         	call	_CCP_Init	;wreg free
  1293   00EB70  0012               	return		;funcret
  1294   00EB72                     __end_of_system_init:
  1295                           	callstack 0
  1296                           
  1297 ;; *************** function _segment_intilaize *****************
  1298 ;; Defined at:
  1299 ;;		line 3 in file "src/ECU/seven_seg.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  seg             2    9[COMRAM] PTR struct .
  1302 ;;		 -> myseg(5), 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  ret             1    0        unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      unsigned char 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;Total ram usage:        3 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; Hardware stack levels required when called: 1
  1321 ;; This function calls:
  1322 ;;		_gpio_pin_intilaize
  1323 ;; This function is called by:
  1324 ;;		_system_init
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text2
  1329   00F3A4                     __ptext2:
  1330                           	callstack 0
  1331   00F3A4                     _segment_intilaize:
  1332                           	callstack 28
  1333   00F3A4                     
  1334                           ;src/ECU/seven_seg.c: 6:     if (!(seg))
  1335   00F3A4  500A               	movf	segment_intilaize@seg^0,w,c
  1336   00F3A6  100B               	iorwf	(segment_intilaize@seg+1)^0,w,c
  1337   00F3A8  A4D8               	btfss	status,2,c
  1338   00F3AA  EFD9  F079         	goto	u1581
  1339   00F3AE  EFDB  F079         	goto	u1580
  1340   00F3B2                     u1581:
  1341   00F3B2  EFDD  F079         	goto	l2024
  1342   00F3B6                     u1580:
  1343   00F3B6  EF67  F07A         	goto	l316
  1344   00F3BA                     l2024:
  1345                           
  1346                           ;src/ECU/seven_seg.c: 9:         seg->Segment_Pins[0].direction =OUTPUT;
  1347   00F3BA  C00A  FFD9         	movff	segment_intilaize@seg,fsr2l
  1348   00F3BE  C00B  FFDA         	movff	segment_intilaize@seg+1,fsr2h
  1349   00F3C2  9CDF               	bcf	indf2,6,c
  1350   00F3C4                     
  1351                           ;src/ECU/seven_seg.c: 10:         seg->Segment_Pins[1].direction =OUTPUT;
  1352   00F3C4  EE20 F001          	lfsr	2,1
  1353   00F3C8  500A               	movf	segment_intilaize@seg^0,w,c
  1354   00F3CA  26D9               	addwf	fsr2l,f,c
  1355   00F3CC  500B               	movf	(segment_intilaize@seg+1)^0,w,c
  1356   00F3CE  22DA               	addwfc	fsr2h,f,c
  1357   00F3D0  9CDF               	bcf	indf2,6,c
  1358   00F3D2                     
  1359                           ;src/ECU/seven_seg.c: 11:         seg->Segment_Pins[2].direction =OUTPUT;
  1360   00F3D2  EE20 F002          	lfsr	2,2
  1361   00F3D6  500A               	movf	segment_intilaize@seg^0,w,c
  1362   00F3D8  26D9               	addwf	fsr2l,f,c
  1363   00F3DA  500B               	movf	(segment_intilaize@seg+1)^0,w,c
  1364   00F3DC  22DA               	addwfc	fsr2h,f,c
  1365   00F3DE  9CDF               	bcf	indf2,6,c
  1366   00F3E0                     
  1367                           ;src/ECU/seven_seg.c: 12:         seg->Segment_Pins[3].direction =OUTPUT;
  1368   00F3E0  EE20 F003          	lfsr	2,3
  1369   00F3E4  500A               	movf	segment_intilaize@seg^0,w,c
  1370   00F3E6  26D9               	addwf	fsr2l,f,c
  1371   00F3E8  500B               	movf	(segment_intilaize@seg+1)^0,w,c
  1372   00F3EA  22DA               	addwfc	fsr2h,f,c
  1373   00F3EC  9CDF               	bcf	indf2,6,c
  1374   00F3EE                     
  1375                           ;src/ECU/seven_seg.c: 13:         if ((seg->segment_type)==COMMON_CATHODE)
  1376   00F3EE  EE20 F004          	lfsr	2,4
  1377   00F3F2  500A               	movf	segment_intilaize@seg^0,w,c
  1378   00F3F4  26D9               	addwf	fsr2l,f,c
  1379   00F3F6  500B               	movf	(segment_intilaize@seg+1)^0,w,c
  1380   00F3F8  22DA               	addwfc	fsr2h,f,c
  1381   00F3FA  50DF               	movf	indf2,w,c
  1382   00F3FC  A4D8               	btfss	status,2,c
  1383   00F3FE  EF03  F07A         	goto	u1591
  1384   00F402  EF05  F07A         	goto	u1590
  1385   00F406                     u1591:
  1386   00F406  EF21  F07A         	goto	l2042
  1387   00F40A                     u1590:
  1388   00F40A                     
  1389                           ;src/ECU/seven_seg.c: 14:         {seg->Segment_Pins[0].logic=0 ;
  1390   00F40A  C00A  FFD9         	movff	segment_intilaize@seg,fsr2l
  1391   00F40E  C00B  FFDA         	movff	segment_intilaize@seg+1,fsr2h
  1392   00F412  9EDF               	bcf	indf2,7,c
  1393   00F414                     
  1394                           ;src/ECU/seven_seg.c: 15:                 seg->Segment_Pins[1].logic=0;
  1395   00F414  EE20 F001          	lfsr	2,1
  1396   00F418  500A               	movf	segment_intilaize@seg^0,w,c
  1397   00F41A  26D9               	addwf	fsr2l,f,c
  1398   00F41C  500B               	movf	(segment_intilaize@seg+1)^0,w,c
  1399   00F41E  22DA               	addwfc	fsr2h,f,c
  1400   00F420  9EDF               	bcf	indf2,7,c
  1401   00F422                     
  1402                           ;src/ECU/seven_seg.c: 16:                 seg->Segment_Pins[2].logic=0;
  1403   00F422  EE20 F002          	lfsr	2,2
  1404   00F426  500A               	movf	segment_intilaize@seg^0,w,c
  1405   00F428  26D9               	addwf	fsr2l,f,c
  1406   00F42A  500B               	movf	(segment_intilaize@seg+1)^0,w,c
  1407   00F42C  22DA               	addwfc	fsr2h,f,c
  1408   00F42E  9EDF               	bcf	indf2,7,c
  1409   00F430                     
  1410                           ;src/ECU/seven_seg.c: 17:                 seg->Segment_Pins[3].logic=0;
  1411   00F430  EE20 F003          	lfsr	2,3
  1412   00F434  500A               	movf	segment_intilaize@seg^0,w,c
  1413   00F436  26D9               	addwf	fsr2l,f,c
  1414   00F438  500B               	movf	(segment_intilaize@seg+1)^0,w,c
  1415   00F43A  22DA               	addwfc	fsr2h,f,c
  1416   00F43C  9EDF               	bcf	indf2,7,c
  1417                           
  1418                           ;src/ECU/seven_seg.c: 18:         }
  1419   00F43E  EF49  F07A         	goto	l2052
  1420   00F442                     l2042:
  1421   00F442  EE20 F004          	lfsr	2,4
  1422   00F446  500A               	movf	segment_intilaize@seg^0,w,c
  1423   00F448  26D9               	addwf	fsr2l,f,c
  1424   00F44A  500B               	movf	(segment_intilaize@seg+1)^0,w,c
  1425   00F44C  22DA               	addwfc	fsr2h,f,c
  1426   00F44E  04DE               	decf	postinc2,w,c
  1427   00F450  A4D8               	btfss	status,2,c
  1428   00F452  EF2D  F07A         	goto	u1601
  1429   00F456  EF2F  F07A         	goto	u1600
  1430   00F45A                     u1601:
  1431   00F45A  EF49  F07A         	goto	l2052
  1432   00F45E                     u1600:
  1433   00F45E                     
  1434                           ;src/ECU/seven_seg.c: 20:         { seg->Segment_Pins[0].logic=1;
  1435   00F45E  C00A  FFD9         	movff	segment_intilaize@seg,fsr2l
  1436   00F462  C00B  FFDA         	movff	segment_intilaize@seg+1,fsr2h
  1437   00F466  8EDF               	bsf	indf2,7,c
  1438   00F468                     
  1439                           ;src/ECU/seven_seg.c: 21:                 seg->Segment_Pins[1].logic=1;
  1440   00F468  EE20 F001          	lfsr	2,1
  1441   00F46C  500A               	movf	segment_intilaize@seg^0,w,c
  1442   00F46E  26D9               	addwf	fsr2l,f,c
  1443   00F470  500B               	movf	(segment_intilaize@seg+1)^0,w,c
  1444   00F472  22DA               	addwfc	fsr2h,f,c
  1445   00F474  8EDF               	bsf	indf2,7,c
  1446   00F476                     
  1447                           ;src/ECU/seven_seg.c: 22:                 seg->Segment_Pins[2].logic=1;
  1448   00F476  EE20 F002          	lfsr	2,2
  1449   00F47A  500A               	movf	segment_intilaize@seg^0,w,c
  1450   00F47C  26D9               	addwf	fsr2l,f,c
  1451   00F47E  500B               	movf	(segment_intilaize@seg+1)^0,w,c
  1452   00F480  22DA               	addwfc	fsr2h,f,c
  1453   00F482  8EDF               	bsf	indf2,7,c
  1454   00F484                     
  1455                           ;src/ECU/seven_seg.c: 23:                 seg->Segment_Pins[3].logic=1;}
  1456   00F484  EE20 F003          	lfsr	2,3
  1457   00F488  500A               	movf	segment_intilaize@seg^0,w,c
  1458   00F48A  26D9               	addwf	fsr2l,f,c
  1459   00F48C  500B               	movf	(segment_intilaize@seg+1)^0,w,c
  1460   00F48E  22DA               	addwfc	fsr2h,f,c
  1461   00F490  8EDF               	bsf	indf2,7,c
  1462   00F492                     l2052:
  1463                           
  1464                           ;src/ECU/seven_seg.c: 24:             gpio_pin_intilaize(&(seg->Segment_Pins[0]));
  1465   00F492  C00A  F001         	movff	segment_intilaize@seg,gpio_pin_intilaize@pin
  1466   00F496  C00B  F002         	movff	segment_intilaize@seg+1,gpio_pin_intilaize@pin+1
  1467   00F49A  EC68  F07A         	call	_gpio_pin_intilaize	;wreg free
  1468   00F49E                     
  1469                           ;src/ECU/seven_seg.c: 25:             gpio_pin_intilaize(&(seg->Segment_Pins[1]));
  1470   00F49E  0E01               	movlw	1
  1471   00F4A0  240A               	addwf	segment_intilaize@seg^0,w,c
  1472   00F4A2  6E01               	movwf	gpio_pin_intilaize@pin^0,c
  1473   00F4A4  0E00               	movlw	0
  1474   00F4A6  200B               	addwfc	(segment_intilaize@seg+1)^0,w,c
  1475   00F4A8  6E02               	movwf	(gpio_pin_intilaize@pin+1)^0,c
  1476   00F4AA  EC68  F07A         	call	_gpio_pin_intilaize	;wreg free
  1477   00F4AE                     
  1478                           ;src/ECU/seven_seg.c: 26:             gpio_pin_intilaize(&(seg->Segment_Pins[2]));
  1479   00F4AE  0E02               	movlw	2
  1480   00F4B0  240A               	addwf	segment_intilaize@seg^0,w,c
  1481   00F4B2  6E01               	movwf	gpio_pin_intilaize@pin^0,c
  1482   00F4B4  0E00               	movlw	0
  1483   00F4B6  200B               	addwfc	(segment_intilaize@seg+1)^0,w,c
  1484   00F4B8  6E02               	movwf	(gpio_pin_intilaize@pin+1)^0,c
  1485   00F4BA  EC68  F07A         	call	_gpio_pin_intilaize	;wreg free
  1486   00F4BE                     
  1487                           ;src/ECU/seven_seg.c: 27:             gpio_pin_intilaize(&(seg->Segment_Pins[3]));
  1488   00F4BE  0E03               	movlw	3
  1489   00F4C0  240A               	addwf	segment_intilaize@seg^0,w,c
  1490   00F4C2  6E01               	movwf	gpio_pin_intilaize@pin^0,c
  1491   00F4C4  0E00               	movlw	0
  1492   00F4C6  200B               	addwfc	(segment_intilaize@seg+1)^0,w,c
  1493   00F4C8  6E02               	movwf	(gpio_pin_intilaize@pin+1)^0,c
  1494   00F4CA  EC68  F07A         	call	_gpio_pin_intilaize	;wreg free
  1495   00F4CE                     l316:
  1496   00F4CE  0012               	return		;funcret
  1497   00F4D0                     __end_of_segment_intilaize:
  1498                           	callstack 0
  1499                           
  1500 ;; *************** function _led_initialize *****************
  1501 ;; Defined at:
  1502 ;;		line 11 in file "src/ECU/HAL_LED.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  led             2    9[COMRAM] PTR const struct .
  1505 ;;		 -> LIGHT_LED(1), 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  pin_obj         1   12[COMRAM] struct .
  1508 ;;  ret             1    0        unsigned char 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      unsigned char 
  1511 ;; Registers used:
  1512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1522 ;;Total ram usage:        4 bytes
  1523 ;; Hardware stack levels used: 1
  1524 ;; Hardware stack levels required when called: 1
  1525 ;; This function calls:
  1526 ;;		_gpio_pin_intilaize
  1527 ;; This function is called by:
  1528 ;;		_system_init
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text3
  1533   00E822                     __ptext3:
  1534                           	callstack 0
  1535   00E822                     _led_initialize:
  1536                           	callstack 28
  1537   00E822                     
  1538                           ;src/ECU/HAL_LED.c: 13:     if (!(led))
  1539   00E822  500A               	movf	led_initialize@led^0,w,c
  1540   00E824  100B               	iorwf	(led_initialize@led+1)^0,w,c
  1541   00E826  A4D8               	btfss	status,2,c
  1542   00E828  EF18  F074         	goto	u1531
  1543   00E82C  EF1A  F074         	goto	u1530
  1544   00E830                     u1531:
  1545   00E830  EF1C  F074         	goto	l287
  1546   00E834                     u1530:
  1547   00E834                     
  1548                           ;src/ECU/HAL_LED.c: 16:     }
  1549   00E834  EF47  F074         	goto	l289
  1550   00E838                     l287:
  1551                           
  1552                           ;src/ECU/HAL_LED.c: 18:     {;src/ECU/HAL_LED.c: 19:     pin_config_t pin_obj ;;src/ECU/
      +                          HAL_LED.c: 20:     pin_obj.direction =OUTPUT ;
  1553   00E838  9C0D               	bcf	led_initialize@pin_obj^0,6,c
  1554   00E83A                     
  1555                           ;src/ECU/HAL_LED.c: 21:      pin_obj.pin =led->pin ;
  1556   00E83A  C00A  FFD9         	movff	led_initialize@led,fsr2l
  1557   00E83E  C00B  FFDA         	movff	led_initialize@led+1,fsr2h
  1558   00E842  38DF               	swapf	223,w,c
  1559   00E844  0B07               	andlw	7
  1560   00E846  6E0C               	movwf	??_led_initialize^0,c
  1561   00E848  500D               	movf	led_initialize@pin_obj^0,w,c
  1562   00E84A  180C               	xorwf	??_led_initialize^0,w,c
  1563   00E84C  0BF8               	andlw	-8
  1564   00E84E  180C               	xorwf	??_led_initialize^0,w,c
  1565   00E850  6E0D               	movwf	led_initialize@pin_obj^0,c
  1566                           
  1567                           ;src/ECU/HAL_LED.c: 22:      pin_obj.port=led->port_name;
  1568   00E852  C00A  FFD9         	movff	led_initialize@led,fsr2l
  1569   00E856  C00B  FFDA         	movff	led_initialize@led+1,fsr2h
  1570   00E85A  50DF               	movf	223,w,c
  1571   00E85C  0B0F               	andlw	15
  1572   00E85E  6E0C               	movwf	??_led_initialize^0,c
  1573   00E860  460C               	rlncf	??_led_initialize^0,f,c
  1574   00E862  460C               	rlncf	??_led_initialize^0,f,c
  1575   00E864  460C               	rlncf	??_led_initialize^0,f,c
  1576   00E866  500D               	movf	led_initialize@pin_obj^0,w,c
  1577   00E868  180C               	xorwf	??_led_initialize^0,w,c
  1578   00E86A  0BC7               	andlw	-57
  1579   00E86C  180C               	xorwf	??_led_initialize^0,w,c
  1580   00E86E  6E0D               	movwf	led_initialize@pin_obj^0,c
  1581   00E870                     
  1582                           ;src/ECU/HAL_LED.c: 23:      pin_obj.logic=led->led_status;
  1583   00E870  C00A  FFD9         	movff	led_initialize@led,fsr2l
  1584   00E874  C00B  FFDA         	movff	led_initialize@led+1,fsr2h
  1585   00E878  AEDF               	btfss	indf2,7,c
  1586   00E87A  D002               	bra	u1545
  1587   00E87C  8E0D               	bsf	led_initialize@pin_obj^0,7,c
  1588   00E87E  D001               	bra	u1547
  1589   00E880                     u1545:
  1590   00E880  9E0D               	bcf	led_initialize@pin_obj^0,7,c
  1591   00E882                     u1547:
  1592   00E882  0E0D               	movlw	low led_initialize@pin_obj
  1593   00E884  6E01               	movwf	gpio_pin_intilaize@pin^0,c
  1594   00E886  0E00               	movlw	high led_initialize@pin_obj
  1595   00E888  6E02               	movwf	(gpio_pin_intilaize@pin+1)^0,c
  1596   00E88A  EC68  F07A         	call	_gpio_pin_intilaize	;wreg free
  1597   00E88E                     l289:
  1598   00E88E  0012               	return		;funcret
  1599   00E890                     __end_of_led_initialize:
  1600                           	callstack 0
  1601                           
  1602 ;; *************** function _button_initialize *****************
  1603 ;; Defined at:
  1604 ;;		line 2 in file "src/ECU/button.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  btn             2    9[COMRAM] PTR const struct .
  1607 ;;		 -> Speed_down(3), Speed_up(3), LIGHTS_btn_OFF(3), MOTORS_BACKWARD(3), 
  1608 ;;		 -> MOTORS_FORWARD(3), LIGHTS_btn_ON(3), 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  ret             1    0        unsigned char 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      unsigned char 
  1613 ;; Registers used:
  1614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;Total ram usage:        2 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; Hardware stack levels required when called: 1
  1627 ;; This function calls:
  1628 ;;		_gpio_pin_intilaize
  1629 ;; This function is called by:
  1630 ;;		_system_init
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text4
  1635   00E6EC                     __ptext4:
  1636                           	callstack 0
  1637   00E6EC                     _button_initialize:
  1638                           	callstack 28
  1639   00E6EC                     
  1640                           ;src/ECU/button.c: 4:     if (!(btn))
  1641   00E6EC  500A               	movf	button_initialize@btn^0,w,c
  1642   00E6EE  100B               	iorwf	(button_initialize@btn+1)^0,w,c
  1643   00E6F0  A4D8               	btfss	status,2,c
  1644   00E6F2  EF7D  F073         	goto	u1501
  1645   00E6F6  EF7F  F073         	goto	u1500
  1646   00E6FA                     u1501:
  1647   00E6FA  EF81  F073         	goto	l1968
  1648   00E6FE                     u1500:
  1649   00E6FE                     
  1650                           ;src/ECU/button.c: 7:     }
  1651   00E6FE  EF87  F073         	goto	l9
  1652   00E702                     l1968:
  1653                           
  1654                           ;src/ECU/button.c: 9:     {;src/ECU/button.c: 11:         gpio_pin_intilaize(&(btn->butt
      +                          on_pin));
  1655   00E702  C00A  F001         	movff	button_initialize@btn,gpio_pin_intilaize@pin
  1656   00E706  C00B  F002         	movff	button_initialize@btn+1,gpio_pin_intilaize@pin+1
  1657   00E70A  EC68  F07A         	call	_gpio_pin_intilaize	;wreg free
  1658   00E70E                     l9:
  1659   00E70E  0012               	return		;funcret
  1660   00E710                     __end_of_button_initialize:
  1661                           	callstack 0
  1662                           
  1663 ;; *************** function _DC_motor_initialize *****************
  1664 ;; Defined at:
  1665 ;;		line 2 in file "src/ECU/motor.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  motor           2    9[COMRAM] PTR const struct .
  1668 ;;		 -> motor_2(2), motor_1(2), 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  pin_obj_2       1   13[COMRAM] struct .
  1671 ;;  pin_obj_1       1   12[COMRAM] struct .
  1672 ;;  ret             1    0        unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      unsigned char 
  1675 ;; Registers used:
  1676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;Total ram usage:        5 bytes
  1687 ;; Hardware stack levels used: 1
  1688 ;; Hardware stack levels required when called: 1
  1689 ;; This function calls:
  1690 ;;		_gpio_pin_intilaize
  1691 ;; This function is called by:
  1692 ;;		_system_init
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text5
  1697   00EC16                     __ptext5:
  1698                           	callstack 0
  1699   00EC16                     _DC_motor_initialize:
  1700                           	callstack 28
  1701   00EC16                     
  1702                           ;src/ECU/motor.c: 4: if(!motor)
  1703   00EC16  500A               	movf	DC_motor_initialize@motor^0,w,c
  1704   00EC18  100B               	iorwf	(DC_motor_initialize@motor+1)^0,w,c
  1705   00EC1A  A4D8               	btfss	status,2,c
  1706   00EC1C  EF12  F076         	goto	u1551
  1707   00EC20  EF14  F076         	goto	u1550
  1708   00EC24                     u1551:
  1709   00EC24  EF16  F076         	goto	l2002
  1710   00EC28                     u1550:
  1711   00EC28                     
  1712                           ;src/ECU/motor.c: 6: }else{
  1713   00EC28  EF72  F076         	goto	l263
  1714   00EC2C                     l2002:
  1715                           
  1716                           ;src/ECU/motor.c: 7:     pin_config_t pin_obj_1 ;;src/ECU/motor.c: 8: pin_config_t pin_o
      +                          bj_2 ;;src/ECU/motor.c: 9:   pin_obj_1.port= motor->Motor_pins[0].port_name;
  1717   00EC2C  C00A  FFD9         	movff	DC_motor_initialize@motor,fsr2l
  1718   00EC30  C00B  FFDA         	movff	DC_motor_initialize@motor+1,fsr2h
  1719   00EC34  50DF               	movf	223,w,c
  1720   00EC36  0B0F               	andlw	15
  1721   00EC38  6E0C               	movwf	??_DC_motor_initialize^0,c
  1722   00EC3A  460C               	rlncf	??_DC_motor_initialize^0,f,c
  1723   00EC3C  460C               	rlncf	??_DC_motor_initialize^0,f,c
  1724   00EC3E  460C               	rlncf	??_DC_motor_initialize^0,f,c
  1725   00EC40  500D               	movf	DC_motor_initialize@pin_obj_1^0,w,c
  1726   00EC42  180C               	xorwf	??_DC_motor_initialize^0,w,c
  1727   00EC44  0BC7               	andlw	-57
  1728   00EC46  180C               	xorwf	??_DC_motor_initialize^0,w,c
  1729   00EC48  6E0D               	movwf	DC_motor_initialize@pin_obj_1^0,c
  1730                           
  1731                           ;src/ECU/motor.c: 10:     pin_obj_1.pin = motor->Motor_pins[0].pin;
  1732   00EC4A  C00A  FFD9         	movff	DC_motor_initialize@motor,fsr2l
  1733   00EC4E  C00B  FFDA         	movff	DC_motor_initialize@motor+1,fsr2h
  1734   00EC52  38DF               	swapf	223,w,c
  1735   00EC54  0B07               	andlw	7
  1736   00EC56  6E0C               	movwf	??_DC_motor_initialize^0,c
  1737   00EC58  500D               	movf	DC_motor_initialize@pin_obj_1^0,w,c
  1738   00EC5A  180C               	xorwf	??_DC_motor_initialize^0,w,c
  1739   00EC5C  0BF8               	andlw	-8
  1740   00EC5E  180C               	xorwf	??_DC_motor_initialize^0,w,c
  1741   00EC60  6E0D               	movwf	DC_motor_initialize@pin_obj_1^0,c
  1742                           
  1743                           ;src/ECU/motor.c: 11:     pin_obj_2.port= motor->Motor_pins[1].port_name;
  1744   00EC62  EE20 F001          	lfsr	2,1
  1745   00EC66  500A               	movf	DC_motor_initialize@motor^0,w,c
  1746   00EC68  26D9               	addwf	fsr2l,f,c
  1747   00EC6A  500B               	movf	(DC_motor_initialize@motor+1)^0,w,c
  1748   00EC6C  22DA               	addwfc	fsr2h,f,c
  1749   00EC6E  50DF               	movf	223,w,c
  1750   00EC70  0B0F               	andlw	15
  1751   00EC72  6E0C               	movwf	??_DC_motor_initialize^0,c
  1752   00EC74  460C               	rlncf	??_DC_motor_initialize^0,f,c
  1753   00EC76  460C               	rlncf	??_DC_motor_initialize^0,f,c
  1754   00EC78  460C               	rlncf	??_DC_motor_initialize^0,f,c
  1755   00EC7A  500E               	movf	DC_motor_initialize@pin_obj_2^0,w,c
  1756   00EC7C  180C               	xorwf	??_DC_motor_initialize^0,w,c
  1757   00EC7E  0BC7               	andlw	-57
  1758   00EC80  180C               	xorwf	??_DC_motor_initialize^0,w,c
  1759   00EC82  6E0E               	movwf	DC_motor_initialize@pin_obj_2^0,c
  1760                           
  1761                           ;src/ECU/motor.c: 12:    pin_obj_2.pin= motor->Motor_pins[1].pin;
  1762   00EC84  EE20 F001          	lfsr	2,1
  1763   00EC88  500A               	movf	DC_motor_initialize@motor^0,w,c
  1764   00EC8A  26D9               	addwf	fsr2l,f,c
  1765   00EC8C  500B               	movf	(DC_motor_initialize@motor+1)^0,w,c
  1766   00EC8E  22DA               	addwfc	fsr2h,f,c
  1767   00EC90  38DF               	swapf	223,w,c
  1768   00EC92  0B07               	andlw	7
  1769   00EC94  6E0C               	movwf	??_DC_motor_initialize^0,c
  1770   00EC96  500E               	movf	DC_motor_initialize@pin_obj_2^0,w,c
  1771   00EC98  180C               	xorwf	??_DC_motor_initialize^0,w,c
  1772   00EC9A  0BF8               	andlw	-8
  1773   00EC9C  180C               	xorwf	??_DC_motor_initialize^0,w,c
  1774   00EC9E  6E0E               	movwf	DC_motor_initialize@pin_obj_2^0,c
  1775   00ECA0                     
  1776                           ;src/ECU/motor.c: 13:           pin_obj_1.direction =OUTPUT ;
  1777   00ECA0  9C0D               	bcf	DC_motor_initialize@pin_obj_1^0,6,c
  1778   00ECA2                     
  1779                           ;src/ECU/motor.c: 14:   pin_obj_1.logic=motor->Motor_pins[0].DC_motor_Pin_status ;
  1780   00ECA2  C00A  FFD9         	movff	DC_motor_initialize@motor,fsr2l
  1781   00ECA6  C00B  FFDA         	movff	DC_motor_initialize@motor+1,fsr2h
  1782   00ECAA  AEDF               	btfss	indf2,7,c
  1783   00ECAC  D002               	bra	u1565
  1784   00ECAE  8E0D               	bsf	DC_motor_initialize@pin_obj_1^0,7,c
  1785   00ECB0  D001               	bra	u1567
  1786   00ECB2                     u1565:
  1787   00ECB2  9E0D               	bcf	DC_motor_initialize@pin_obj_1^0,7,c
  1788   00ECB4                     u1567:
  1789   00ECB4                     
  1790                           ;src/ECU/motor.c: 15:   pin_obj_2.direction =OUTPUT ;
  1791   00ECB4  9C0E               	bcf	DC_motor_initialize@pin_obj_2^0,6,c
  1792   00ECB6                     
  1793                           ;src/ECU/motor.c: 16:   pin_obj_2.logic=motor->Motor_pins[1].DC_motor_Pin_status ;
  1794   00ECB6  EE20 F001          	lfsr	2,1
  1795   00ECBA  500A               	movf	DC_motor_initialize@motor^0,w,c
  1796   00ECBC  26D9               	addwf	fsr2l,f,c
  1797   00ECBE  500B               	movf	(DC_motor_initialize@motor+1)^0,w,c
  1798   00ECC0  22DA               	addwfc	fsr2h,f,c
  1799   00ECC2  AEDF               	btfss	indf2,7,c
  1800   00ECC4  D002               	bra	u1575
  1801   00ECC6  8E0E               	bsf	DC_motor_initialize@pin_obj_2^0,7,c
  1802   00ECC8  D001               	bra	u1577
  1803   00ECCA                     u1575:
  1804   00ECCA  9E0E               	bcf	DC_motor_initialize@pin_obj_2^0,7,c
  1805   00ECCC                     u1577:
  1806   00ECCC                     
  1807                           ;src/ECU/motor.c: 17:   gpio_pin_intilaize(&pin_obj_1);
  1808   00ECCC  0E0D               	movlw	low DC_motor_initialize@pin_obj_1
  1809   00ECCE  6E01               	movwf	gpio_pin_intilaize@pin^0,c
  1810   00ECD0  0E00               	movlw	high DC_motor_initialize@pin_obj_1
  1811   00ECD2  6E02               	movwf	(gpio_pin_intilaize@pin+1)^0,c
  1812   00ECD4  EC68  F07A         	call	_gpio_pin_intilaize	;wreg free
  1813   00ECD8                     
  1814                           ;src/ECU/motor.c: 18:           gpio_pin_intilaize(&pin_obj_2);}
  1815   00ECD8  0E0E               	movlw	low DC_motor_initialize@pin_obj_2
  1816   00ECDA  6E01               	movwf	gpio_pin_intilaize@pin^0,c
  1817   00ECDC  0E00               	movlw	high DC_motor_initialize@pin_obj_2
  1818   00ECDE  6E02               	movwf	(gpio_pin_intilaize@pin+1)^0,c
  1819   00ECE0  EC68  F07A         	call	_gpio_pin_intilaize	;wreg free
  1820   00ECE4                     l263:
  1821   00ECE4  0012               	return		;funcret
  1822   00ECE6                     __end_of_DC_motor_initialize:
  1823                           	callstack 0
  1824                           
  1825 ;; *************** function _CCP_Init *****************
  1826 ;; Defined at:
  1827 ;;		line 7 in file "src/MCAL/CCP.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  _ccp_obj        2   13[COMRAM] PTR const struct .
  1830 ;;		 -> motor_sp(9), 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  ret             1    0        unsigned char 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      unsigned char 
  1835 ;; Registers used:
  1836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1843 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;Total ram usage:       12 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; Hardware stack levels required when called: 1
  1849 ;; This function calls:
  1850 ;;		___lldiv
  1851 ;;		_gpio_pin_intilaize
  1852 ;; This function is called by:
  1853 ;;		_system_init
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text6
  1858   00F610                     __ptext6:
  1859                           	callstack 0
  1860   00F610                     _CCP_Init:
  1861                           	callstack 28
  1862   00F610                     
  1863                           ;src/MCAL/CCP.c: 9:     if(!(_ccp_obj))
  1864   00F610  500E               	movf	CCP_Init@_ccp_obj^0,w,c
  1865   00F612  100F               	iorwf	(CCP_Init@_ccp_obj+1)^0,w,c
  1866   00F614  A4D8               	btfss	status,2,c
  1867   00F616  EF0F  F07B         	goto	u1611
  1868   00F61A  EF11  F07B         	goto	u1610
  1869   00F61E                     u1611:
  1870   00F61E  EF13  F07B         	goto	l2068
  1871   00F622                     u1610:
  1872   00F622                     
  1873                           ;src/MCAL/CCP.c: 11: }
  1874   00F622  EFCE  F07B         	goto	l353
  1875   00F626                     l2068:
  1876                           
  1877                           ;src/MCAL/CCP.c: 13: { gpio_pin_intilaize(&(_ccp_obj->ccp_pin));
  1878   00F626  0E05               	movlw	5
  1879   00F628  240E               	addwf	CCP_Init@_ccp_obj^0,w,c
  1880   00F62A  6E01               	movwf	gpio_pin_intilaize@pin^0,c
  1881   00F62C  0E00               	movlw	0
  1882   00F62E  200F               	addwfc	(CCP_Init@_ccp_obj+1)^0,w,c
  1883   00F630  6E02               	movwf	(gpio_pin_intilaize@pin+1)^0,c
  1884   00F632  EC68  F07A         	call	_gpio_pin_intilaize	;wreg free
  1885   00F636                     
  1886                           ;src/MCAL/CCP.c: 14: if(_ccp_obj->ccp_inst==CCP1_INST){
  1887   00F636  EE20 F008          	lfsr	2,8
  1888   00F63A  500E               	movf	CCP_Init@_ccp_obj^0,w,c
  1889   00F63C  26D9               	addwf	fsr2l,f,c
  1890   00F63E  500F               	movf	(CCP_Init@_ccp_obj+1)^0,w,c
  1891   00F640  22DA               	addwfc	fsr2h,f,c
  1892   00F642  50DF               	movf	indf2,w,c
  1893   00F644  A4D8               	btfss	status,2,c
  1894   00F646  EF27  F07B         	goto	u1621
  1895   00F64A  EF29  F07B         	goto	u1620
  1896   00F64E                     u1621:
  1897   00F64E  EF2D  F07B         	goto	l2074
  1898   00F652                     u1620:
  1899   00F652                     
  1900                           ;src/MCAL/CCP.c: 15:   (CCP1CONbits.CCP1M = ((uint8)0x00));}
  1901   00F652  0EF0               	movlw	-16
  1902   00F654  16BD               	andwf	189,f,c	;volatile
  1903   00F656  EF3D  F07B         	goto	l2078
  1904   00F65A                     l2074:
  1905   00F65A  EE20 F008          	lfsr	2,8
  1906   00F65E  500E               	movf	CCP_Init@_ccp_obj^0,w,c
  1907   00F660  26D9               	addwf	fsr2l,f,c
  1908   00F662  500F               	movf	(CCP_Init@_ccp_obj+1)^0,w,c
  1909   00F664  22DA               	addwfc	fsr2h,f,c
  1910   00F666  04DE               	decf	postinc2,w,c
  1911   00F668  A4D8               	btfss	status,2,c
  1912   00F66A  EF39  F07B         	goto	u1631
  1913   00F66E  EF3B  F07B         	goto	u1630
  1914   00F672                     u1631:
  1915   00F672  EF3D  F07B         	goto	l2078
  1916   00F676                     u1630:
  1917   00F676                     
  1918                           ;src/MCAL/CCP.c: 17:    (CCP2CONbits.CCP2M = ((uint8)0x00));
  1919   00F676  0EF0               	movlw	-16
  1920   00F678  16BA               	andwf	186,f,c	;volatile
  1921   00F67A                     l2078:
  1922                           
  1923                           ;src/MCAL/CCP.c: 34:  if(CCP_PWM_MODE_SELECTED==_ccp_obj->ccp1_mode)
  1924   00F67A  EE20 F006          	lfsr	2,6
  1925   00F67E  500E               	movf	CCP_Init@_ccp_obj^0,w,c
  1926   00F680  26D9               	addwf	fsr2l,f,c
  1927   00F682  500F               	movf	(CCP_Init@_ccp_obj+1)^0,w,c
  1928   00F684  22DA               	addwfc	fsr2h,f,c
  1929   00F686  0E02               	movlw	2
  1930   00F688  18DE               	xorwf	postinc2,w,c
  1931   00F68A  A4D8               	btfss	status,2,c
  1932   00F68C  EF4A  F07B         	goto	u1641
  1933   00F690  EF4C  F07B         	goto	u1640
  1934   00F694                     u1641:
  1935   00F694  EFCE  F07B         	goto	l353
  1936   00F698                     u1640:
  1937   00F698                     
  1938                           ;src/MCAL/CCP.c: 35: {;src/MCAL/CCP.c: 36:     if(_ccp_obj->ccp_inst==CCP1_INST){
  1939   00F698  EE20 F008          	lfsr	2,8
  1940   00F69C  500E               	movf	CCP_Init@_ccp_obj^0,w,c
  1941   00F69E  26D9               	addwf	fsr2l,f,c
  1942   00F6A0  500F               	movf	(CCP_Init@_ccp_obj+1)^0,w,c
  1943   00F6A2  22DA               	addwfc	fsr2h,f,c
  1944   00F6A4  50DF               	movf	indf2,w,c
  1945   00F6A6  A4D8               	btfss	status,2,c
  1946   00F6A8  EF58  F07B         	goto	u1651
  1947   00F6AC  EF5A  F07B         	goto	u1650
  1948   00F6B0                     u1651:
  1949   00F6B0  EF60  F07B         	goto	l2084
  1950   00F6B4                     u1650:
  1951   00F6B4                     
  1952                           ;src/MCAL/CCP.c: 37:   (CCP1CONbits.CCP1M = ((uint8)0x0C));
  1953   00F6B4  50BD               	movf	189,w,c	;volatile
  1954   00F6B6  0BF0               	andlw	-16
  1955   00F6B8  090C               	iorlw	12
  1956   00F6BA  6EBD               	movwf	189,c	;volatile
  1957                           
  1958                           ;src/MCAL/CCP.c: 38:     }
  1959   00F6BC  EF72  F07B         	goto	l2088
  1960   00F6C0                     l2084:
  1961   00F6C0  EE20 F008          	lfsr	2,8
  1962   00F6C4  500E               	movf	CCP_Init@_ccp_obj^0,w,c
  1963   00F6C6  26D9               	addwf	fsr2l,f,c
  1964   00F6C8  500F               	movf	(CCP_Init@_ccp_obj+1)^0,w,c
  1965   00F6CA  22DA               	addwfc	fsr2h,f,c
  1966   00F6CC  04DE               	decf	postinc2,w,c
  1967   00F6CE  A4D8               	btfss	status,2,c
  1968   00F6D0  EF6C  F07B         	goto	u1661
  1969   00F6D4  EF6E  F07B         	goto	u1660
  1970   00F6D8                     u1661:
  1971   00F6D8  EF72  F07B         	goto	l2088
  1972   00F6DC                     u1660:
  1973   00F6DC                     
  1974                           ;src/MCAL/CCP.c: 40:   (CCP2CONbits.CCP2M = ((uint8)0x0C));
  1975   00F6DC  50BA               	movf	186,w,c	;volatile
  1976   00F6DE  0BF0               	andlw	-16
  1977   00F6E0  090C               	iorlw	12
  1978   00F6E2  6EBA               	movwf	186,c	;volatile
  1979   00F6E4                     l2088:
  1980                           
  1981                           ;src/MCAL/CCP.c: 42:     PR2=(4000000UL/4/_ccp_obj->pwm_frequncy/_ccp_obj->timer2_postsc
      +                          aler_value/_ccp_obj->timer2_prescaler_value-1);
  1982   00F6E4  C00E  FFD9         	movff	CCP_Init@_ccp_obj,fsr2l
  1983   00F6E8  C00F  FFDA         	movff	CCP_Init@_ccp_obj+1,fsr2h
  1984   00F6EC  CFDE F010          	movff	postinc2,??_CCP_Init
  1985   00F6F0  CFDD F011          	movff	postdec2,??_CCP_Init+1
  1986   00F6F4  C010  F005         	movff	??_CCP_Init,___lldiv@divisor
  1987   00F6F8  C011  F006         	movff	??_CCP_Init+1,___lldiv@divisor+1
  1988   00F6FC  6A07               	clrf	(___lldiv@divisor+2)^0,c
  1989   00F6FE  6A08               	clrf	(___lldiv@divisor+3)^0,c
  1990   00F700  0E40               	movlw	64
  1991   00F702  6E01               	movwf	___lldiv@dividend^0,c
  1992   00F704  0E42               	movlw	66
  1993   00F706  6E02               	movwf	(___lldiv@dividend+1)^0,c
  1994   00F708  0E0F               	movlw	15
  1995   00F70A  6E03               	movwf	(___lldiv@dividend+2)^0,c
  1996   00F70C  0E00               	movlw	0
  1997   00F70E  6E04               	movwf	(___lldiv@dividend+3)^0,c
  1998   00F710  ECB9  F075         	call	___lldiv	;wreg free
  1999   00F714  C001  F012         	movff	?___lldiv,_CCP_Init$1539
  2000   00F718  C002  F013         	movff	?___lldiv+1,_CCP_Init$1539+1
  2001   00F71C  C003  F014         	movff	?___lldiv+2,_CCP_Init$1539+2
  2002   00F720  C004  F015         	movff	?___lldiv+3,_CCP_Init$1539+3
  2003   00F724                     
  2004                           ;src/MCAL/CCP.c: 42:     PR2=(4000000UL/4/_ccp_obj->pwm_frequncy/_ccp_obj->timer2_postsc
      +                          aler_value/_ccp_obj->timer2_prescaler_value-1);
  2005   00F724  EE20 F002          	lfsr	2,2
  2006   00F728  500E               	movf	CCP_Init@_ccp_obj^0,w,c
  2007   00F72A  26D9               	addwf	fsr2l,f,c
  2008   00F72C  500F               	movf	(CCP_Init@_ccp_obj+1)^0,w,c
  2009   00F72E  22DA               	addwfc	fsr2h,f,c
  2010   00F730  50DF               	movf	indf2,w,c
  2011   00F732  6E10               	movwf	??_CCP_Init^0,c
  2012   00F734  5010               	movf	??_CCP_Init^0,w,c
  2013   00F736  6E05               	movwf	___lldiv@divisor^0,c
  2014   00F738  6A06               	clrf	(___lldiv@divisor+1)^0,c
  2015   00F73A  6A07               	clrf	(___lldiv@divisor+2)^0,c
  2016   00F73C  6A08               	clrf	(___lldiv@divisor+3)^0,c
  2017   00F73E  C012  F001         	movff	_CCP_Init$1539,___lldiv@dividend
  2018   00F742  C013  F002         	movff	_CCP_Init$1539+1,___lldiv@dividend+1
  2019   00F746  C014  F003         	movff	_CCP_Init$1539+2,___lldiv@dividend+2
  2020   00F74A  C015  F004         	movff	_CCP_Init$1539+3,___lldiv@dividend+3
  2021   00F74E  ECB9  F075         	call	___lldiv	;wreg free
  2022   00F752  C001  F016         	movff	?___lldiv,_CCP_Init$1540
  2023   00F756  C002  F017         	movff	?___lldiv+1,_CCP_Init$1540+1
  2024   00F75A  C003  F018         	movff	?___lldiv+2,_CCP_Init$1540+2
  2025   00F75E  C004  F019         	movff	?___lldiv+3,_CCP_Init$1540+3
  2026   00F762                     
  2027                           ;src/MCAL/CCP.c: 42:     PR2=(4000000UL/4/_ccp_obj->pwm_frequncy/_ccp_obj->timer2_postsc
      +                          aler_value/_ccp_obj->timer2_prescaler_value-1);
  2028   00F762  C016  F001         	movff	_CCP_Init$1540,___lldiv@dividend
  2029   00F766  C017  F002         	movff	_CCP_Init$1540+1,___lldiv@dividend+1
  2030   00F76A  C018  F003         	movff	_CCP_Init$1540+2,___lldiv@dividend+2
  2031   00F76E  C019  F004         	movff	_CCP_Init$1540+3,___lldiv@dividend+3
  2032   00F772  EE20 F003          	lfsr	2,3
  2033   00F776  500E               	movf	CCP_Init@_ccp_obj^0,w,c
  2034   00F778  26D9               	addwf	fsr2l,f,c
  2035   00F77A  500F               	movf	(CCP_Init@_ccp_obj+1)^0,w,c
  2036   00F77C  22DA               	addwfc	fsr2h,f,c
  2037   00F77E  50DF               	movf	indf2,w,c
  2038   00F780  6E10               	movwf	??_CCP_Init^0,c
  2039   00F782  5010               	movf	??_CCP_Init^0,w,c
  2040   00F784  6E05               	movwf	___lldiv@divisor^0,c
  2041   00F786  6A06               	clrf	(___lldiv@divisor+1)^0,c
  2042   00F788  6A07               	clrf	(___lldiv@divisor+2)^0,c
  2043   00F78A  6A08               	clrf	(___lldiv@divisor+3)^0,c
  2044   00F78C  ECB9  F075         	call	___lldiv	;wreg free
  2045   00F790  0401               	decf	?___lldiv^0,w,c
  2046   00F792  6ECB               	movwf	203,c	;volatile
  2047   00F794                     
  2048                           ;src/MCAL/CCP.c: 44:     PIR1bits.TMR2IF=0;
  2049   00F794  929E               	bcf	158,1,c	;volatile
  2050   00F796                     
  2051                           ;src/MCAL/CCP.c: 45:     T2CONbits.T2CKPS=4;
  2052   00F796  0EFC               	movlw	-4
  2053   00F798  16CA               	andwf	202,f,c	;volatile
  2054   00F79A                     
  2055                           ;src/MCAL/CCP.c: 46:     T2CONbits.TMR2ON=1;
  2056   00F79A  84CA               	bsf	202,2,c	;volatile
  2057   00F79C                     l353:
  2058   00F79C  0012               	return		;funcret
  2059   00F79E                     __end_of_CCP_Init:
  2060                           	callstack 0
  2061                           
  2062 ;; *************** function _gpio_pin_intilaize *****************
  2063 ;; Defined at:
  2064 ;;		line 7 in file "INC/MCAL/GPIO.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  pin             2    0[COMRAM] PTR const struct .
  2067 ;;		 -> led_initialize@pin_obj(1), DC_motor_initialize@pin_obj_2(1), DC_motor_initialize@pin_obj_1(1), Speed_down(3), 
  2068 ;;		 -> Speed_up(3), LIGHTS_btn_OFF(3), MOTORS_BACKWARD(3), MOTORS_FORWARD(3), 
  2069 ;;		 -> LIGHTS_btn_ON(3), myseg.Segment_Pins(4), myseg(5), motor_sp(9), 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  ret             1    8[COMRAM] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      unsigned char 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;Total ram usage:        9 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_button_initialize
  2091 ;;		_DC_motor_initialize
  2092 ;;		_led_initialize
  2093 ;;		_segment_intilaize
  2094 ;;		_CCP_Init
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text7
  2099   00F4D0                     __ptext7:
  2100                           	callstack 0
  2101   00F4D0                     _gpio_pin_intilaize:
  2102                           	callstack 28
  2103   00F4D0                     
  2104                           ;INC/MCAL/GPIO.c: 8:     Std_ReturnType ret=(Std_ReturnType)0x01;
  2105   00F4D0  0E01               	movlw	1
  2106   00F4D2  6E09               	movwf	gpio_pin_intilaize@ret^0,c
  2107   00F4D4                     
  2108                           ;INC/MCAL/GPIO.c: 9:    if (!(pin)||((pin->pin)>(8 -1)))
  2109   00F4D4  5001               	movf	gpio_pin_intilaize@pin^0,w,c
  2110   00F4D6  1002               	iorwf	(gpio_pin_intilaize@pin+1)^0,w,c
  2111   00F4D8  B4D8               	btfsc	status,2,c
  2112   00F4DA  EF71  F07A         	goto	u1381
  2113   00F4DE  EF73  F07A         	goto	u1380
  2114   00F4E2                     u1381:
  2115   00F4E2  EF82  F07A         	goto	l1900
  2116   00F4E6                     u1380:
  2117   00F4E6  C001  FFD9         	movff	gpio_pin_intilaize@pin,fsr2l
  2118   00F4EA  C002  FFDA         	movff	gpio_pin_intilaize@pin+1,fsr2h
  2119   00F4EE  50DF               	movf	223,w,c
  2120   00F4F0  0B07               	andlw	7
  2121   00F4F2  6E03               	movwf	??_gpio_pin_intilaize^0,c
  2122   00F4F4  0E07               	movlw	7
  2123   00F4F6  6403               	cpfsgt	??_gpio_pin_intilaize^0,c
  2124   00F4F8  EF80  F07A         	goto	u1391
  2125   00F4FC  EF82  F07A         	goto	u1390
  2126   00F500                     u1391:
  2127   00F500  EFE5  F07A         	goto	l1908
  2128   00F504                     u1390:
  2129   00F504                     l1900:
  2130                           
  2131                           ;INC/MCAL/GPIO.c: 10:     { ret=(Std_ReturnType)0x00;
  2132   00F504  0E00               	movlw	0
  2133   00F506  6E09               	movwf	gpio_pin_intilaize@ret^0,c
  2134                           
  2135                           ;INC/MCAL/GPIO.c: 12:     }
  2136   00F508  EF06  F07B         	goto	l1910
  2137   00F50C                     l1902:
  2138                           
  2139                           ;INC/MCAL/GPIO.c: 16:         (*(tris_register[pin->port])|=(0X01<<pin->pin));
  2140   00F50C  C001  FFD9         	movff	gpio_pin_intilaize@pin,fsr2l
  2141   00F510  C002  FFDA         	movff	gpio_pin_intilaize@pin+1,fsr2h
  2142   00F514  50DF               	movf	223,w,c
  2143   00F516  0B07               	andlw	7
  2144   00F518  6E03               	movwf	??_gpio_pin_intilaize^0,c
  2145   00F51A  0E01               	movlw	1
  2146   00F51C  6E04               	movwf	(??_gpio_pin_intilaize+1)^0,c
  2147   00F51E  2A03               	incf	??_gpio_pin_intilaize^0,f,c
  2148   00F520  EF94  F07A         	goto	u1404
  2149   00F524                     u1405:
  2150   00F524  90D8               	bcf	status,0,c
  2151   00F526  3604               	rlcf	(??_gpio_pin_intilaize+1)^0,f,c
  2152   00F528                     u1404:
  2153   00F528  2E03               	decfsz	??_gpio_pin_intilaize^0,f,c
  2154   00F52A  EF92  F07A         	goto	u1405
  2155   00F52E  C001  FFD9         	movff	gpio_pin_intilaize@pin,fsr2l
  2156   00F532  C002  FFDA         	movff	gpio_pin_intilaize@pin+1,fsr2h
  2157   00F536  30DF               	rrcf	223,w,c
  2158   00F538  32E8               	rrcf	wreg,f,c
  2159   00F53A  32E8               	rrcf	wreg,f,c
  2160   00F53C  0B07               	andlw	7
  2161   00F53E  6E05               	movwf	(??_gpio_pin_intilaize+2)^0,c
  2162   00F540  5005               	movf	(??_gpio_pin_intilaize+2)^0,w,c
  2163   00F542  0D02               	mullw	2
  2164   00F544  0E74               	movlw	low _tris_register
  2165   00F546  24F3               	addwf	243,w,c
  2166   00F548  6ED9               	movwf	fsr2l,c
  2167   00F54A  0E00               	movlw	high _tris_register
  2168   00F54C  20F4               	addwfc	prodh,w,c
  2169   00F54E  6EDA               	movwf	fsr2h,c
  2170   00F550  CFDE F006          	movff	postinc2,??_gpio_pin_intilaize+3
  2171   00F554  CFDD F007          	movff	postdec2,??_gpio_pin_intilaize+4
  2172   00F558  C006  FFD9         	movff	??_gpio_pin_intilaize+3,fsr2l
  2173   00F55C  C007  FFDA         	movff	??_gpio_pin_intilaize+4,fsr2h
  2174   00F560  5004               	movf	(??_gpio_pin_intilaize+1)^0,w,c
  2175   00F562  12DF               	iorwf	indf2,f,c
  2176                           
  2177                           ;INC/MCAL/GPIO.c: 17:         break ;
  2178   00F564  EF06  F07B         	goto	l1910
  2179   00F568                     l1904:
  2180                           
  2181                           ;INC/MCAL/GPIO.c: 19:     (*(tris_register[pin->port])&=~(0X01<<pin->pin));
  2182   00F568  C001  FFD9         	movff	gpio_pin_intilaize@pin,fsr2l
  2183   00F56C  C002  FFDA         	movff	gpio_pin_intilaize@pin+1,fsr2h
  2184   00F570  50DF               	movf	223,w,c
  2185   00F572  0B07               	andlw	7
  2186   00F574  6E03               	movwf	??_gpio_pin_intilaize^0,c
  2187   00F576  0E01               	movlw	1
  2188   00F578  6E04               	movwf	(??_gpio_pin_intilaize+1)^0,c
  2189   00F57A  2A03               	incf	??_gpio_pin_intilaize^0,f,c
  2190   00F57C  EFC2  F07A         	goto	u1414
  2191   00F580                     u1415:
  2192   00F580  90D8               	bcf	status,0,c
  2193   00F582  3604               	rlcf	(??_gpio_pin_intilaize+1)^0,f,c
  2194   00F584                     u1414:
  2195   00F584  2E03               	decfsz	??_gpio_pin_intilaize^0,f,c
  2196   00F586  EFC0  F07A         	goto	u1415
  2197   00F58A  5004               	movf	(??_gpio_pin_intilaize+1)^0,w,c
  2198   00F58C  0AFF               	xorlw	255
  2199   00F58E  6E05               	movwf	(??_gpio_pin_intilaize+2)^0,c
  2200   00F590  C001  FFD9         	movff	gpio_pin_intilaize@pin,fsr2l
  2201   00F594  C002  FFDA         	movff	gpio_pin_intilaize@pin+1,fsr2h
  2202   00F598  30DF               	rrcf	223,w,c
  2203   00F59A  32E8               	rrcf	wreg,f,c
  2204   00F59C  32E8               	rrcf	wreg,f,c
  2205   00F59E  0B07               	andlw	7
  2206   00F5A0  6E06               	movwf	(??_gpio_pin_intilaize+3)^0,c
  2207   00F5A2  5006               	movf	(??_gpio_pin_intilaize+3)^0,w,c
  2208   00F5A4  0D02               	mullw	2
  2209   00F5A6  0E74               	movlw	low _tris_register
  2210   00F5A8  24F3               	addwf	243,w,c
  2211   00F5AA  6ED9               	movwf	fsr2l,c
  2212   00F5AC  0E00               	movlw	high _tris_register
  2213   00F5AE  20F4               	addwfc	prodh,w,c
  2214   00F5B0  6EDA               	movwf	fsr2h,c
  2215   00F5B2  CFDE F007          	movff	postinc2,??_gpio_pin_intilaize+4
  2216   00F5B6  CFDD F008          	movff	postdec2,??_gpio_pin_intilaize+5
  2217   00F5BA  C007  FFD9         	movff	??_gpio_pin_intilaize+4,fsr2l
  2218   00F5BE  C008  FFDA         	movff	??_gpio_pin_intilaize+5,fsr2h
  2219   00F5C2  5005               	movf	(??_gpio_pin_intilaize+2)^0,w,c
  2220   00F5C4  16DF               	andwf	indf2,f,c
  2221                           
  2222                           ;INC/MCAL/GPIO.c: 20:       break ;
  2223   00F5C6  EF06  F07B         	goto	l1910
  2224   00F5CA                     l1908:
  2225   00F5CA  C001  FFD9         	movff	gpio_pin_intilaize@pin,fsr2l
  2226   00F5CE  C002  FFDA         	movff	gpio_pin_intilaize@pin+1,fsr2h
  2227   00F5D2  BCDF               	btfsc	indf2,6,c
  2228   00F5D4  EFEE  F07A         	goto	u1421
  2229   00F5D8  EFF1  F07A         	goto	u1420
  2230   00F5DC                     u1421:
  2231   00F5DC  0E01               	movlw	1
  2232   00F5DE  EFF2  F07A         	goto	u1430
  2233   00F5E2                     u1420:
  2234   00F5E2  0E00               	movlw	0
  2235   00F5E4                     u1430:
  2236   00F5E4  6E03               	movwf	??_gpio_pin_intilaize^0,c
  2237   00F5E6  6A04               	clrf	(??_gpio_pin_intilaize+1)^0,c
  2238                           
  2239                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2240                           ; Switch size 1, requested type "simple"
  2241                           ; Number of cases is 1, Range of values is 0 to 0
  2242                           ; switch strategies available:
  2243                           ; Name         Instructions Cycles
  2244                           ; simple_byte            4     3 (average)
  2245                           ;	Chosen strategy is simple_byte
  2246   00F5E8  5004               	movf	(??_gpio_pin_intilaize+1)^0,w,c
  2247   00F5EA  0A00               	xorlw	0	; case 0
  2248   00F5EC  B4D8               	btfsc	status,2,c
  2249   00F5EE  EFFB  F07A         	goto	l2710
  2250   00F5F2  EF82  F07A         	goto	l1900
  2251   00F5F6                     l2710:
  2252                           
  2253                           ; Switch size 1, requested type "simple"
  2254                           ; Number of cases is 2, Range of values is 0 to 1
  2255                           ; switch strategies available:
  2256                           ; Name         Instructions Cycles
  2257                           ; simple_byte            7     4 (average)
  2258                           ;	Chosen strategy is simple_byte
  2259   00F5F6  5003               	movf	??_gpio_pin_intilaize^0,w,c
  2260   00F5F8  0A00               	xorlw	0	; case 0
  2261   00F5FA  B4D8               	btfsc	status,2,c
  2262   00F5FC  EFB4  F07A         	goto	l1904
  2263   00F600  0A01               	xorlw	1	; case 1
  2264   00F602  B4D8               	btfsc	status,2,c
  2265   00F604  EF86  F07A         	goto	l1902
  2266   00F608  EF82  F07A         	goto	l1900
  2267   00F60C                     l1910:
  2268                           
  2269                           ;INC/MCAL/GPIO.c: 23: return ret ;}
  2270   00F60C  5009               	movf	gpio_pin_intilaize@ret^0,w,c
  2271   00F60E  0012               	return		;funcret
  2272   00F610                     __end_of_gpio_pin_intilaize:
  2273                           	callstack 0
  2274                           
  2275 ;; *************** function ___lldiv *****************
  2276 ;; Defined at:
  2277 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  dividend        4    0[COMRAM] unsigned long 
  2280 ;;  divisor         4    4[COMRAM] unsigned long 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  quotient        4    8[COMRAM] unsigned long 
  2283 ;;  counter         1   12[COMRAM] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  4    0[COMRAM] unsigned long 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2293 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;Total ram usage:       13 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_CCP_Init
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text8
  2307   00EB72                     __ptext8:
  2308                           	callstack 0
  2309   00EB72                     ___lldiv:
  2310                           	callstack 28
  2311   00EB72  0E00               	movlw	0
  2312   00EB74  6E09               	movwf	___lldiv@quotient^0,c
  2313   00EB76  0E00               	movlw	0
  2314   00EB78  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  2315   00EB7A  0E00               	movlw	0
  2316   00EB7C  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  2317   00EB7E  0E00               	movlw	0
  2318   00EB80  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  2319   00EB82  5005               	movf	___lldiv@divisor^0,w,c
  2320   00EB84  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  2321   00EB86  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  2322   00EB88  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  2323   00EB8A  B4D8               	btfsc	status,2,c
  2324   00EB8C  EFCA  F075         	goto	u1471
  2325   00EB90  EFCC  F075         	goto	u1470
  2326   00EB94                     u1471:
  2327   00EB94  EF02  F076         	goto	l416
  2328   00EB98                     u1470:
  2329   00EB98  0E01               	movlw	1
  2330   00EB9A  6E0D               	movwf	___lldiv@counter^0,c
  2331   00EB9C  EFD6  F075         	goto	l1948
  2332   00EBA0                     l1946:
  2333   00EBA0  90D8               	bcf	status,0,c
  2334   00EBA2  3605               	rlcf	___lldiv@divisor^0,f,c
  2335   00EBA4  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  2336   00EBA6  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  2337   00EBA8  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  2338   00EBAA  2A0D               	incf	___lldiv@counter^0,f,c
  2339   00EBAC                     l1948:
  2340   00EBAC  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  2341   00EBAE  EFDB  F075         	goto	u1481
  2342   00EBB2  EFDD  F075         	goto	u1480
  2343   00EBB6                     u1481:
  2344   00EBB6  EFD0  F075         	goto	l1946
  2345   00EBBA                     u1480:
  2346   00EBBA                     l1950:
  2347   00EBBA  90D8               	bcf	status,0,c
  2348   00EBBC  3609               	rlcf	___lldiv@quotient^0,f,c
  2349   00EBBE  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  2350   00EBC0  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  2351   00EBC2  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  2352   00EBC4  5005               	movf	___lldiv@divisor^0,w,c
  2353   00EBC6  5C01               	subwf	___lldiv@dividend^0,w,c
  2354   00EBC8  5006               	movf	(___lldiv@divisor+1)^0,w,c
  2355   00EBCA  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  2356   00EBCC  5007               	movf	(___lldiv@divisor+2)^0,w,c
  2357   00EBCE  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  2358   00EBD0  5008               	movf	(___lldiv@divisor+3)^0,w,c
  2359   00EBD2  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  2360   00EBD4  A0D8               	btfss	status,0,c
  2361   00EBD6  EFEF  F075         	goto	u1491
  2362   00EBDA  EFF1  F075         	goto	u1490
  2363   00EBDE                     u1491:
  2364   00EBDE  EFFA  F075         	goto	l1958
  2365   00EBE2                     u1490:
  2366   00EBE2  5005               	movf	___lldiv@divisor^0,w,c
  2367   00EBE4  5E01               	subwf	___lldiv@dividend^0,f,c
  2368   00EBE6  5006               	movf	(___lldiv@divisor+1)^0,w,c
  2369   00EBE8  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  2370   00EBEA  5007               	movf	(___lldiv@divisor+2)^0,w,c
  2371   00EBEC  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  2372   00EBEE  5008               	movf	(___lldiv@divisor+3)^0,w,c
  2373   00EBF0  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  2374   00EBF2  8009               	bsf	___lldiv@quotient^0,0,c
  2375   00EBF4                     l1958:
  2376   00EBF4  90D8               	bcf	status,0,c
  2377   00EBF6  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  2378   00EBF8  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  2379   00EBFA  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  2380   00EBFC  3205               	rrcf	___lldiv@divisor^0,f,c
  2381   00EBFE  2E0D               	decfsz	___lldiv@counter^0,f,c
  2382   00EC00  EFDD  F075         	goto	l1950
  2383   00EC04                     l416:
  2384   00EC04  C009  F001         	movff	___lldiv@quotient,?___lldiv
  2385   00EC08  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  2386   00EC0C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  2387   00EC10  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  2388   00EC14  0012               	return		;funcret
  2389   00EC16                     __end_of___lldiv:
  2390                           	callstack 0
  2391                           
  2392 ;; *************** function _segment_write *****************
  2393 ;; Defined at:
  2394 ;;		line 31 in file "src/ECU/seven_seg.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  seg             2   10[COMRAM] PTR const struct .
  2397 ;;		 -> myseg(5), 
  2398 ;;  data            1   12[COMRAM] unsigned char 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;  ret             1    0        unsigned char 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      unsigned char 
  2403 ;; Registers used:
  2404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2410 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;Total ram usage:        3 bytes
  2415 ;; Hardware stack levels used: 1
  2416 ;; Hardware stack levels required when called: 1
  2417 ;; This function calls:
  2418 ;;		_gpio_pin_write_logic
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text9
  2425   00EA66                     __ptext9:
  2426                           	callstack 0
  2427   00EA66                     _segment_write:
  2428                           	callstack 29
  2429   00EA66                     
  2430                           ;src/ECU/seven_seg.c: 34:     if (!(seg)||(data>9))
  2431   00EA66  500B               	movf	segment_write@seg^0,w,c
  2432   00EA68  100C               	iorwf	(segment_write@seg+1)^0,w,c
  2433   00EA6A  B4D8               	btfsc	status,2,c
  2434   00EA6C  EF3A  F075         	goto	u2401
  2435   00EA70  EF3C  F075         	goto	u2400
  2436   00EA74                     u2401:
  2437   00EA74  EF44  F075         	goto	l2536
  2438   00EA78                     u2400:
  2439   00EA78  0E09               	movlw	9
  2440   00EA7A  640D               	cpfsgt	segment_write@data^0,c
  2441   00EA7C  EF42  F075         	goto	u2411
  2442   00EA80  EF44  F075         	goto	u2410
  2443   00EA84                     u2411:
  2444   00EA84  EF46  F075         	goto	l2538
  2445   00EA88                     u2410:
  2446   00EA88                     l2536:
  2447   00EA88  EF75  F075         	goto	l323
  2448   00EA8C                     l2538:
  2449                           
  2450                           ;src/ECU/seven_seg.c: 37:         gpio_pin_write_logic(&(seg->Segment_Pins[0]),(data&0b0
      +                          0000001));
  2451   00EA8C  C00B  F001         	movff	segment_write@seg,gpio_pin_write_logic@pin
  2452   00EA90  C00C  F002         	movff	segment_write@seg+1,gpio_pin_write_logic@pin+1
  2453   00EA94  500D               	movf	segment_write@data^0,w,c
  2454   00EA96  0B01               	andlw	1
  2455   00EA98  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2456   00EA9A  ECB7  F078         	call	_gpio_pin_write_logic	;wreg free
  2457                           
  2458                           ;src/ECU/seven_seg.c: 38:          gpio_pin_write_logic(&(seg->Segment_Pins[1]),(data&0b
      +                          00000010)>>1);
  2459   00EA9E  0E01               	movlw	1
  2460   00EAA0  240B               	addwf	segment_write@seg^0,w,c
  2461   00EAA2  6E01               	movwf	gpio_pin_write_logic@pin^0,c
  2462   00EAA4  0E00               	movlw	0
  2463   00EAA6  200C               	addwfc	(segment_write@seg+1)^0,w,c
  2464   00EAA8  6E02               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  2465   00EAAA  90D8               	bcf	status,0,c
  2466   00EAAC  300D               	rrcf	segment_write@data^0,w,c
  2467   00EAAE  0B01               	andlw	1
  2468   00EAB0  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2469   00EAB2  ECB7  F078         	call	_gpio_pin_write_logic	;wreg free
  2470                           
  2471                           ;src/ECU/seven_seg.c: 39:           gpio_pin_write_logic(&(seg->Segment_Pins[2]),(data&0
      +                          b00000100)>>2);
  2472   00EAB6  0E02               	movlw	2
  2473   00EAB8  240B               	addwf	segment_write@seg^0,w,c
  2474   00EABA  6E01               	movwf	gpio_pin_write_logic@pin^0,c
  2475   00EABC  0E00               	movlw	0
  2476   00EABE  200C               	addwfc	(segment_write@seg+1)^0,w,c
  2477   00EAC0  6E02               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  2478   00EAC2  400D               	rrncf	segment_write@data^0,w,c
  2479   00EAC4  42E8               	rrncf	wreg,f,c
  2480   00EAC6  0B3F               	andlw	63
  2481   00EAC8  0B01               	andlw	1
  2482   00EACA  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2483   00EACC  ECB7  F078         	call	_gpio_pin_write_logic	;wreg free
  2484                           
  2485                           ;src/ECU/seven_seg.c: 40:               gpio_pin_write_logic(&(seg->Segment_Pins[3]),(da
      +                          ta&0b00001000)>>3);
  2486   00EAD0  0E03               	movlw	3
  2487   00EAD2  240B               	addwf	segment_write@seg^0,w,c
  2488   00EAD4  6E01               	movwf	gpio_pin_write_logic@pin^0,c
  2489   00EAD6  0E00               	movlw	0
  2490   00EAD8  200C               	addwfc	(segment_write@seg+1)^0,w,c
  2491   00EADA  6E02               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  2492   00EADC  380D               	swapf	segment_write@data^0,w,c
  2493   00EADE  46E8               	rlncf	wreg,f,c
  2494   00EAE0  0B1F               	andlw	31
  2495   00EAE2  0B01               	andlw	1
  2496   00EAE4  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2497   00EAE6  ECB7  F078         	call	_gpio_pin_write_logic	;wreg free
  2498   00EAEA                     l323:
  2499   00EAEA  0012               	return		;funcret
  2500   00EAEC                     __end_of_segment_write:
  2501                           	callstack 0
  2502                           
  2503 ;; *************** function _scooter_stop *****************
  2504 ;; Defined at:
  2505 ;;		line 246 in file "MAin_scooter.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;Total ram usage:        0 bytes
  2524 ;; Hardware stack levels used: 1
  2525 ;; Hardware stack levels required when called: 2
  2526 ;; This function calls:
  2527 ;;		_DC_motor_Stop
  2528 ;; This function is called by:
  2529 ;;		_main
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text10
  2534   00E6D2                     __ptext10:
  2535                           	callstack 0
  2536   00E6D2                     _scooter_stop:
  2537                           	callstack 28
  2538   00E6D2                     
  2539                           ;MAin_scooter.c: 248:     DC_motor_Stop(&motor_2);
  2540   00E6D2  0E4C               	movlw	low _motor_2
  2541   00E6D4  6E0B               	movwf	DC_motor_Stop@motor^0,c
  2542   00E6D6  0E00               	movlw	high _motor_2
  2543   00E6D8  6E0C               	movwf	(DC_motor_Stop@motor+1)^0,c
  2544   00E6DA  EC4B  F077         	call	_DC_motor_Stop	;wreg free
  2545                           
  2546                           ;MAin_scooter.c: 249:       DC_motor_Stop(&motor_1);
  2547   00E6DE  0E4E               	movlw	low _motor_1
  2548   00E6E0  6E0B               	movwf	DC_motor_Stop@motor^0,c
  2549   00E6E2  0E00               	movlw	high _motor_1
  2550   00E6E4  6E0C               	movwf	(DC_motor_Stop@motor+1)^0,c
  2551   00E6E6  EC4B  F077         	call	_DC_motor_Stop	;wreg free
  2552   00E6EA  0012               	return		;funcret
  2553   00E6EC                     __end_of_scooter_stop:
  2554                           	callstack 0
  2555                           
  2556 ;; *************** function _DC_motor_Stop *****************
  2557 ;; Defined at:
  2558 ;;		line 62 in file "src/ECU/motor.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  motor           2   10[COMRAM] PTR const struct .
  2561 ;;		 -> motor_2(2), motor_1(2), 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  pin_obj_2       1   14[COMRAM] struct .
  2564 ;;  pin_obj_1       1   13[COMRAM] struct .
  2565 ;;  ret             1    0        unsigned char 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      unsigned char 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;Total ram usage:        5 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 1
  2582 ;; This function calls:
  2583 ;;		_gpio_pin_write_logic
  2584 ;; This function is called by:
  2585 ;;		_scooter_stop
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text11
  2590   00EE96                     __ptext11:
  2591                           	callstack 0
  2592   00EE96                     _DC_motor_Stop:
  2593                           	callstack 28
  2594   00EE96                     
  2595                           ;src/ECU/motor.c: 64: if(!motor)
  2596   00EE96  500B               	movf	DC_motor_Stop@motor^0,w,c
  2597   00EE98  100C               	iorwf	(DC_motor_Stop@motor+1)^0,w,c
  2598   00EE9A  A4D8               	btfss	status,2,c
  2599   00EE9C  EF52  F077         	goto	u1731
  2600   00EEA0  EF54  F077         	goto	u1730
  2601   00EEA4                     u1731:
  2602   00EEA4  EF56  F077         	goto	l2152
  2603   00EEA8                     u1730:
  2604   00EEA8                     
  2605                           ;src/ECU/motor.c: 66: }else{
  2606   00EEA8  EFB6  F077         	goto	l278
  2607   00EEAC                     l2152:
  2608                           
  2609                           ;src/ECU/motor.c: 67:     pin_config_t pin_obj_1 ;;src/ECU/motor.c: 68: pin_config_t pin
      +                          _obj_2 ;;src/ECU/motor.c: 69:   pin_obj_1.port= motor->Motor_pins[0].port_name;
  2610   00EEAC  C00B  FFD9         	movff	DC_motor_Stop@motor,fsr2l
  2611   00EEB0  C00C  FFDA         	movff	DC_motor_Stop@motor+1,fsr2h
  2612   00EEB4  50DF               	movf	223,w,c
  2613   00EEB6  0B0F               	andlw	15
  2614   00EEB8  6E0D               	movwf	??_DC_motor_Stop^0,c
  2615   00EEBA  460D               	rlncf	??_DC_motor_Stop^0,f,c
  2616   00EEBC  460D               	rlncf	??_DC_motor_Stop^0,f,c
  2617   00EEBE  460D               	rlncf	??_DC_motor_Stop^0,f,c
  2618   00EEC0  500E               	movf	DC_motor_Stop@pin_obj_1^0,w,c
  2619   00EEC2  180D               	xorwf	??_DC_motor_Stop^0,w,c
  2620   00EEC4  0BC7               	andlw	-57
  2621   00EEC6  180D               	xorwf	??_DC_motor_Stop^0,w,c
  2622   00EEC8  6E0E               	movwf	DC_motor_Stop@pin_obj_1^0,c
  2623                           
  2624                           ;src/ECU/motor.c: 70:     pin_obj_1.pin = motor->Motor_pins[0].pin;
  2625   00EECA  C00B  FFD9         	movff	DC_motor_Stop@motor,fsr2l
  2626   00EECE  C00C  FFDA         	movff	DC_motor_Stop@motor+1,fsr2h
  2627   00EED2  38DF               	swapf	223,w,c
  2628   00EED4  0B07               	andlw	7
  2629   00EED6  6E0D               	movwf	??_DC_motor_Stop^0,c
  2630   00EED8  500E               	movf	DC_motor_Stop@pin_obj_1^0,w,c
  2631   00EEDA  180D               	xorwf	??_DC_motor_Stop^0,w,c
  2632   00EEDC  0BF8               	andlw	-8
  2633   00EEDE  180D               	xorwf	??_DC_motor_Stop^0,w,c
  2634   00EEE0  6E0E               	movwf	DC_motor_Stop@pin_obj_1^0,c
  2635                           
  2636                           ;src/ECU/motor.c: 71:     pin_obj_2.port= motor->Motor_pins[1].port_name;
  2637   00EEE2  EE20 F001          	lfsr	2,1
  2638   00EEE6  500B               	movf	DC_motor_Stop@motor^0,w,c
  2639   00EEE8  26D9               	addwf	fsr2l,f,c
  2640   00EEEA  500C               	movf	(DC_motor_Stop@motor+1)^0,w,c
  2641   00EEEC  22DA               	addwfc	fsr2h,f,c
  2642   00EEEE  50DF               	movf	223,w,c
  2643   00EEF0  0B0F               	andlw	15
  2644   00EEF2  6E0D               	movwf	??_DC_motor_Stop^0,c
  2645   00EEF4  460D               	rlncf	??_DC_motor_Stop^0,f,c
  2646   00EEF6  460D               	rlncf	??_DC_motor_Stop^0,f,c
  2647   00EEF8  460D               	rlncf	??_DC_motor_Stop^0,f,c
  2648   00EEFA  500F               	movf	DC_motor_Stop@pin_obj_2^0,w,c
  2649   00EEFC  180D               	xorwf	??_DC_motor_Stop^0,w,c
  2650   00EEFE  0BC7               	andlw	-57
  2651   00EF00  180D               	xorwf	??_DC_motor_Stop^0,w,c
  2652   00EF02  6E0F               	movwf	DC_motor_Stop@pin_obj_2^0,c
  2653                           
  2654                           ;src/ECU/motor.c: 72:    pin_obj_2.pin= motor->Motor_pins[1].pin;
  2655   00EF04  EE20 F001          	lfsr	2,1
  2656   00EF08  500B               	movf	DC_motor_Stop@motor^0,w,c
  2657   00EF0A  26D9               	addwf	fsr2l,f,c
  2658   00EF0C  500C               	movf	(DC_motor_Stop@motor+1)^0,w,c
  2659   00EF0E  22DA               	addwfc	fsr2h,f,c
  2660   00EF10  38DF               	swapf	223,w,c
  2661   00EF12  0B07               	andlw	7
  2662   00EF14  6E0D               	movwf	??_DC_motor_Stop^0,c
  2663   00EF16  500F               	movf	DC_motor_Stop@pin_obj_2^0,w,c
  2664   00EF18  180D               	xorwf	??_DC_motor_Stop^0,w,c
  2665   00EF1A  0BF8               	andlw	-8
  2666   00EF1C  180D               	xorwf	??_DC_motor_Stop^0,w,c
  2667   00EF1E  6E0F               	movwf	DC_motor_Stop@pin_obj_2^0,c
  2668   00EF20                     
  2669                           ;src/ECU/motor.c: 73:           pin_obj_1.direction =OUTPUT ;
  2670   00EF20  9C0E               	bcf	DC_motor_Stop@pin_obj_1^0,6,c
  2671   00EF22                     
  2672                           ;src/ECU/motor.c: 74:   pin_obj_1.logic=motor->Motor_pins[0].DC_motor_Pin_status ;
  2673   00EF22  C00B  FFD9         	movff	DC_motor_Stop@motor,fsr2l
  2674   00EF26  C00C  FFDA         	movff	DC_motor_Stop@motor+1,fsr2h
  2675   00EF2A  AEDF               	btfss	indf2,7,c
  2676   00EF2C  D002               	bra	u1745
  2677   00EF2E  8E0E               	bsf	DC_motor_Stop@pin_obj_1^0,7,c
  2678   00EF30  D001               	bra	u1747
  2679   00EF32                     u1745:
  2680   00EF32  9E0E               	bcf	DC_motor_Stop@pin_obj_1^0,7,c
  2681   00EF34                     u1747:
  2682   00EF34                     
  2683                           ;src/ECU/motor.c: 75:   pin_obj_2.direction =OUTPUT ;
  2684   00EF34  9C0F               	bcf	DC_motor_Stop@pin_obj_2^0,6,c
  2685   00EF36                     
  2686                           ;src/ECU/motor.c: 76:   pin_obj_2.logic=motor->Motor_pins[1].DC_motor_Pin_status ;
  2687   00EF36  EE20 F001          	lfsr	2,1
  2688   00EF3A  500B               	movf	DC_motor_Stop@motor^0,w,c
  2689   00EF3C  26D9               	addwf	fsr2l,f,c
  2690   00EF3E  500C               	movf	(DC_motor_Stop@motor+1)^0,w,c
  2691   00EF40  22DA               	addwfc	fsr2h,f,c
  2692   00EF42  AEDF               	btfss	indf2,7,c
  2693   00EF44  D002               	bra	u1755
  2694   00EF46  8E0F               	bsf	DC_motor_Stop@pin_obj_2^0,7,c
  2695   00EF48  D001               	bra	u1757
  2696   00EF4A                     u1755:
  2697   00EF4A  9E0F               	bcf	DC_motor_Stop@pin_obj_2^0,7,c
  2698   00EF4C                     u1757:
  2699   00EF4C                     
  2700                           ;src/ECU/motor.c: 77:     gpio_pin_write_logic(&pin_obj_1,LOW) ;
  2701   00EF4C  0E0E               	movlw	low DC_motor_Stop@pin_obj_1
  2702   00EF4E  6E01               	movwf	gpio_pin_write_logic@pin^0,c
  2703   00EF50  0E00               	movlw	high DC_motor_Stop@pin_obj_1
  2704   00EF52  6E02               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  2705   00EF54  0E00               	movlw	0
  2706   00EF56  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2707   00EF58  ECB7  F078         	call	_gpio_pin_write_logic	;wreg free
  2708   00EF5C                     
  2709                           ;src/ECU/motor.c: 78:   gpio_pin_write_logic(&pin_obj_2,LOW) ;}
  2710   00EF5C  0E0F               	movlw	low DC_motor_Stop@pin_obj_2
  2711   00EF5E  6E01               	movwf	gpio_pin_write_logic@pin^0,c
  2712   00EF60  0E00               	movlw	high DC_motor_Stop@pin_obj_2
  2713   00EF62  6E02               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  2714   00EF64  0E00               	movlw	0
  2715   00EF66  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2716   00EF68  ECB7  F078         	call	_gpio_pin_write_logic	;wreg free
  2717   00EF6C                     l278:
  2718   00EF6C  0012               	return		;funcret
  2719   00EF6E                     __end_of_DC_motor_Stop:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function _scooter_forward *****************
  2723 ;; Defined at:
  2724 ;;		line 238 in file "MAin_scooter.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used: 1
  2744 ;; Hardware stack levels required when called: 2
  2745 ;; This function calls:
  2746 ;;		_DC_motor_MOve_clock_Wise
  2747 ;; This function is called by:
  2748 ;;		_main
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text12
  2753   00E6B8                     __ptext12:
  2754                           	callstack 0
  2755   00E6B8                     _scooter_forward:
  2756                           	callstack 28
  2757   00E6B8                     
  2758                           ;MAin_scooter.c: 239:     DC_motor_MOve_clock_Wise(&motor_1);
  2759   00E6B8  0E4E               	movlw	low _motor_1
  2760   00E6BA  6E0B               	movwf	DC_motor_MOve_clock_Wise@motor^0,c
  2761   00E6BC  0E00               	movlw	high _motor_1
  2762   00E6BE  6E0C               	movwf	(DC_motor_MOve_clock_Wise@motor+1)^0,c
  2763   00E6C0  ECDF  F076         	call	_DC_motor_MOve_clock_Wise	;wreg free
  2764                           
  2765                           ;MAin_scooter.c: 240:      DC_motor_MOve_clock_Wise(&motor_2);
  2766   00E6C4  0E4C               	movlw	low _motor_2
  2767   00E6C6  6E0B               	movwf	DC_motor_MOve_clock_Wise@motor^0,c
  2768   00E6C8  0E00               	movlw	high _motor_2
  2769   00E6CA  6E0C               	movwf	(DC_motor_MOve_clock_Wise@motor+1)^0,c
  2770   00E6CC  ECDF  F076         	call	_DC_motor_MOve_clock_Wise	;wreg free
  2771   00E6D0  0012               	return		;funcret
  2772   00E6D2                     __end_of_scooter_forward:
  2773                           	callstack 0
  2774                           
  2775 ;; *************** function _DC_motor_MOve_clock_Wise *****************
  2776 ;; Defined at:
  2777 ;;		line 22 in file "src/ECU/motor.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  motor           2   10[COMRAM] PTR const struct .
  2780 ;;		 -> motor_2(2), motor_1(2), 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  pin_obj_2       1   14[COMRAM] struct .
  2783 ;;  pin_obj_1       1   13[COMRAM] struct .
  2784 ;;  ret             1    0        unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      unsigned char 
  2787 ;; Registers used:
  2788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;Total ram usage:        5 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; Hardware stack levels required when called: 1
  2801 ;; This function calls:
  2802 ;;		_gpio_pin_write_logic
  2803 ;; This function is called by:
  2804 ;;		_scooter_forward
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text13
  2809   00EDBE                     __ptext13:
  2810                           	callstack 0
  2811   00EDBE                     _DC_motor_MOve_clock_Wise:
  2812                           	callstack 28
  2813   00EDBE                     
  2814                           ;src/ECU/motor.c: 24: if(!motor)
  2815   00EDBE  500B               	movf	DC_motor_MOve_clock_Wise@motor^0,w,c
  2816   00EDC0  100C               	iorwf	(DC_motor_MOve_clock_Wise@motor+1)^0,w,c
  2817   00EDC2  A4D8               	btfss	status,2,c
  2818   00EDC4  EFE6  F076         	goto	u1671
  2819   00EDC8  EFE8  F076         	goto	u1670
  2820   00EDCC                     u1671:
  2821   00EDCC  EFEA  F076         	goto	l2108
  2822   00EDD0                     u1670:
  2823   00EDD0                     
  2824                           ;src/ECU/motor.c: 26: }else{
  2825   00EDD0  EF4A  F077         	goto	l268
  2826   00EDD4                     l2108:
  2827                           
  2828                           ;src/ECU/motor.c: 27:     pin_config_t pin_obj_1 ;;src/ECU/motor.c: 28: pin_config_t pin
      +                          _obj_2 ;;src/ECU/motor.c: 29:   pin_obj_1.port= motor->Motor_pins[0].port_name;
  2829   00EDD4  C00B  FFD9         	movff	DC_motor_MOve_clock_Wise@motor,fsr2l
  2830   00EDD8  C00C  FFDA         	movff	DC_motor_MOve_clock_Wise@motor+1,fsr2h
  2831   00EDDC  50DF               	movf	223,w,c
  2832   00EDDE  0B0F               	andlw	15
  2833   00EDE0  6E0D               	movwf	??_DC_motor_MOve_clock_Wise^0,c
  2834   00EDE2  460D               	rlncf	??_DC_motor_MOve_clock_Wise^0,f,c
  2835   00EDE4  460D               	rlncf	??_DC_motor_MOve_clock_Wise^0,f,c
  2836   00EDE6  460D               	rlncf	??_DC_motor_MOve_clock_Wise^0,f,c
  2837   00EDE8  500E               	movf	DC_motor_MOve_clock_Wise@pin_obj_1^0,w,c
  2838   00EDEA  180D               	xorwf	??_DC_motor_MOve_clock_Wise^0,w,c
  2839   00EDEC  0BC7               	andlw	-57
  2840   00EDEE  180D               	xorwf	??_DC_motor_MOve_clock_Wise^0,w,c
  2841   00EDF0  6E0E               	movwf	DC_motor_MOve_clock_Wise@pin_obj_1^0,c
  2842                           
  2843                           ;src/ECU/motor.c: 30:     pin_obj_1.pin = motor->Motor_pins[0].pin;
  2844   00EDF2  C00B  FFD9         	movff	DC_motor_MOve_clock_Wise@motor,fsr2l
  2845   00EDF6  C00C  FFDA         	movff	DC_motor_MOve_clock_Wise@motor+1,fsr2h
  2846   00EDFA  38DF               	swapf	223,w,c
  2847   00EDFC  0B07               	andlw	7
  2848   00EDFE  6E0D               	movwf	??_DC_motor_MOve_clock_Wise^0,c
  2849   00EE00  500E               	movf	DC_motor_MOve_clock_Wise@pin_obj_1^0,w,c
  2850   00EE02  180D               	xorwf	??_DC_motor_MOve_clock_Wise^0,w,c
  2851   00EE04  0BF8               	andlw	-8
  2852   00EE06  180D               	xorwf	??_DC_motor_MOve_clock_Wise^0,w,c
  2853   00EE08  6E0E               	movwf	DC_motor_MOve_clock_Wise@pin_obj_1^0,c
  2854                           
  2855                           ;src/ECU/motor.c: 31:     pin_obj_2.port= motor->Motor_pins[1].port_name;
  2856   00EE0A  EE20 F001          	lfsr	2,1
  2857   00EE0E  500B               	movf	DC_motor_MOve_clock_Wise@motor^0,w,c
  2858   00EE10  26D9               	addwf	fsr2l,f,c
  2859   00EE12  500C               	movf	(DC_motor_MOve_clock_Wise@motor+1)^0,w,c
  2860   00EE14  22DA               	addwfc	fsr2h,f,c
  2861   00EE16  50DF               	movf	223,w,c
  2862   00EE18  0B0F               	andlw	15
  2863   00EE1A  6E0D               	movwf	??_DC_motor_MOve_clock_Wise^0,c
  2864   00EE1C  460D               	rlncf	??_DC_motor_MOve_clock_Wise^0,f,c
  2865   00EE1E  460D               	rlncf	??_DC_motor_MOve_clock_Wise^0,f,c
  2866   00EE20  460D               	rlncf	??_DC_motor_MOve_clock_Wise^0,f,c
  2867   00EE22  500F               	movf	DC_motor_MOve_clock_Wise@pin_obj_2^0,w,c
  2868   00EE24  180D               	xorwf	??_DC_motor_MOve_clock_Wise^0,w,c
  2869   00EE26  0BC7               	andlw	-57
  2870   00EE28  180D               	xorwf	??_DC_motor_MOve_clock_Wise^0,w,c
  2871   00EE2A  6E0F               	movwf	DC_motor_MOve_clock_Wise@pin_obj_2^0,c
  2872                           
  2873                           ;src/ECU/motor.c: 32:    pin_obj_2.pin= motor->Motor_pins[1].pin;
  2874   00EE2C  EE20 F001          	lfsr	2,1
  2875   00EE30  500B               	movf	DC_motor_MOve_clock_Wise@motor^0,w,c
  2876   00EE32  26D9               	addwf	fsr2l,f,c
  2877   00EE34  500C               	movf	(DC_motor_MOve_clock_Wise@motor+1)^0,w,c
  2878   00EE36  22DA               	addwfc	fsr2h,f,c
  2879   00EE38  38DF               	swapf	223,w,c
  2880   00EE3A  0B07               	andlw	7
  2881   00EE3C  6E0D               	movwf	??_DC_motor_MOve_clock_Wise^0,c
  2882   00EE3E  500F               	movf	DC_motor_MOve_clock_Wise@pin_obj_2^0,w,c
  2883   00EE40  180D               	xorwf	??_DC_motor_MOve_clock_Wise^0,w,c
  2884   00EE42  0BF8               	andlw	-8
  2885   00EE44  180D               	xorwf	??_DC_motor_MOve_clock_Wise^0,w,c
  2886   00EE46  6E0F               	movwf	DC_motor_MOve_clock_Wise@pin_obj_2^0,c
  2887   00EE48                     
  2888                           ;src/ECU/motor.c: 33:           pin_obj_1.direction =OUTPUT ;
  2889   00EE48  9C0E               	bcf	DC_motor_MOve_clock_Wise@pin_obj_1^0,6,c
  2890   00EE4A                     
  2891                           ;src/ECU/motor.c: 34:   pin_obj_1.logic=motor->Motor_pins[0].DC_motor_Pin_status ;
  2892   00EE4A  C00B  FFD9         	movff	DC_motor_MOve_clock_Wise@motor,fsr2l
  2893   00EE4E  C00C  FFDA         	movff	DC_motor_MOve_clock_Wise@motor+1,fsr2h
  2894   00EE52  AEDF               	btfss	indf2,7,c
  2895   00EE54  D002               	bra	u1685
  2896   00EE56  8E0E               	bsf	DC_motor_MOve_clock_Wise@pin_obj_1^0,7,c
  2897   00EE58  D001               	bra	u1687
  2898   00EE5A                     u1685:
  2899   00EE5A  9E0E               	bcf	DC_motor_MOve_clock_Wise@pin_obj_1^0,7,c
  2900   00EE5C                     u1687:
  2901   00EE5C                     
  2902                           ;src/ECU/motor.c: 35:   pin_obj_2.direction =OUTPUT ;
  2903   00EE5C  9C0F               	bcf	DC_motor_MOve_clock_Wise@pin_obj_2^0,6,c
  2904   00EE5E                     
  2905                           ;src/ECU/motor.c: 36:   pin_obj_2.logic=motor->Motor_pins[1].DC_motor_Pin_status ;
  2906   00EE5E  EE20 F001          	lfsr	2,1
  2907   00EE62  500B               	movf	DC_motor_MOve_clock_Wise@motor^0,w,c
  2908   00EE64  26D9               	addwf	fsr2l,f,c
  2909   00EE66  500C               	movf	(DC_motor_MOve_clock_Wise@motor+1)^0,w,c
  2910   00EE68  22DA               	addwfc	fsr2h,f,c
  2911   00EE6A  AEDF               	btfss	indf2,7,c
  2912   00EE6C  D002               	bra	u1695
  2913   00EE6E  8E0F               	bsf	DC_motor_MOve_clock_Wise@pin_obj_2^0,7,c
  2914   00EE70  D001               	bra	u1697
  2915   00EE72                     u1695:
  2916   00EE72  9E0F               	bcf	DC_motor_MOve_clock_Wise@pin_obj_2^0,7,c
  2917   00EE74                     u1697:
  2918   00EE74                     
  2919                           ;src/ECU/motor.c: 37:     gpio_pin_write_logic(&pin_obj_1,HIGH) ;
  2920   00EE74  0E0E               	movlw	low DC_motor_MOve_clock_Wise@pin_obj_1
  2921   00EE76  6E01               	movwf	gpio_pin_write_logic@pin^0,c
  2922   00EE78  0E00               	movlw	high DC_motor_MOve_clock_Wise@pin_obj_1
  2923   00EE7A  6E02               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  2924   00EE7C  0E01               	movlw	1
  2925   00EE7E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2926   00EE80  ECB7  F078         	call	_gpio_pin_write_logic	;wreg free
  2927   00EE84                     
  2928                           ;src/ECU/motor.c: 38:   gpio_pin_write_logic(&pin_obj_2,LOW) ;}
  2929   00EE84  0E0F               	movlw	low DC_motor_MOve_clock_Wise@pin_obj_2
  2930   00EE86  6E01               	movwf	gpio_pin_write_logic@pin^0,c
  2931   00EE88  0E00               	movlw	high DC_motor_MOve_clock_Wise@pin_obj_2
  2932   00EE8A  6E02               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  2933   00EE8C  0E00               	movlw	0
  2934   00EE8E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2935   00EE90  ECB7  F078         	call	_gpio_pin_write_logic	;wreg free
  2936   00EE94                     l268:
  2937   00EE94  0012               	return		;funcret
  2938   00EE96                     __end_of_DC_motor_MOve_clock_Wise:
  2939                           	callstack 0
  2940                           
  2941 ;; *************** function _scooter_backward *****************
  2942 ;; Defined at:
  2943 ;;		line 242 in file "MAin_scooter.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;		None
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;		None
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      void 
  2950 ;; Registers used:
  2951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;Total ram usage:        0 bytes
  2962 ;; Hardware stack levels used: 1
  2963 ;; Hardware stack levels required when called: 2
  2964 ;; This function calls:
  2965 ;;		_DC_motor_MOve_Anti_clock_Wise
  2966 ;; This function is called by:
  2967 ;;		_main
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text14
  2972   00E69E                     __ptext14:
  2973                           	callstack 0
  2974   00E69E                     _scooter_backward:
  2975                           	callstack 28
  2976   00E69E                     
  2977                           ;MAin_scooter.c: 243:     DC_motor_MOve_Anti_clock_Wise(&motor_1);
  2978   00E69E  0E4E               	movlw	low _motor_1
  2979   00E6A0  6E0B               	movwf	DC_motor_MOve_Anti_clock_Wise@motor^0,c
  2980   00E6A2  0E00               	movlw	high _motor_1
  2981   00E6A4  6E0C               	movwf	(DC_motor_MOve_Anti_clock_Wise@motor+1)^0,c
  2982   00E6A6  EC73  F076         	call	_DC_motor_MOve_Anti_clock_Wise	;wreg free
  2983                           
  2984                           ;MAin_scooter.c: 244:      DC_motor_MOve_Anti_clock_Wise(&motor_2);
  2985   00E6AA  0E4C               	movlw	low _motor_2
  2986   00E6AC  6E0B               	movwf	DC_motor_MOve_Anti_clock_Wise@motor^0,c
  2987   00E6AE  0E00               	movlw	high _motor_2
  2988   00E6B0  6E0C               	movwf	(DC_motor_MOve_Anti_clock_Wise@motor+1)^0,c
  2989   00E6B2  EC73  F076         	call	_DC_motor_MOve_Anti_clock_Wise	;wreg free
  2990   00E6B6  0012               	return		;funcret
  2991   00E6B8                     __end_of_scooter_backward:
  2992                           	callstack 0
  2993                           
  2994 ;; *************** function _DC_motor_MOve_Anti_clock_Wise *****************
  2995 ;; Defined at:
  2996 ;;		line 42 in file "src/ECU/motor.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  motor           2   10[COMRAM] PTR const struct .
  2999 ;;		 -> motor_2(2), motor_1(2), 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  pin_obj_2       1   14[COMRAM] struct .
  3002 ;;  pin_obj_1       1   13[COMRAM] struct .
  3003 ;;  ret             1    0        unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      unsigned char 
  3006 ;; Registers used:
  3007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;Total ram usage:        5 bytes
  3018 ;; Hardware stack levels used: 1
  3019 ;; Hardware stack levels required when called: 1
  3020 ;; This function calls:
  3021 ;;		_gpio_pin_write_logic
  3022 ;; This function is called by:
  3023 ;;		_scooter_backward
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text15
  3028   00ECE6                     __ptext15:
  3029                           	callstack 0
  3030   00ECE6                     _DC_motor_MOve_Anti_clock_Wise:
  3031                           	callstack 28
  3032   00ECE6                     
  3033                           ;src/ECU/motor.c: 44: if(!motor)
  3034   00ECE6  500B               	movf	DC_motor_MOve_Anti_clock_Wise@motor^0,w,c
  3035   00ECE8  100C               	iorwf	(DC_motor_MOve_Anti_clock_Wise@motor+1)^0,w,c
  3036   00ECEA  A4D8               	btfss	status,2,c
  3037   00ECEC  EF7A  F076         	goto	u1701
  3038   00ECF0  EF7C  F076         	goto	u1700
  3039   00ECF4                     u1701:
  3040   00ECF4  EF7E  F076         	goto	l2130
  3041   00ECF8                     u1700:
  3042   00ECF8                     
  3043                           ;src/ECU/motor.c: 46: }else{
  3044   00ECF8  EFDE  F076         	goto	l273
  3045   00ECFC                     l2130:
  3046                           
  3047                           ;src/ECU/motor.c: 47:     pin_config_t pin_obj_1 ;;src/ECU/motor.c: 48: pin_config_t pin
      +                          _obj_2 ;;src/ECU/motor.c: 49:   pin_obj_1.port= motor->Motor_pins[0].port_name;
  3048   00ECFC  C00B  FFD9         	movff	DC_motor_MOve_Anti_clock_Wise@motor,fsr2l
  3049   00ED00  C00C  FFDA         	movff	DC_motor_MOve_Anti_clock_Wise@motor+1,fsr2h
  3050   00ED04  50DF               	movf	223,w,c
  3051   00ED06  0B0F               	andlw	15
  3052   00ED08  6E0D               	movwf	??_DC_motor_MOve_Anti_clock_Wise^0,c
  3053   00ED0A  460D               	rlncf	??_DC_motor_MOve_Anti_clock_Wise^0,f,c
  3054   00ED0C  460D               	rlncf	??_DC_motor_MOve_Anti_clock_Wise^0,f,c
  3055   00ED0E  460D               	rlncf	??_DC_motor_MOve_Anti_clock_Wise^0,f,c
  3056   00ED10  500E               	movf	DC_motor_MOve_Anti_clock_Wise@pin_obj_1^0,w,c
  3057   00ED12  180D               	xorwf	??_DC_motor_MOve_Anti_clock_Wise^0,w,c
  3058   00ED14  0BC7               	andlw	-57
  3059   00ED16  180D               	xorwf	??_DC_motor_MOve_Anti_clock_Wise^0,w,c
  3060   00ED18  6E0E               	movwf	DC_motor_MOve_Anti_clock_Wise@pin_obj_1^0,c
  3061                           
  3062                           ;src/ECU/motor.c: 50:     pin_obj_1.pin = motor->Motor_pins[0].pin;
  3063   00ED1A  C00B  FFD9         	movff	DC_motor_MOve_Anti_clock_Wise@motor,fsr2l
  3064   00ED1E  C00C  FFDA         	movff	DC_motor_MOve_Anti_clock_Wise@motor+1,fsr2h
  3065   00ED22  38DF               	swapf	223,w,c
  3066   00ED24  0B07               	andlw	7
  3067   00ED26  6E0D               	movwf	??_DC_motor_MOve_Anti_clock_Wise^0,c
  3068   00ED28  500E               	movf	DC_motor_MOve_Anti_clock_Wise@pin_obj_1^0,w,c
  3069   00ED2A  180D               	xorwf	??_DC_motor_MOve_Anti_clock_Wise^0,w,c
  3070   00ED2C  0BF8               	andlw	-8
  3071   00ED2E  180D               	xorwf	??_DC_motor_MOve_Anti_clock_Wise^0,w,c
  3072   00ED30  6E0E               	movwf	DC_motor_MOve_Anti_clock_Wise@pin_obj_1^0,c
  3073                           
  3074                           ;src/ECU/motor.c: 51:     pin_obj_2.port= motor->Motor_pins[1].port_name;
  3075   00ED32  EE20 F001          	lfsr	2,1
  3076   00ED36  500B               	movf	DC_motor_MOve_Anti_clock_Wise@motor^0,w,c
  3077   00ED38  26D9               	addwf	fsr2l,f,c
  3078   00ED3A  500C               	movf	(DC_motor_MOve_Anti_clock_Wise@motor+1)^0,w,c
  3079   00ED3C  22DA               	addwfc	fsr2h,f,c
  3080   00ED3E  50DF               	movf	223,w,c
  3081   00ED40  0B0F               	andlw	15
  3082   00ED42  6E0D               	movwf	??_DC_motor_MOve_Anti_clock_Wise^0,c
  3083   00ED44  460D               	rlncf	??_DC_motor_MOve_Anti_clock_Wise^0,f,c
  3084   00ED46  460D               	rlncf	??_DC_motor_MOve_Anti_clock_Wise^0,f,c
  3085   00ED48  460D               	rlncf	??_DC_motor_MOve_Anti_clock_Wise^0,f,c
  3086   00ED4A  500F               	movf	DC_motor_MOve_Anti_clock_Wise@pin_obj_2^0,w,c
  3087   00ED4C  180D               	xorwf	??_DC_motor_MOve_Anti_clock_Wise^0,w,c
  3088   00ED4E  0BC7               	andlw	-57
  3089   00ED50  180D               	xorwf	??_DC_motor_MOve_Anti_clock_Wise^0,w,c
  3090   00ED52  6E0F               	movwf	DC_motor_MOve_Anti_clock_Wise@pin_obj_2^0,c
  3091                           
  3092                           ;src/ECU/motor.c: 52:    pin_obj_2.pin= motor->Motor_pins[1].pin;
  3093   00ED54  EE20 F001          	lfsr	2,1
  3094   00ED58  500B               	movf	DC_motor_MOve_Anti_clock_Wise@motor^0,w,c
  3095   00ED5A  26D9               	addwf	fsr2l,f,c
  3096   00ED5C  500C               	movf	(DC_motor_MOve_Anti_clock_Wise@motor+1)^0,w,c
  3097   00ED5E  22DA               	addwfc	fsr2h,f,c
  3098   00ED60  38DF               	swapf	223,w,c
  3099   00ED62  0B07               	andlw	7
  3100   00ED64  6E0D               	movwf	??_DC_motor_MOve_Anti_clock_Wise^0,c
  3101   00ED66  500F               	movf	DC_motor_MOve_Anti_clock_Wise@pin_obj_2^0,w,c
  3102   00ED68  180D               	xorwf	??_DC_motor_MOve_Anti_clock_Wise^0,w,c
  3103   00ED6A  0BF8               	andlw	-8
  3104   00ED6C  180D               	xorwf	??_DC_motor_MOve_Anti_clock_Wise^0,w,c
  3105   00ED6E  6E0F               	movwf	DC_motor_MOve_Anti_clock_Wise@pin_obj_2^0,c
  3106   00ED70                     
  3107                           ;src/ECU/motor.c: 53:           pin_obj_1.direction =OUTPUT ;
  3108   00ED70  9C0E               	bcf	DC_motor_MOve_Anti_clock_Wise@pin_obj_1^0,6,c
  3109   00ED72                     
  3110                           ;src/ECU/motor.c: 54:   pin_obj_1.logic=motor->Motor_pins[0].DC_motor_Pin_status ;
  3111   00ED72  C00B  FFD9         	movff	DC_motor_MOve_Anti_clock_Wise@motor,fsr2l
  3112   00ED76  C00C  FFDA         	movff	DC_motor_MOve_Anti_clock_Wise@motor+1,fsr2h
  3113   00ED7A  AEDF               	btfss	indf2,7,c
  3114   00ED7C  D002               	bra	u1715
  3115   00ED7E  8E0E               	bsf	DC_motor_MOve_Anti_clock_Wise@pin_obj_1^0,7,c
  3116   00ED80  D001               	bra	u1717
  3117   00ED82                     u1715:
  3118   00ED82  9E0E               	bcf	DC_motor_MOve_Anti_clock_Wise@pin_obj_1^0,7,c
  3119   00ED84                     u1717:
  3120   00ED84                     
  3121                           ;src/ECU/motor.c: 55:   pin_obj_2.direction =OUTPUT ;
  3122   00ED84  9C0F               	bcf	DC_motor_MOve_Anti_clock_Wise@pin_obj_2^0,6,c
  3123   00ED86                     
  3124                           ;src/ECU/motor.c: 56:   pin_obj_2.logic=motor->Motor_pins[1].DC_motor_Pin_status ;
  3125   00ED86  EE20 F001          	lfsr	2,1
  3126   00ED8A  500B               	movf	DC_motor_MOve_Anti_clock_Wise@motor^0,w,c
  3127   00ED8C  26D9               	addwf	fsr2l,f,c
  3128   00ED8E  500C               	movf	(DC_motor_MOve_Anti_clock_Wise@motor+1)^0,w,c
  3129   00ED90  22DA               	addwfc	fsr2h,f,c
  3130   00ED92  AEDF               	btfss	indf2,7,c
  3131   00ED94  D002               	bra	u1725
  3132   00ED96  8E0F               	bsf	DC_motor_MOve_Anti_clock_Wise@pin_obj_2^0,7,c
  3133   00ED98  D001               	bra	u1727
  3134   00ED9A                     u1725:
  3135   00ED9A  9E0F               	bcf	DC_motor_MOve_Anti_clock_Wise@pin_obj_2^0,7,c
  3136   00ED9C                     u1727:
  3137   00ED9C                     
  3138                           ;src/ECU/motor.c: 57:     gpio_pin_write_logic(&pin_obj_1,LOW) ;
  3139   00ED9C  0E0E               	movlw	low DC_motor_MOve_Anti_clock_Wise@pin_obj_1
  3140   00ED9E  6E01               	movwf	gpio_pin_write_logic@pin^0,c
  3141   00EDA0  0E00               	movlw	high DC_motor_MOve_Anti_clock_Wise@pin_obj_1
  3142   00EDA2  6E02               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  3143   00EDA4  0E00               	movlw	0
  3144   00EDA6  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3145   00EDA8  ECB7  F078         	call	_gpio_pin_write_logic	;wreg free
  3146   00EDAC                     
  3147                           ;src/ECU/motor.c: 58:   gpio_pin_write_logic(&pin_obj_2,HIGH) ;}
  3148   00EDAC  0E0F               	movlw	low DC_motor_MOve_Anti_clock_Wise@pin_obj_2
  3149   00EDAE  6E01               	movwf	gpio_pin_write_logic@pin^0,c
  3150   00EDB0  0E00               	movlw	high DC_motor_MOve_Anti_clock_Wise@pin_obj_2
  3151   00EDB2  6E02               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  3152   00EDB4  0E01               	movlw	1
  3153   00EDB6  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3154   00EDB8  ECB7  F078         	call	_gpio_pin_write_logic	;wreg free
  3155   00EDBC                     l273:
  3156   00EDBC  0012               	return		;funcret
  3157   00EDBE                     __end_of_DC_motor_MOve_Anti_clock_Wise:
  3158                           	callstack 0
  3159                           
  3160 ;; *************** function _led_turn_on *****************
  3161 ;; Defined at:
  3162 ;;		line 28 in file "src/ECU/HAL_LED.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  led             2   10[COMRAM] PTR const struct .
  3165 ;;		 -> LIGHT_LED(1), 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  pin_obj         1   13[COMRAM] struct .
  3168 ;;  ret             1    0        unsigned char 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      unsigned char 
  3171 ;; Registers used:
  3172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;Total ram usage:        4 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; Hardware stack levels required when called: 1
  3185 ;; This function calls:
  3186 ;;		_gpio_pin_write_logic
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text16
  3193   00E902                     __ptext16:
  3194                           	callstack 0
  3195   00E902                     _led_turn_on:
  3196                           	callstack 29
  3197   00E902                     
  3198                           ;src/ECU/HAL_LED.c: 31:     if (!(led))
  3199   00E902  500B               	movf	led_turn_on@led^0,w,c
  3200   00E904  100C               	iorwf	(led_turn_on@led+1)^0,w,c
  3201   00E906  A4D8               	btfss	status,2,c
  3202   00E908  EF88  F074         	goto	u2261
  3203   00E90C  EF8A  F074         	goto	u2260
  3204   00E910                     u2261:
  3205   00E910  EF8C  F074         	goto	l292
  3206   00E914                     u2260:
  3207   00E914                     
  3208                           ;src/ECU/HAL_LED.c: 34:     }
  3209   00E914  EFB9  F074         	goto	l294
  3210   00E918                     l292:
  3211                           
  3212                           ;src/ECU/HAL_LED.c: 36:     {;src/ECU/HAL_LED.c: 37:     pin_config_t pin_obj ;;src/ECU/
      +                          HAL_LED.c: 38:     pin_obj.direction =OUTPUT ;
  3213   00E918  9C0E               	bcf	led_turn_on@pin_obj^0,6,c
  3214   00E91A                     
  3215                           ;src/ECU/HAL_LED.c: 39:      pin_obj.pin =led->pin ;
  3216   00E91A  C00B  FFD9         	movff	led_turn_on@led,fsr2l
  3217   00E91E  C00C  FFDA         	movff	led_turn_on@led+1,fsr2h
  3218   00E922  38DF               	swapf	223,w,c
  3219   00E924  0B07               	andlw	7
  3220   00E926  6E0D               	movwf	??_led_turn_on^0,c
  3221   00E928  500E               	movf	led_turn_on@pin_obj^0,w,c
  3222   00E92A  180D               	xorwf	??_led_turn_on^0,w,c
  3223   00E92C  0BF8               	andlw	-8
  3224   00E92E  180D               	xorwf	??_led_turn_on^0,w,c
  3225   00E930  6E0E               	movwf	led_turn_on@pin_obj^0,c
  3226                           
  3227                           ;src/ECU/HAL_LED.c: 40:      pin_obj.port=led->port_name;
  3228   00E932  C00B  FFD9         	movff	led_turn_on@led,fsr2l
  3229   00E936  C00C  FFDA         	movff	led_turn_on@led+1,fsr2h
  3230   00E93A  50DF               	movf	223,w,c
  3231   00E93C  0B0F               	andlw	15
  3232   00E93E  6E0D               	movwf	??_led_turn_on^0,c
  3233   00E940  460D               	rlncf	??_led_turn_on^0,f,c
  3234   00E942  460D               	rlncf	??_led_turn_on^0,f,c
  3235   00E944  460D               	rlncf	??_led_turn_on^0,f,c
  3236   00E946  500E               	movf	led_turn_on@pin_obj^0,w,c
  3237   00E948  180D               	xorwf	??_led_turn_on^0,w,c
  3238   00E94A  0BC7               	andlw	-57
  3239   00E94C  180D               	xorwf	??_led_turn_on^0,w,c
  3240   00E94E  6E0E               	movwf	led_turn_on@pin_obj^0,c
  3241   00E950                     
  3242                           ;src/ECU/HAL_LED.c: 41:      pin_obj.logic=led->led_status;
  3243   00E950  C00B  FFD9         	movff	led_turn_on@led,fsr2l
  3244   00E954  C00C  FFDA         	movff	led_turn_on@led+1,fsr2h
  3245   00E958  AEDF               	btfss	indf2,7,c
  3246   00E95A  D002               	bra	u2275
  3247   00E95C  8E0E               	bsf	led_turn_on@pin_obj^0,7,c
  3248   00E95E  D001               	bra	u2277
  3249   00E960                     u2275:
  3250   00E960  9E0E               	bcf	led_turn_on@pin_obj^0,7,c
  3251   00E962                     u2277:
  3252   00E962  0E0E               	movlw	low led_turn_on@pin_obj
  3253   00E964  6E01               	movwf	gpio_pin_write_logic@pin^0,c
  3254   00E966  0E00               	movlw	high led_turn_on@pin_obj
  3255   00E968  6E02               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  3256   00E96A  0E01               	movlw	1
  3257   00E96C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3258   00E96E  ECB7  F078         	call	_gpio_pin_write_logic	;wreg free
  3259   00E972                     l294:
  3260   00E972  0012               	return		;funcret
  3261   00E974                     __end_of_led_turn_on:
  3262                           	callstack 0
  3263                           
  3264 ;; *************** function _led_turn_off *****************
  3265 ;; Defined at:
  3266 ;;		line 45 in file "src/ECU/HAL_LED.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  led             2   10[COMRAM] PTR const struct .
  3269 ;;		 -> LIGHT_LED(1), 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  pin_obj         1   13[COMRAM] struct .
  3272 ;;  ret             1    0        unsigned char 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      unsigned char 
  3275 ;; Registers used:
  3276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;Total ram usage:        4 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; Hardware stack levels required when called: 1
  3289 ;; This function calls:
  3290 ;;		_gpio_pin_write_logic
  3291 ;; This function is called by:
  3292 ;;		_main
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text17
  3297   00E890                     __ptext17:
  3298                           	callstack 0
  3299   00E890                     _led_turn_off:
  3300                           	callstack 29
  3301   00E890                     
  3302                           ;src/ECU/HAL_LED.c: 47:     if (!(led))
  3303   00E890  500B               	movf	led_turn_off@led^0,w,c
  3304   00E892  100C               	iorwf	(led_turn_off@led+1)^0,w,c
  3305   00E894  A4D8               	btfss	status,2,c
  3306   00E896  EF4F  F074         	goto	u2281
  3307   00E89A  EF51  F074         	goto	u2280
  3308   00E89E                     u2281:
  3309   00E89E  EF53  F074         	goto	l297
  3310   00E8A2                     u2280:
  3311   00E8A2                     
  3312                           ;src/ECU/HAL_LED.c: 50:     }
  3313   00E8A2  EF80  F074         	goto	l299
  3314   00E8A6                     l297:
  3315                           
  3316                           ;src/ECU/HAL_LED.c: 52:     {;src/ECU/HAL_LED.c: 53:     pin_config_t pin_obj ;;src/ECU/
      +                          HAL_LED.c: 54:     pin_obj.direction =OUTPUT ;
  3317   00E8A6  9C0E               	bcf	led_turn_off@pin_obj^0,6,c
  3318   00E8A8                     
  3319                           ;src/ECU/HAL_LED.c: 55:      pin_obj.pin =led->pin ;
  3320   00E8A8  C00B  FFD9         	movff	led_turn_off@led,fsr2l
  3321   00E8AC  C00C  FFDA         	movff	led_turn_off@led+1,fsr2h
  3322   00E8B0  38DF               	swapf	223,w,c
  3323   00E8B2  0B07               	andlw	7
  3324   00E8B4  6E0D               	movwf	??_led_turn_off^0,c
  3325   00E8B6  500E               	movf	led_turn_off@pin_obj^0,w,c
  3326   00E8B8  180D               	xorwf	??_led_turn_off^0,w,c
  3327   00E8BA  0BF8               	andlw	-8
  3328   00E8BC  180D               	xorwf	??_led_turn_off^0,w,c
  3329   00E8BE  6E0E               	movwf	led_turn_off@pin_obj^0,c
  3330                           
  3331                           ;src/ECU/HAL_LED.c: 56:      pin_obj.port=led->port_name;
  3332   00E8C0  C00B  FFD9         	movff	led_turn_off@led,fsr2l
  3333   00E8C4  C00C  FFDA         	movff	led_turn_off@led+1,fsr2h
  3334   00E8C8  50DF               	movf	223,w,c
  3335   00E8CA  0B0F               	andlw	15
  3336   00E8CC  6E0D               	movwf	??_led_turn_off^0,c
  3337   00E8CE  460D               	rlncf	??_led_turn_off^0,f,c
  3338   00E8D0  460D               	rlncf	??_led_turn_off^0,f,c
  3339   00E8D2  460D               	rlncf	??_led_turn_off^0,f,c
  3340   00E8D4  500E               	movf	led_turn_off@pin_obj^0,w,c
  3341   00E8D6  180D               	xorwf	??_led_turn_off^0,w,c
  3342   00E8D8  0BC7               	andlw	-57
  3343   00E8DA  180D               	xorwf	??_led_turn_off^0,w,c
  3344   00E8DC  6E0E               	movwf	led_turn_off@pin_obj^0,c
  3345   00E8DE                     
  3346                           ;src/ECU/HAL_LED.c: 57:      pin_obj.logic=led->led_status;
  3347   00E8DE  C00B  FFD9         	movff	led_turn_off@led,fsr2l
  3348   00E8E2  C00C  FFDA         	movff	led_turn_off@led+1,fsr2h
  3349   00E8E6  AEDF               	btfss	indf2,7,c
  3350   00E8E8  D002               	bra	u2295
  3351   00E8EA  8E0E               	bsf	led_turn_off@pin_obj^0,7,c
  3352   00E8EC  D001               	bra	u2297
  3353   00E8EE                     u2295:
  3354   00E8EE  9E0E               	bcf	led_turn_off@pin_obj^0,7,c
  3355   00E8F0                     u2297:
  3356   00E8F0  0E0E               	movlw	low led_turn_off@pin_obj
  3357   00E8F2  6E01               	movwf	gpio_pin_write_logic@pin^0,c
  3358   00E8F4  0E00               	movlw	high led_turn_off@pin_obj
  3359   00E8F6  6E02               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  3360   00E8F8  0E00               	movlw	0
  3361   00E8FA  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3362   00E8FC  ECB7  F078         	call	_gpio_pin_write_logic	;wreg free
  3363   00E900                     l299:
  3364   00E900  0012               	return		;funcret
  3365   00E902                     __end_of_led_turn_off:
  3366                           	callstack 0
  3367                           
  3368 ;; *************** function _gpio_pin_write_logic *****************
  3369 ;; Defined at:
  3370 ;;		line 36 in file "INC/MCAL/GPIO.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  pin             2    0[COMRAM] PTR const struct .
  3373 ;;		 -> led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), DC_motor_Stop@pin_obj_2(1), DC_motor_Stop@pin_obj_1(1), 
  3374 ;;		 -> DC_motor_MOve_Anti_clock_Wise@pin_obj_2(1), DC_motor_MOve_Anti_clock_Wise@pin_obj_1(1), DC_motor_MOve_clock_Wise
      +@pin_obj_2(1), DC_motor_MOve_clock_Wise@pin_obj_1(1), 
  3375 ;;		 -> myseg.Segment_Pins(4), myseg(5), 
  3376 ;;  logic           1    2[COMRAM] enum E2267
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;  ret             1    9[COMRAM] unsigned char 
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      unsigned char 
  3381 ;; Registers used:
  3382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3388 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;Total ram usage:       10 bytes
  3393 ;; Hardware stack levels used: 1
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_DC_motor_MOve_clock_Wise
  3398 ;;		_DC_motor_MOve_Anti_clock_Wise
  3399 ;;		_DC_motor_Stop
  3400 ;;		_led_turn_on
  3401 ;;		_led_turn_off
  3402 ;;		_segment_write
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text18
  3407   00F16E                     __ptext18:
  3408                           	callstack 0
  3409   00F16E                     _gpio_pin_write_logic:
  3410                           	callstack 29
  3411   00F16E                     
  3412                           ;INC/MCAL/GPIO.c: 37:         Std_ReturnType ret=(Std_ReturnType)0x01;
  3413   00F16E  0E01               	movlw	1
  3414   00F170  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  3415   00F172                     
  3416                           ;INC/MCAL/GPIO.c: 38:      if (!(pin))
  3417   00F172  5001               	movf	gpio_pin_write_logic@pin^0,w,c
  3418   00F174  1002               	iorwf	(gpio_pin_write_logic@pin+1)^0,w,c
  3419   00F176  A4D8               	btfss	status,2,c
  3420   00F178  EFC0  F078         	goto	u1441
  3421   00F17C  EFC2  F078         	goto	u1440
  3422   00F180                     u1441:
  3423   00F180  EF25  F079         	goto	l1930
  3424   00F184                     u1440:
  3425   00F184                     l1922:
  3426                           
  3427                           ;INC/MCAL/GPIO.c: 39:           { ret=(Std_ReturnType)0x00;
  3428   00F184  0E00               	movlw	0
  3429   00F186  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  3430                           
  3431                           ;INC/MCAL/GPIO.c: 41:     }else {
  3432   00F188  EF3A  F079         	goto	l1932
  3433   00F18C                     l1924:
  3434   00F18C  C001  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  3435   00F190  C002  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  3436   00F194  50DF               	movf	223,w,c
  3437   00F196  0B07               	andlw	7
  3438   00F198  6E04               	movwf	??_gpio_pin_write_logic^0,c
  3439   00F19A  0E01               	movlw	1
  3440   00F19C  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3441   00F19E  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  3442   00F1A0  EFD4  F078         	goto	u1454
  3443   00F1A4                     u1455:
  3444   00F1A4  90D8               	bcf	status,0,c
  3445   00F1A6  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3446   00F1A8                     u1454:
  3447   00F1A8  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  3448   00F1AA  EFD2  F078         	goto	u1455
  3449   00F1AE  C001  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  3450   00F1B2  C002  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  3451   00F1B6  30DF               	rrcf	223,w,c
  3452   00F1B8  32E8               	rrcf	wreg,f,c
  3453   00F1BA  32E8               	rrcf	wreg,f,c
  3454   00F1BC  0B07               	andlw	7
  3455   00F1BE  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3456   00F1C0  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3457   00F1C2  0D02               	mullw	2
  3458   00F1C4  0E6A               	movlw	low _lat_register
  3459   00F1C6  24F3               	addwf	243,w,c
  3460   00F1C8  6ED9               	movwf	fsr2l,c
  3461   00F1CA  0E00               	movlw	high _lat_register
  3462   00F1CC  20F4               	addwfc	prodh,w,c
  3463   00F1CE  6EDA               	movwf	fsr2h,c
  3464   00F1D0  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
  3465   00F1D4  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
  3466   00F1D8  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3467   00F1DC  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3468   00F1E0  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3469   00F1E2  12DF               	iorwf	indf2,f,c
  3470                           
  3471                           ;INC/MCAL/GPIO.c: 45:              break;
  3472   00F1E4  EF3A  F079         	goto	l1932
  3473   00F1E8                     l1926:
  3474   00F1E8  C001  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  3475   00F1EC  C002  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  3476   00F1F0  50DF               	movf	223,w,c
  3477   00F1F2  0B07               	andlw	7
  3478   00F1F4  6E04               	movwf	??_gpio_pin_write_logic^0,c
  3479   00F1F6  0E01               	movlw	1
  3480   00F1F8  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3481   00F1FA  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  3482   00F1FC  EF02  F079         	goto	u1464
  3483   00F200                     u1465:
  3484   00F200  90D8               	bcf	status,0,c
  3485   00F202  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3486   00F204                     u1464:
  3487   00F204  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  3488   00F206  EF00  F079         	goto	u1465
  3489   00F20A  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3490   00F20C  0AFF               	xorlw	255
  3491   00F20E  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3492   00F210  C001  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  3493   00F214  C002  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  3494   00F218  30DF               	rrcf	223,w,c
  3495   00F21A  32E8               	rrcf	wreg,f,c
  3496   00F21C  32E8               	rrcf	wreg,f,c
  3497   00F21E  0B07               	andlw	7
  3498   00F220  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
  3499   00F222  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  3500   00F224  0D02               	mullw	2
  3501   00F226  0E6A               	movlw	low _lat_register
  3502   00F228  24F3               	addwf	243,w,c
  3503   00F22A  6ED9               	movwf	fsr2l,c
  3504   00F22C  0E00               	movlw	high _lat_register
  3505   00F22E  20F4               	addwfc	prodh,w,c
  3506   00F230  6EDA               	movwf	fsr2h,c
  3507   00F232  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
  3508   00F236  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
  3509   00F23A  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  3510   00F23E  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  3511   00F242  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3512   00F244  16DF               	andwf	indf2,f,c
  3513                           
  3514                           ;INC/MCAL/GPIO.c: 47:          break;
  3515   00F246  EF3A  F079         	goto	l1932
  3516   00F24A                     l1930:
  3517   00F24A  5003               	movf	gpio_pin_write_logic@logic^0,w,c
  3518   00F24C  6E04               	movwf	??_gpio_pin_write_logic^0,c
  3519   00F24E  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3520                           
  3521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3522                           ; Switch size 1, requested type "simple"
  3523                           ; Number of cases is 1, Range of values is 0 to 0
  3524                           ; switch strategies available:
  3525                           ; Name         Instructions Cycles
  3526                           ; simple_byte            4     3 (average)
  3527                           ;	Chosen strategy is simple_byte
  3528   00F250  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3529   00F252  0A00               	xorlw	0	; case 0
  3530   00F254  B4D8               	btfsc	status,2,c
  3531   00F256  EF2F  F079         	goto	l2712
  3532   00F25A  EFC2  F078         	goto	l1922
  3533   00F25E                     l2712:
  3534                           
  3535                           ; Switch size 1, requested type "simple"
  3536                           ; Number of cases is 2, Range of values is 0 to 1
  3537                           ; switch strategies available:
  3538                           ; Name         Instructions Cycles
  3539                           ; simple_byte            7     4 (average)
  3540                           ;	Chosen strategy is simple_byte
  3541   00F25E  5004               	movf	??_gpio_pin_write_logic^0,w,c
  3542   00F260  0A00               	xorlw	0	; case 0
  3543   00F262  B4D8               	btfsc	status,2,c
  3544   00F264  EFF4  F078         	goto	l1926
  3545   00F268  0A01               	xorlw	1	; case 1
  3546   00F26A  B4D8               	btfsc	status,2,c
  3547   00F26C  EFC6  F078         	goto	l1924
  3548   00F270  EFC2  F078         	goto	l1922
  3549   00F274                     l1932:
  3550   00F274  500A               	movf	gpio_pin_write_logic@ret^0,w,c
  3551   00F276  0012               	return		;funcret
  3552   00F278                     __end_of_gpio_pin_write_logic:
  3553                           	callstack 0
  3554                           
  3555 ;; *************** function _button_read_state *****************
  3556 ;; Defined at:
  3557 ;;		line 15 in file "src/ECU/button.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  btn             2    9[COMRAM] PTR const struct .
  3560 ;;		 -> Speed_down(3), Speed_up(3), LIGHTS_btn_OFF(3), MOTORS_BACKWARD(3), 
  3561 ;;		 -> MOTORS_FORWARD(3), LIGHTS_btn_ON(3), 
  3562 ;;  btn_state       2   11[COMRAM] PTR enum E2322
  3563 ;;		 -> MOTORS_btn_FORWARD_activ(1), MOTORS_btn_BACKWARD_activ(1), LIGHTS_btn_ON_activ(1), LIGHTS_btn_OFF_activ(1), 
  3564 ;;		 -> speed_down_btn_state(1), speed_up_btn_state(1), 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  Pin_logic       1   14[COMRAM] enum E2267
  3567 ;;  ret             1    0        unsigned char 
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      unsigned char 
  3570 ;; Registers used:
  3571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;Total ram usage:        6 bytes
  3582 ;; Hardware stack levels used: 1
  3583 ;; Hardware stack levels required when called: 1
  3584 ;; This function calls:
  3585 ;;		_gpio_pin_read_logic
  3586 ;; This function is called by:
  3587 ;;		_main
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text19
  3592   00EF6E                     __ptext19:
  3593                           	callstack 0
  3594   00EF6E                     _button_read_state:
  3595                           	callstack 29
  3596   00EF6E                     
  3597                           ;src/ECU/button.c: 17: logic_t Pin_logic =0;
  3598   00EF6E  0E00               	movlw	0
  3599   00EF70  6E0F               	movwf	button_read_state@Pin_logic^0,c
  3600   00EF72                     
  3601                           ;src/ECU/button.c: 18:     if ((!(btn))||(!(btn_state)))
  3602   00EF72  500A               	movf	button_read_state@btn^0,w,c
  3603   00EF74  100B               	iorwf	(button_read_state@btn+1)^0,w,c
  3604   00EF76  B4D8               	btfsc	status,2,c
  3605   00EF78  EFC0  F077         	goto	u2161
  3606   00EF7C  EFC2  F077         	goto	u2160
  3607   00EF80                     u2161:
  3608   00EF80  EFCB  F077         	goto	l2408
  3609   00EF84                     u2160:
  3610   00EF84  500C               	movf	button_read_state@btn_state^0,w,c
  3611   00EF86  100D               	iorwf	(button_read_state@btn_state+1)^0,w,c
  3612   00EF88  A4D8               	btfss	status,2,c
  3613   00EF8A  EFC9  F077         	goto	u2171
  3614   00EF8E  EFCB  F077         	goto	u2170
  3615   00EF92                     u2171:
  3616   00EF92  EFCD  F077         	goto	l2410
  3617   00EF96                     u2170:
  3618   00EF96                     l2408:
  3619                           
  3620                           ;src/ECU/button.c: 21:     }
  3621   00EF96  EF33  F078         	goto	l25
  3622   00EF9A                     l2410:
  3623                           
  3624                           ;src/ECU/button.c: 23:     {gpio_pin_read_logic(&(btn->button_pin),&Pin_logic);
  3625   00EF9A  C00A  F001         	movff	button_read_state@btn,gpio_pin_read_logic@pin
  3626   00EF9E  C00B  F002         	movff	button_read_state@btn+1,gpio_pin_read_logic@pin+1
  3627   00EFA2  0E0F               	movlw	low button_read_state@Pin_logic
  3628   00EFA4  6E03               	movwf	gpio_pin_read_logic@status^0,c
  3629   00EFA6  0E00               	movlw	high button_read_state@Pin_logic
  3630   00EFA8  6E04               	movwf	(gpio_pin_read_logic@status+1)^0,c
  3631   00EFAA  ECF6  F074         	call	_gpio_pin_read_logic	;wreg free
  3632   00EFAE                     
  3633                           ;src/ECU/button.c: 24:     if(Pin_logic==HIGH){
  3634   00EFAE  040F               	decf	button_read_state@Pin_logic^0,w,c
  3635   00EFB0  A4D8               	btfss	status,2,c
  3636   00EFB2  EFDD  F077         	goto	u2181
  3637   00EFB6  EFDF  F077         	goto	u2180
  3638   00EFBA                     u2181:
  3639   00EFBA  EF0B  F078         	goto	l2422
  3640   00EFBE                     u2180:
  3641   00EFBE                     
  3642                           ;src/ECU/button.c: 25:         if((btn->button_connection)== BUTTON_ACTIVE_HIGH)
  3643   00EFBE  EE20 F002          	lfsr	2,2
  3644   00EFC2  500A               	movf	button_read_state@btn^0,w,c
  3645   00EFC4  26D9               	addwf	fsr2l,f,c
  3646   00EFC6  500B               	movf	(button_read_state@btn+1)^0,w,c
  3647   00EFC8  22DA               	addwfc	fsr2h,f,c
  3648   00EFCA  50DF               	movf	indf2,w,c
  3649   00EFCC  A4D8               	btfss	status,2,c
  3650   00EFCE  EFEB  F077         	goto	u2191
  3651   00EFD2  EFED  F077         	goto	u2190
  3652   00EFD6                     u2191:
  3653   00EFD6  EFF5  F077         	goto	l2418
  3654   00EFDA                     u2190:
  3655   00EFDA                     l2416:
  3656                           
  3657                           ;src/ECU/button.c: 26:         {*btn_state=BUTTON_PRESSED;}
  3658   00EFDA  C00C  FFD9         	movff	button_read_state@btn_state,fsr2l
  3659   00EFDE  C00D  FFDA         	movff	button_read_state@btn_state+1,fsr2h
  3660   00EFE2  0E00               	movlw	0
  3661   00EFE4  6EDF               	movwf	indf2,c
  3662   00EFE6  EF33  F078         	goto	l25
  3663   00EFEA                     l2418:
  3664   00EFEA  EE20 F002          	lfsr	2,2
  3665   00EFEE  500A               	movf	button_read_state@btn^0,w,c
  3666   00EFF0  26D9               	addwf	fsr2l,f,c
  3667   00EFF2  500B               	movf	(button_read_state@btn+1)^0,w,c
  3668   00EFF4  22DA               	addwfc	fsr2h,f,c
  3669   00EFF6  04DE               	decf	postinc2,w,c
  3670   00EFF8  A4D8               	btfss	status,2,c
  3671   00EFFA  EF01  F078         	goto	u2201
  3672   00EFFE  EF03  F078         	goto	u2200
  3673   00F002                     u2201:
  3674   00F002  EF33  F078         	goto	l20
  3675   00F006                     u2200:
  3676   00F006                     l2420:
  3677                           
  3678                           ;src/ECU/button.c: 28:         {;src/ECU/button.c: 29:                 *btn_state=BUTTON
      +                          _RELEASED;
  3679   00F006  C00C  FFD9         	movff	button_read_state@btn_state,fsr2l
  3680   00F00A  C00D  FFDA         	movff	button_read_state@btn_state+1,fsr2h
  3681   00F00E  0E01               	movlw	1
  3682   00F010  6EDF               	movwf	indf2,c
  3683   00F012  EF33  F078         	goto	l25
  3684   00F016                     l2422:
  3685   00F016  500F               	movf	button_read_state@Pin_logic^0,w,c
  3686   00F018  A4D8               	btfss	status,2,c
  3687   00F01A  EF11  F078         	goto	u2211
  3688   00F01E  EF13  F078         	goto	u2210
  3689   00F022                     u2211:
  3690   00F022  EF33  F078         	goto	l25
  3691   00F026                     u2210:
  3692   00F026                     
  3693                           ;src/ECU/button.c: 33:         if((btn->button_connection)== BUTTON_ACTIVE_LOW)
  3694   00F026  EE20 F002          	lfsr	2,2
  3695   00F02A  500A               	movf	button_read_state@btn^0,w,c
  3696   00F02C  26D9               	addwf	fsr2l,f,c
  3697   00F02E  500B               	movf	(button_read_state@btn+1)^0,w,c
  3698   00F030  22DA               	addwfc	fsr2h,f,c
  3699   00F032  04DE               	decf	postinc2,w,c
  3700   00F034  A4D8               	btfss	status,2,c
  3701   00F036  EF1F  F078         	goto	u2221
  3702   00F03A  EF21  F078         	goto	u2220
  3703   00F03E                     u2221:
  3704   00F03E  EF23  F078         	goto	l2428
  3705   00F042                     u2220:
  3706   00F042  EFED  F077         	goto	l2416
  3707   00F046                     l2428:
  3708   00F046  EE20 F002          	lfsr	2,2
  3709   00F04A  500A               	movf	button_read_state@btn^0,w,c
  3710   00F04C  26D9               	addwf	fsr2l,f,c
  3711   00F04E  500B               	movf	(button_read_state@btn+1)^0,w,c
  3712   00F050  22DA               	addwfc	fsr2h,f,c
  3713   00F052  50DF               	movf	indf2,w,c
  3714   00F054  A4D8               	btfss	status,2,c
  3715   00F056  EF2F  F078         	goto	u2231
  3716   00F05A  EF31  F078         	goto	u2230
  3717   00F05E                     u2231:
  3718   00F05E  EF33  F078         	goto	l25
  3719   00F062                     u2230:
  3720   00F062  EF03  F078         	goto	l2420
  3721   00F066                     l20:
  3722   00F066                     l25:
  3723   00F066  0012               	return		;funcret
  3724   00F068                     __end_of_button_read_state:
  3725                           	callstack 0
  3726                           
  3727 ;; *************** function _gpio_pin_read_logic *****************
  3728 ;; Defined at:
  3729 ;;		line 54 in file "INC/MCAL/GPIO.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  pin             2    0[COMRAM] PTR const struct .
  3732 ;;		 -> Speed_down(3), Speed_up(3), LIGHTS_btn_OFF(3), MOTORS_BACKWARD(3), 
  3733 ;;		 -> MOTORS_FORWARD(3), LIGHTS_btn_ON(3), 
  3734 ;;  status          2    2[COMRAM] PTR enum E2267
  3735 ;;		 -> button_read_state@Pin_logic(1), 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  ret             1    0        unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      unsigned char 
  3740 ;; Registers used:
  3741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3747 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3749 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;Total ram usage:        9 bytes
  3752 ;; Hardware stack levels used: 1
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_button_read_state
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text20
  3761   00E9EC                     __ptext20:
  3762                           	callstack 0
  3763   00E9EC                     _gpio_pin_read_logic:
  3764                           	callstack 29
  3765   00E9EC                     
  3766                           ;INC/MCAL/GPIO.c: 56:      if (!(pin))
  3767   00E9EC  5001               	movf	gpio_pin_read_logic@pin^0,w,c
  3768   00E9EE  1002               	iorwf	(gpio_pin_read_logic@pin+1)^0,w,c
  3769   00E9F0  A4D8               	btfss	status,2,c
  3770   00E9F2  EFFD  F074         	goto	u1511
  3771   00E9F6  EFFF  F074         	goto	u1510
  3772   00E9FA                     u1511:
  3773   00E9FA  EF01  F075         	goto	l1978
  3774   00E9FE                     u1510:
  3775   00E9FE                     
  3776                           ;INC/MCAL/GPIO.c: 59:     }else {*status =((*port_register[pin->port]>>(pin->pin))&0X01)
      +                          ;
  3777   00E9FE  EF32  F075         	goto	l93
  3778   00EA02                     l1978:
  3779   00EA02  C001  FFD9         	movff	gpio_pin_read_logic@pin,fsr2l
  3780   00EA06  C002  FFDA         	movff	gpio_pin_read_logic@pin+1,fsr2h
  3781   00EA0A  50DF               	movf	223,w,c
  3782   00EA0C  0B07               	andlw	7
  3783   00EA0E  6E05               	movwf	??_gpio_pin_read_logic^0,c
  3784   00EA10  C001  FFD9         	movff	gpio_pin_read_logic@pin,fsr2l
  3785   00EA14  C002  FFDA         	movff	gpio_pin_read_logic@pin+1,fsr2h
  3786   00EA18  30DF               	rrcf	223,w,c
  3787   00EA1A  32E8               	rrcf	wreg,f,c
  3788   00EA1C  32E8               	rrcf	wreg,f,c
  3789   00EA1E  0B07               	andlw	7
  3790   00EA20  6E06               	movwf	(??_gpio_pin_read_logic+1)^0,c
  3791   00EA22  5006               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  3792   00EA24  0D02               	mullw	2
  3793   00EA26  0E60               	movlw	low _port_register
  3794   00EA28  24F3               	addwf	243,w,c
  3795   00EA2A  6ED9               	movwf	fsr2l,c
  3796   00EA2C  0E00               	movlw	high _port_register
  3797   00EA2E  20F4               	addwfc	prodh,w,c
  3798   00EA30  6EDA               	movwf	fsr2h,c
  3799   00EA32  CFDE F007          	movff	postinc2,??_gpio_pin_read_logic+2
  3800   00EA36  CFDD F008          	movff	postdec2,??_gpio_pin_read_logic+3
  3801   00EA3A  C007  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
  3802   00EA3E  C008  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
  3803   00EA42  50DF               	movf	indf2,w,c
  3804   00EA44  6E09               	movwf	(??_gpio_pin_read_logic+4)^0,c
  3805   00EA46  2A05               	incf	??_gpio_pin_read_logic^0,f,c
  3806   00EA48  EF28  F075         	goto	u1524
  3807   00EA4C                     u1525:
  3808   00EA4C  90D8               	bcf	status,0,c
  3809   00EA4E  3209               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  3810   00EA50                     u1524:
  3811   00EA50  2E05               	decfsz	??_gpio_pin_read_logic^0,f,c
  3812   00EA52  EF26  F075         	goto	u1525
  3813   00EA56  5009               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  3814   00EA58  0B01               	andlw	1
  3815   00EA5A  C003  FFD9         	movff	gpio_pin_read_logic@status,fsr2l
  3816   00EA5E  C004  FFDA         	movff	gpio_pin_read_logic@status+1,fsr2h
  3817   00EA62  6EDF               	movwf	indf2,c
  3818   00EA64                     l93:
  3819   00EA64  0012               	return		;funcret
  3820   00EA66                     __end_of_gpio_pin_read_logic:
  3821                           	callstack 0
  3822                           
  3823 ;; *************** function _CCP_PWM_Stop *****************
  3824 ;; Defined at:
  3825 ;;		line 207 in file "src/MCAL/CCP.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  _ccp_obj        2    0[COMRAM] PTR const struct .
  3828 ;;		 -> motor_sp(9), 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  ret             1    0        unsigned char 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      unsigned char 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3840 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;Total ram usage:        3 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; This function calls:
  3847 ;;		Nothing
  3848 ;; This function is called by:
  3849 ;;		_main
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text21
  3854   00E7C2                     __ptext21:
  3855                           	callstack 0
  3856   00E7C2                     _CCP_PWM_Stop:
  3857                           	callstack 30
  3858   00E7C2                     
  3859                           ;src/MCAL/CCP.c: 209:  if(!(_ccp_obj))
  3860   00E7C2  5001               	movf	CCP_PWM_Stop@_ccp_obj^0,w,c
  3861   00E7C4  1002               	iorwf	(CCP_PWM_Stop@_ccp_obj+1)^0,w,c
  3862   00E7C6  A4D8               	btfss	status,2,c
  3863   00E7C8  EFE8  F073         	goto	u2301
  3864   00E7CC  EFEA  F073         	goto	u2300
  3865   00E7D0                     u2301:
  3866   00E7D0  EFEC  F073         	goto	l2484
  3867   00E7D4                     u2300:
  3868   00E7D4                     
  3869                           ;src/MCAL/CCP.c: 211: }
  3870   00E7D4  EF10  F074         	goto	l386
  3871   00E7D8                     l2484:
  3872                           
  3873                           ;src/MCAL/CCP.c: 213: { if(_ccp_obj->ccp_inst==CCP1_INST){
  3874   00E7D8  EE20 F008          	lfsr	2,8
  3875   00E7DC  5001               	movf	CCP_PWM_Stop@_ccp_obj^0,w,c
  3876   00E7DE  26D9               	addwf	fsr2l,f,c
  3877   00E7E0  5002               	movf	(CCP_PWM_Stop@_ccp_obj+1)^0,w,c
  3878   00E7E2  22DA               	addwfc	fsr2h,f,c
  3879   00E7E4  50DF               	movf	indf2,w,c
  3880   00E7E6  A4D8               	btfss	status,2,c
  3881   00E7E8  EFF8  F073         	goto	u2311
  3882   00E7EC  EFFA  F073         	goto	u2310
  3883   00E7F0                     u2311:
  3884   00E7F0  EFFE  F073         	goto	l2488
  3885   00E7F4                     u2310:
  3886   00E7F4                     
  3887                           ;src/MCAL/CCP.c: 214:      (CCP1CONbits.CCP1M)=((uint8)0x00) ;}
  3888   00E7F4  0EF0               	movlw	-16
  3889   00E7F6  16BD               	andwf	189,f,c	;volatile
  3890   00E7F8  EF10  F074         	goto	l386
  3891   00E7FC                     l2488:
  3892   00E7FC  EE20 F008          	lfsr	2,8
  3893   00E800  5001               	movf	CCP_PWM_Stop@_ccp_obj^0,w,c
  3894   00E802  26D9               	addwf	fsr2l,f,c
  3895   00E804  5002               	movf	(CCP_PWM_Stop@_ccp_obj+1)^0,w,c
  3896   00E806  22DA               	addwfc	fsr2h,f,c
  3897   00E808  04DE               	decf	postinc2,w,c
  3898   00E80A  A4D8               	btfss	status,2,c
  3899   00E80C  EF0A  F074         	goto	u2321
  3900   00E810  EF0C  F074         	goto	u2320
  3901   00E814                     u2321:
  3902   00E814  EF10  F074         	goto	l382
  3903   00E818                     u2320:
  3904   00E818                     
  3905                           ;src/MCAL/CCP.c: 216:      (CCP2CONbits.CCP2M)=((uint8)0x00) ;}
  3906   00E818  0EF0               	movlw	-16
  3907   00E81A  16BA               	andwf	186,f,c	;volatile
  3908   00E81C  EF10  F074         	goto	l386
  3909   00E820                     l382:
  3910   00E820                     l386:
  3911   00E820  0012               	return		;funcret
  3912   00E822                     __end_of_CCP_PWM_Stop:
  3913                           	callstack 0
  3914                           
  3915 ;; *************** function _CCP_PWM_Start *****************
  3916 ;; Defined at:
  3917 ;;		line 191 in file "src/MCAL/CCP.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  _ccp_obj        2    0[COMRAM] PTR const struct .
  3920 ;;		 -> motor_sp(9), 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  ret             1    0        unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      unsigned char 
  3925 ;; Registers used:
  3926 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;Total ram usage:        3 bytes
  3937 ;; Hardware stack levels used: 1
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_main
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text22
  3946   00E974                     __ptext22:
  3947                           	callstack 0
  3948   00E974                     _CCP_PWM_Start:
  3949                           	callstack 30
  3950   00E974                     
  3951                           ;src/MCAL/CCP.c: 193:      if(!(_ccp_obj))
  3952   00E974  5001               	movf	CCP_PWM_Start@_ccp_obj^0,w,c
  3953   00E976  1002               	iorwf	(CCP_PWM_Start@_ccp_obj+1)^0,w,c
  3954   00E978  A4D8               	btfss	status,2,c
  3955   00E97A  EFC1  F074         	goto	u2331
  3956   00E97E  EFC3  F074         	goto	u2330
  3957   00E982                     u2331:
  3958   00E982  EFC5  F074         	goto	l2500
  3959   00E986                     u2330:
  3960   00E986                     
  3961                           ;src/MCAL/CCP.c: 195: }
  3962   00E986  EFF5  F074         	goto	l378
  3963   00E98A                     l2500:
  3964                           
  3965                           ;src/MCAL/CCP.c: 197: { if(_ccp_obj->ccp_inst==CCP1_INST){
  3966   00E98A  EE20 F008          	lfsr	2,8
  3967   00E98E  5001               	movf	CCP_PWM_Start@_ccp_obj^0,w,c
  3968   00E990  26D9               	addwf	fsr2l,f,c
  3969   00E992  5002               	movf	(CCP_PWM_Start@_ccp_obj+1)^0,w,c
  3970   00E994  22DA               	addwfc	fsr2h,f,c
  3971   00E996  50DF               	movf	indf2,w,c
  3972   00E998  A4D8               	btfss	status,2,c
  3973   00E99A  EFD1  F074         	goto	u2341
  3974   00E99E  EFD3  F074         	goto	u2340
  3975   00E9A2                     u2341:
  3976   00E9A2  EFD9  F074         	goto	l2504
  3977   00E9A6                     u2340:
  3978   00E9A6                     
  3979                           ;src/MCAL/CCP.c: 198:          (CCP1CONbits.CCP1M)=((uint8)0x0C);}
  3980   00E9A6  50BD               	movf	189,w,c	;volatile
  3981   00E9A8  0BF0               	andlw	-16
  3982   00E9AA  090C               	iorlw	12
  3983   00E9AC  6EBD               	movwf	189,c	;volatile
  3984   00E9AE  EFF5  F074         	goto	l378
  3985   00E9B2                     l2504:
  3986   00E9B2  EE20 F008          	lfsr	2,8
  3987   00E9B6  5001               	movf	CCP_PWM_Start@_ccp_obj^0,w,c
  3988   00E9B8  26D9               	addwf	fsr2l,f,c
  3989   00E9BA  5002               	movf	(CCP_PWM_Start@_ccp_obj+1)^0,w,c
  3990   00E9BC  22DA               	addwfc	fsr2h,f,c
  3991   00E9BE  04DE               	decf	postinc2,w,c
  3992   00E9C0  A4D8               	btfss	status,2,c
  3993   00E9C2  EFE5  F074         	goto	u2351
  3994   00E9C6  EFE7  F074         	goto	u2350
  3995   00E9CA                     u2351:
  3996   00E9CA  EFF5  F074         	goto	l378
  3997   00E9CE                     u2350:
  3998   00E9CE                     
  3999                           ;src/MCAL/CCP.c: 200: {;src/MCAL/CCP.c: 201: (CCP2CONbits.CCP2M)=((uint8)0x0C);
  4000   00E9CE  50BA               	movf	186,w,c	;volatile
  4001   00E9D0  0BF0               	andlw	-16
  4002   00E9D2  090C               	iorlw	12
  4003   00E9D4  6EBA               	movwf	186,c	;volatile
  4004   00E9D6                     
  4005                           ;src/MCAL/CCP.c: 202: if(PIR1bits.TMR2IF==1)
  4006   00E9D6  A29E               	btfss	158,1,c	;volatile
  4007   00E9D8  EFF0  F074         	goto	u2361
  4008   00E9DC  EFF2  F074         	goto	u2360
  4009   00E9E0                     u2361:
  4010   00E9E0  EFF5  F074         	goto	l375
  4011   00E9E4                     u2360:
  4012   00E9E4                     
  4013                           ;src/MCAL/CCP.c: 203: TRISCbits.RC1=0;
  4014   00E9E4  9294               	bcf	148,1,c	;volatile
  4015   00E9E6  EFF5  F074         	goto	l378
  4016   00E9EA                     l375:
  4017   00E9EA                     l378:
  4018   00E9EA  0012               	return		;funcret
  4019   00E9EC                     __end_of_CCP_PWM_Start:
  4020                           	callstack 0
  4021                           
  4022 ;; *************** function _CCP_PWM_Set_Duty *****************
  4023 ;; Defined at:
  4024 ;;		line 168 in file "src/MCAL/CCP.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  _ccp_obj        2   55[COMRAM] PTR const struct .
  4027 ;;		 -> motor_sp(9), 
  4028 ;;  _duty           1   57[COMRAM] const unsigned char 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;  l_duty_temp     2   60[COMRAM] unsigned short 
  4031 ;;  ret             1    0        unsigned char 
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      unsigned char 
  4034 ;; Registers used:
  4035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4041 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;Total ram usage:        7 bytes
  4046 ;; Hardware stack levels used: 1
  4047 ;; Hardware stack levels required when called: 1
  4048 ;; This function calls:
  4049 ;;		___fldiv
  4050 ;;		___fltol
  4051 ;;		___wmul
  4052 ;;		___xxtofl
  4053 ;; This function is called by:
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text23
  4059   00F278                     __ptext23:
  4060                           	callstack 0
  4061   00F278                     _CCP_PWM_Set_Duty:
  4062                           	callstack 29
  4063   00F278                     
  4064                           ;src/MCAL/CCP.c: 170:      uint16 l_duty_temp = 0;
  4065   00F278  0E00               	movlw	0
  4066   00F27A  6E3E               	movwf	(CCP_PWM_Set_Duty@l_duty_temp+1)^0,c
  4067   00F27C  0E00               	movlw	0
  4068   00F27E  6E3D               	movwf	CCP_PWM_Set_Duty@l_duty_temp^0,c
  4069   00F280                     
  4070                           ;src/MCAL/CCP.c: 171:      if(!(_ccp_obj))
  4071   00F280  5038               	movf	CCP_PWM_Set_Duty@_ccp_obj^0,w,c
  4072   00F282  1039               	iorwf	(CCP_PWM_Set_Duty@_ccp_obj+1)^0,w,c
  4073   00F284  A4D8               	btfss	status,2,c
  4074   00F286  EF47  F079         	goto	u2371
  4075   00F28A  EF49  F079         	goto	u2370
  4076   00F28E                     u2371:
  4077   00F28E  EF4B  F079         	goto	l2518
  4078   00F292                     u2370:
  4079   00F292                     
  4080                           ;src/MCAL/CCP.c: 174: }
  4081   00F292  EFD1  F079         	goto	l369
  4082   00F296                     l2518:
  4083                           
  4084                           ;src/MCAL/CCP.c: 176: { l_duty_temp=((_duty*4*(PR2+1)/100.0));
  4085   00F296  0E00               	movlw	0
  4086   00F298  6E19               	movwf	___fldiv@a^0,c
  4087   00F29A  0E00               	movlw	0
  4088   00F29C  6E1A               	movwf	(___fldiv@a+1)^0,c
  4089   00F29E  0EC8               	movlw	200
  4090   00F2A0  6E1B               	movwf	(___fldiv@a+2)^0,c
  4091   00F2A2  0E42               	movlw	66
  4092   00F2A4  6E1C               	movwf	(___fldiv@a+3)^0,c
  4093   00F2A6  0E01               	movlw	1
  4094   00F2A8  24CB               	addwf	203,w,c	;volatile
  4095   00F2AA  6E01               	movwf	___wmul@multiplier^0,c
  4096   00F2AC  6A02               	clrf	(___wmul@multiplier+1)^0,c
  4097   00F2AE  0E00               	movlw	0
  4098   00F2B0  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  4099   00F2B2  503A               	movf	CCP_PWM_Set_Duty@_duty^0,w,c
  4100   00F2B4  0D04               	mullw	4
  4101   00F2B6  CFF3 F003          	movff	prodl,___wmul@multiplicand
  4102   00F2BA  CFF4 F004          	movff	prodh,___wmul@multiplicand+1
  4103   00F2BE  EC88  F073         	call	___wmul	;wreg free
  4104   00F2C2  C001  F007         	movff	?___wmul,___xxtofl@val
  4105   00F2C6  C002  F008         	movff	?___wmul+1,___xxtofl@val+1
  4106   00F2CA  0E00               	movlw	0
  4107   00F2CC  BE08               	btfsc	(___xxtofl@val+1)^0,7,c
  4108   00F2CE  0EFF               	movlw	-1
  4109   00F2D0  6E09               	movwf	(___xxtofl@val+2)^0,c
  4110   00F2D2  6E0A               	movwf	(___xxtofl@val+3)^0,c
  4111   00F2D4  0E01               	movlw	1
  4112   00F2D6  ECCF  F07B         	call	___xxtofl
  4113   00F2DA  C007  F015         	movff	?___xxtofl,___fldiv@b
  4114   00F2DE  C008  F016         	movff	?___xxtofl+1,___fldiv@b+1
  4115   00F2E2  C009  F017         	movff	?___xxtofl+2,___fldiv@b+2
  4116   00F2E6  C00A  F018         	movff	?___xxtofl+3,___fldiv@b+3
  4117   00F2EA  EC33  F07E         	call	___fldiv	;wreg free
  4118   00F2EE  C015  F02E         	movff	?___fldiv,___fltol@f1
  4119   00F2F2  C016  F02F         	movff	?___fldiv+1,___fltol@f1+1
  4120   00F2F6  C017  F030         	movff	?___fldiv+2,___fltol@f1+2
  4121   00F2FA  C018  F031         	movff	?___fldiv+3,___fltol@f1+3
  4122   00F2FE  EC34  F078         	call	___fltol	;wreg free
  4123   00F302  C02E  F03D         	movff	?___fltol,CCP_PWM_Set_Duty@l_duty_temp
  4124   00F306  C02F  F03E         	movff	?___fltol+1,CCP_PWM_Set_Duty@l_duty_temp+1
  4125   00F30A                     
  4126                           ;src/MCAL/CCP.c: 177:          if(_ccp_obj->ccp_inst==CCP1_INST){
  4127   00F30A  EE20 F008          	lfsr	2,8
  4128   00F30E  5038               	movf	CCP_PWM_Set_Duty@_ccp_obj^0,w,c
  4129   00F310  26D9               	addwf	fsr2l,f,c
  4130   00F312  5039               	movf	(CCP_PWM_Set_Duty@_ccp_obj+1)^0,w,c
  4131   00F314  22DA               	addwfc	fsr2h,f,c
  4132   00F316  50DF               	movf	indf2,w,c
  4133   00F318  A4D8               	btfss	status,2,c
  4134   00F31A  EF91  F079         	goto	u2381
  4135   00F31E  EF93  F079         	goto	u2380
  4136   00F322                     u2381:
  4137   00F322  EFAB  F079         	goto	l2524
  4138   00F326                     u2380:
  4139   00F326                     
  4140                           ;src/MCAL/CCP.c: 179: CCP1CONbits.DC1B=(uint8)(l_duty_temp&3);
  4141   00F326  C03D  F03B         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  4142   00F32A  0E03               	movlw	3
  4143   00F32C  163B               	andwf	??_CCP_PWM_Set_Duty^0,f,c
  4144   00F32E  3A3B               	swapf	??_CCP_PWM_Set_Duty^0,f,c
  4145   00F330  50BD               	movf	189,w,c	;volatile
  4146   00F332  183B               	xorwf	??_CCP_PWM_Set_Duty^0,w,c
  4147   00F334  0BCF               	andlw	-49
  4148   00F336  183B               	xorwf	??_CCP_PWM_Set_Duty^0,w,c
  4149   00F338  6EBD               	movwf	189,c	;volatile
  4150                           
  4151                           ;src/MCAL/CCP.c: 180: CCPR1L=(uint8)(l_duty_temp>>2);}
  4152   00F33A  C03D  F03B         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  4153   00F33E  C03E  F03C         	movff	CCP_PWM_Set_Duty@l_duty_temp+1,??_CCP_PWM_Set_Duty+1
  4154   00F342  90D8               	bcf	status,0,c
  4155   00F344  323C               	rrcf	(??_CCP_PWM_Set_Duty+1)^0,f,c
  4156   00F346  323B               	rrcf	??_CCP_PWM_Set_Duty^0,f,c
  4157   00F348  90D8               	bcf	status,0,c
  4158   00F34A  323C               	rrcf	(??_CCP_PWM_Set_Duty+1)^0,f,c
  4159   00F34C  323B               	rrcf	??_CCP_PWM_Set_Duty^0,f,c
  4160   00F34E  503B               	movf	??_CCP_PWM_Set_Duty^0,w,c
  4161   00F350  6EBE               	movwf	190,c	;volatile
  4162   00F352  EFD1  F079         	goto	l369
  4163   00F356                     l2524:
  4164   00F356  EE20 F008          	lfsr	2,8
  4165   00F35A  5038               	movf	CCP_PWM_Set_Duty@_ccp_obj^0,w,c
  4166   00F35C  26D9               	addwf	fsr2l,f,c
  4167   00F35E  5039               	movf	(CCP_PWM_Set_Duty@_ccp_obj+1)^0,w,c
  4168   00F360  22DA               	addwfc	fsr2h,f,c
  4169   00F362  04DE               	decf	postinc2,w,c
  4170   00F364  A4D8               	btfss	status,2,c
  4171   00F366  EFB7  F079         	goto	u2391
  4172   00F36A  EFB9  F079         	goto	u2390
  4173   00F36E                     u2391:
  4174   00F36E  EFD1  F079         	goto	l365
  4175   00F372                     u2390:
  4176   00F372                     
  4177                           ;src/MCAL/CCP.c: 182: {;src/MCAL/CCP.c: 183: CCP2CONbits.DC2B=(uint8)(l_duty_temp&3);
  4178   00F372  C03D  F03B         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  4179   00F376  0E03               	movlw	3
  4180   00F378  163B               	andwf	??_CCP_PWM_Set_Duty^0,f,c
  4181   00F37A  3A3B               	swapf	??_CCP_PWM_Set_Duty^0,f,c
  4182   00F37C  50BA               	movf	186,w,c	;volatile
  4183   00F37E  183B               	xorwf	??_CCP_PWM_Set_Duty^0,w,c
  4184   00F380  0BCF               	andlw	-49
  4185   00F382  183B               	xorwf	??_CCP_PWM_Set_Duty^0,w,c
  4186   00F384  6EBA               	movwf	186,c	;volatile
  4187                           
  4188                           ;src/MCAL/CCP.c: 184: CCPR2L=(uint8)(l_duty_temp>>2);}
  4189   00F386  C03D  F03B         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  4190   00F38A  C03E  F03C         	movff	CCP_PWM_Set_Duty@l_duty_temp+1,??_CCP_PWM_Set_Duty+1
  4191   00F38E  90D8               	bcf	status,0,c
  4192   00F390  323C               	rrcf	(??_CCP_PWM_Set_Duty+1)^0,f,c
  4193   00F392  323B               	rrcf	??_CCP_PWM_Set_Duty^0,f,c
  4194   00F394  90D8               	bcf	status,0,c
  4195   00F396  323C               	rrcf	(??_CCP_PWM_Set_Duty+1)^0,f,c
  4196   00F398  323B               	rrcf	??_CCP_PWM_Set_Duty^0,f,c
  4197   00F39A  503B               	movf	??_CCP_PWM_Set_Duty^0,w,c
  4198   00F39C  6EBB               	movwf	187,c	;volatile
  4199   00F39E  EFD1  F079         	goto	l369
  4200   00F3A2                     l365:
  4201   00F3A2                     l369:
  4202   00F3A2  0012               	return		;funcret
  4203   00F3A4                     __end_of_CCP_PWM_Set_Duty:
  4204                           	callstack 0
  4205                           
  4206 ;; *************** function ___xxtofl *****************
  4207 ;; Defined at:
  4208 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  sign            1    wreg     unsigned char 
  4211 ;;  val             4    6[COMRAM] long 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;  sign            1   14[COMRAM] unsigned char 
  4214 ;;  arg             4   16[COMRAM] unsigned long 
  4215 ;;  exp             1   15[COMRAM] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  4    6[COMRAM] unsigned char 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, status,0
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4225 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;Total ram usage:       14 bytes
  4230 ;; Hardware stack levels used: 1
  4231 ;; This function calls:
  4232 ;;		Nothing
  4233 ;; This function is called by:
  4234 ;;		_CCP_PWM_Set_Duty
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text24
  4239   00F79E                     __ptext24:
  4240                           	callstack 0
  4241   00F79E                     ___xxtofl:
  4242                           	callstack 29
  4243                           
  4244                           ;incstack = 0
  4245                           ;___xxtofl@sign stored from wreg
  4246   00F79E  6E0F               	movwf	___xxtofl@sign^0,c
  4247   00F7A0  500F               	movf	___xxtofl@sign^0,w,c
  4248   00F7A2  B4D8               	btfsc	status,2,c
  4249   00F7A4  EFD6  F07B         	goto	u2061
  4250   00F7A8  EFD8  F07B         	goto	u2060
  4251   00F7AC                     u2061:
  4252   00F7AC  EFFA  F07B         	goto	l1044
  4253   00F7B0                     u2060:
  4254   00F7B0  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  4255   00F7B2  EFDF  F07B         	goto	u2070
  4256   00F7B6  EFDD  F07B         	goto	u2071
  4257   00F7BA                     u2071:
  4258   00F7BA  EFFA  F07B         	goto	l1044
  4259   00F7BE                     u2070:
  4260   00F7BE  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  4261   00F7C2  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  4262   00F7C6  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  4263   00F7CA  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  4264   00F7CE  1E0B               	comf	??___xxtofl^0,f,c
  4265   00F7D0  1E0C               	comf	(??___xxtofl+1)^0,f,c
  4266   00F7D2  1E0D               	comf	(??___xxtofl+2)^0,f,c
  4267   00F7D4  1E0E               	comf	(??___xxtofl+3)^0,f,c
  4268   00F7D6  2A0B               	incf	??___xxtofl^0,f,c
  4269   00F7D8  0E00               	movlw	0
  4270   00F7DA  220C               	addwfc	(??___xxtofl+1)^0,f,c
  4271   00F7DC  220D               	addwfc	(??___xxtofl+2)^0,f,c
  4272   00F7DE  220E               	addwfc	(??___xxtofl+3)^0,f,c
  4273   00F7E0  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  4274   00F7E4  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  4275   00F7E8  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  4276   00F7EC  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  4277   00F7F0  EF02  F07C         	goto	l2362
  4278   00F7F4                     l1044:
  4279   00F7F4  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  4280   00F7F8  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4281   00F7FC  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4282   00F800  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4283   00F804                     l2362:
  4284   00F804  5007               	movf	___xxtofl@val^0,w,c
  4285   00F806  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  4286   00F808  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  4287   00F80A  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  4288   00F80C  A4D8               	btfss	status,2,c
  4289   00F80E  EF0B  F07C         	goto	u2081
  4290   00F812  EF0D  F07C         	goto	u2080
  4291   00F816                     u2081:
  4292   00F816  EF17  F07C         	goto	l2368
  4293   00F81A                     u2080:
  4294   00F81A  0E00               	movlw	0
  4295   00F81C  6E07               	movwf	?___xxtofl^0,c
  4296   00F81E  0E00               	movlw	0
  4297   00F820  6E08               	movwf	(?___xxtofl+1)^0,c
  4298   00F822  0E00               	movlw	0
  4299   00F824  6E09               	movwf	(?___xxtofl+2)^0,c
  4300   00F826  0E00               	movlw	0
  4301   00F828  6E0A               	movwf	(?___xxtofl+3)^0,c
  4302   00F82A  EFA8  F07C         	goto	l1047
  4303   00F82E                     l2368:
  4304   00F82E  0E96               	movlw	150
  4305   00F830  6E10               	movwf	___xxtofl@exp^0,c
  4306   00F832  EF21  F07C         	goto	l2372
  4307   00F836                     l2370:
  4308   00F836  2A10               	incf	___xxtofl@exp^0,f,c
  4309   00F838  90D8               	bcf	status,0,c
  4310   00F83A  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  4311   00F83C  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  4312   00F83E  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  4313   00F840  3211               	rrcf	___xxtofl@arg^0,f,c
  4314   00F842                     l2372:
  4315   00F842  0E00               	movlw	0
  4316   00F844  1411               	andwf	___xxtofl@arg^0,w,c
  4317   00F846  6E0B               	movwf	??___xxtofl^0,c
  4318   00F848  0E00               	movlw	0
  4319   00F84A  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  4320   00F84C  6E0C               	movwf	(??___xxtofl+1)^0,c
  4321   00F84E  0E00               	movlw	0
  4322   00F850  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  4323   00F852  6E0D               	movwf	(??___xxtofl+2)^0,c
  4324   00F854  0EFE               	movlw	254
  4325   00F856  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  4326   00F858  6E0E               	movwf	(??___xxtofl+3)^0,c
  4327   00F85A  500B               	movf	??___xxtofl^0,w,c
  4328   00F85C  100C               	iorwf	(??___xxtofl+1)^0,w,c
  4329   00F85E  100D               	iorwf	(??___xxtofl+2)^0,w,c
  4330   00F860  100E               	iorwf	(??___xxtofl+3)^0,w,c
  4331   00F862  A4D8               	btfss	status,2,c
  4332   00F864  EF36  F07C         	goto	u2091
  4333   00F868  EF38  F07C         	goto	u2090
  4334   00F86C                     u2091:
  4335   00F86C  EF1B  F07C         	goto	l2370
  4336   00F870                     u2090:
  4337   00F870  EF46  F07C         	goto	l1051
  4338   00F874                     l2374:
  4339   00F874  2A10               	incf	___xxtofl@exp^0,f,c
  4340   00F876  0E01               	movlw	1
  4341   00F878  2611               	addwf	___xxtofl@arg^0,f,c
  4342   00F87A  0E00               	movlw	0
  4343   00F87C  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  4344   00F87E  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  4345   00F880  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  4346   00F882  90D8               	bcf	status,0,c
  4347   00F884  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  4348   00F886  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  4349   00F888  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  4350   00F88A  3211               	rrcf	___xxtofl@arg^0,f,c
  4351   00F88C                     l1051:
  4352   00F88C  0E00               	movlw	0
  4353   00F88E  1411               	andwf	___xxtofl@arg^0,w,c
  4354   00F890  6E0B               	movwf	??___xxtofl^0,c
  4355   00F892  0E00               	movlw	0
  4356   00F894  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  4357   00F896  6E0C               	movwf	(??___xxtofl+1)^0,c
  4358   00F898  0E00               	movlw	0
  4359   00F89A  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  4360   00F89C  6E0D               	movwf	(??___xxtofl+2)^0,c
  4361   00F89E  0EFF               	movlw	255
  4362   00F8A0  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  4363   00F8A2  6E0E               	movwf	(??___xxtofl+3)^0,c
  4364   00F8A4  500B               	movf	??___xxtofl^0,w,c
  4365   00F8A6  100C               	iorwf	(??___xxtofl+1)^0,w,c
  4366   00F8A8  100D               	iorwf	(??___xxtofl+2)^0,w,c
  4367   00F8AA  100E               	iorwf	(??___xxtofl+3)^0,w,c
  4368   00F8AC  A4D8               	btfss	status,2,c
  4369   00F8AE  EF5B  F07C         	goto	u2101
  4370   00F8B2  EF5D  F07C         	goto	u2100
  4371   00F8B6                     u2101:
  4372   00F8B6  EF3A  F07C         	goto	l2374
  4373   00F8BA                     u2100:
  4374   00F8BA  EF65  F07C         	goto	l2382
  4375   00F8BE                     l2380:
  4376   00F8BE  0610               	decf	___xxtofl@exp^0,f,c
  4377   00F8C0  90D8               	bcf	status,0,c
  4378   00F8C2  3611               	rlcf	___xxtofl@arg^0,f,c
  4379   00F8C4  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  4380   00F8C6  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  4381   00F8C8  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  4382   00F8CA                     l2382:
  4383   00F8CA  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  4384   00F8CC  EF6A  F07C         	goto	u2111
  4385   00F8D0  EF6C  F07C         	goto	u2110
  4386   00F8D4                     u2111:
  4387   00F8D4  EF74  F07C         	goto	l1058
  4388   00F8D8                     u2110:
  4389   00F8D8  0E02               	movlw	2
  4390   00F8DA  6010               	cpfslt	___xxtofl@exp^0,c
  4391   00F8DC  EF72  F07C         	goto	u2121
  4392   00F8E0  EF74  F07C         	goto	u2120
  4393   00F8E4                     u2121:
  4394   00F8E4  EF5F  F07C         	goto	l2380
  4395   00F8E8                     u2120:
  4396   00F8E8                     l1058:
  4397   00F8E8  B010               	btfsc	___xxtofl@exp^0,0,c
  4398   00F8EA  EF79  F07C         	goto	u2131
  4399   00F8EE  EF7B  F07C         	goto	u2130
  4400   00F8F2                     u2131:
  4401   00F8F2  EF7C  F07C         	goto	l2388
  4402   00F8F6                     u2130:
  4403   00F8F6  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  4404   00F8F8                     l2388:
  4405   00F8F8  90D8               	bcf	status,0,c
  4406   00F8FA  3210               	rrcf	___xxtofl@exp^0,f,c
  4407   00F8FC  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  4408   00F900  6A0C               	clrf	(??___xxtofl+1)^0,c
  4409   00F902  6A0D               	clrf	(??___xxtofl+2)^0,c
  4410   00F904  6A0E               	clrf	(??___xxtofl+3)^0,c
  4411   00F906  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  4412   00F90A  6A0D               	clrf	(??___xxtofl+2)^0,c
  4413   00F90C  6A0C               	clrf	(??___xxtofl+1)^0,c
  4414   00F90E  6A0B               	clrf	??___xxtofl^0,c
  4415   00F910  500B               	movf	??___xxtofl^0,w,c
  4416   00F912  1211               	iorwf	___xxtofl@arg^0,f,c
  4417   00F914  500C               	movf	(??___xxtofl+1)^0,w,c
  4418   00F916  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  4419   00F918  500D               	movf	(??___xxtofl+2)^0,w,c
  4420   00F91A  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  4421   00F91C  500E               	movf	(??___xxtofl+3)^0,w,c
  4422   00F91E  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  4423   00F920  500F               	movf	___xxtofl@sign^0,w,c
  4424   00F922  B4D8               	btfsc	status,2,c
  4425   00F924  EF96  F07C         	goto	u2141
  4426   00F928  EF98  F07C         	goto	u2140
  4427   00F92C                     u2141:
  4428   00F92C  EFA0  F07C         	goto	l2398
  4429   00F930                     u2140:
  4430   00F930  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  4431   00F932  EF9F  F07C         	goto	u2150
  4432   00F936  EF9D  F07C         	goto	u2151
  4433   00F93A                     u2151:
  4434   00F93A  EFA0  F07C         	goto	l2398
  4435   00F93E                     u2150:
  4436   00F93E  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  4437   00F940                     l2398:
  4438   00F940  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  4439   00F944  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  4440   00F948  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  4441   00F94C  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  4442   00F950                     l1047:
  4443   00F950  0012               	return		;funcret
  4444   00F952                     __end_of___xxtofl:
  4445                           	callstack 0
  4446                           
  4447 ;; *************** function ___wmul *****************
  4448 ;; Defined at:
  4449 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  multiplier      2    0[COMRAM] unsigned int 
  4452 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;  product         2    4[COMRAM] unsigned int 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  2    0[COMRAM] unsigned int 
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0, prodl, prodh
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4464 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4468 ;;Total ram usage:        6 bytes
  4469 ;; Hardware stack levels used: 1
  4470 ;; This function calls:
  4471 ;;		Nothing
  4472 ;; This function is called by:
  4473 ;;		_CCP_PWM_Set_Duty
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text25
  4478   00E710                     __ptext25:
  4479                           	callstack 0
  4480   00E710                     ___wmul:
  4481                           	callstack 29
  4482   00E710  5001               	movf	___wmul@multiplier^0,w,c
  4483   00E712  0203               	mulwf	___wmul@multiplicand^0,c
  4484   00E714  CFF3 F005          	movff	prodl,___wmul@product
  4485   00E718  CFF4 F006          	movff	prodh,___wmul@product+1
  4486   00E71C  5001               	movf	___wmul@multiplier^0,w,c
  4487   00E71E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4488   00E720  50F3               	movf	243,w,c
  4489   00E722  2606               	addwf	(___wmul@product+1)^0,f,c
  4490   00E724  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4491   00E726  0203               	mulwf	___wmul@multiplicand^0,c
  4492   00E728  50F3               	movf	243,w,c
  4493   00E72A  2606               	addwf	(___wmul@product+1)^0,f,c
  4494   00E72C  C005  F001         	movff	___wmul@product,?___wmul
  4495   00E730  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4496   00E734  0012               	return		;funcret
  4497   00E736                     __end_of___wmul:
  4498                           	callstack 0
  4499                           
  4500 ;; *************** function ___fltol *****************
  4501 ;; Defined at:
  4502 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;  f1              4   45[COMRAM] unsigned int 
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;  exp1            1   54[COMRAM] unsigned char 
  4507 ;;  sign1           1   53[COMRAM] unsigned char 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  4   45[COMRAM] long 
  4510 ;; Registers used:
  4511 ;;		wreg, status,2, status,0
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4517 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4520 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;Total ram usage:       10 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; This function calls:
  4524 ;;		Nothing
  4525 ;; This function is called by:
  4526 ;;		_CCP_PWM_Set_Duty
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text26
  4531   00F068                     __ptext26:
  4532                           	callstack 0
  4533   00F068                     ___fltol:
  4534                           	callstack 29
  4535   00F068  3430               	rlcf	(___fltol@f1+2)^0,w,c
  4536   00F06A  3431               	rlcf	(___fltol@f1+3)^0,w,c
  4537   00F06C  6E37               	movwf	___fltol@exp1^0,c
  4538   00F06E  5037               	movf	___fltol@exp1^0,w,c
  4539   00F070  A4D8               	btfss	status,2,c
  4540   00F072  EF3D  F078         	goto	u1991
  4541   00F076  EF3F  F078         	goto	u1990
  4542   00F07A                     u1991:
  4543   00F07A  EF49  F078         	goto	l2318
  4544   00F07E                     u1990:
  4545   00F07E                     l2314:
  4546   00F07E  0E00               	movlw	0
  4547   00F080  6E2E               	movwf	?___fltol^0,c
  4548   00F082  0E00               	movlw	0
  4549   00F084  6E2F               	movwf	(?___fltol+1)^0,c
  4550   00F086  0E00               	movlw	0
  4551   00F088  6E30               	movwf	(?___fltol+2)^0,c
  4552   00F08A  0E00               	movlw	0
  4553   00F08C  6E31               	movwf	(?___fltol+3)^0,c
  4554   00F08E  EFB6  F078         	goto	l686
  4555   00F092                     l2318:
  4556   00F092  C02E  F032         	movff	___fltol@f1,??___fltol
  4557   00F096  C02F  F033         	movff	___fltol@f1+1,??___fltol+1
  4558   00F09A  C030  F034         	movff	___fltol@f1+2,??___fltol+2
  4559   00F09E  C031  F035         	movff	___fltol@f1+3,??___fltol+3
  4560   00F0A2  0E20               	movlw	32
  4561   00F0A4  EF59  F078         	goto	u2000
  4562   00F0A8                     u2005:
  4563   00F0A8  90D8               	bcf	status,0,c
  4564   00F0AA  3235               	rrcf	(??___fltol+3)^0,f,c
  4565   00F0AC  3234               	rrcf	(??___fltol+2)^0,f,c
  4566   00F0AE  3233               	rrcf	(??___fltol+1)^0,f,c
  4567   00F0B0  3232               	rrcf	??___fltol^0,f,c
  4568   00F0B2                     u2000:
  4569   00F0B2  2EE8               	decfsz	wreg,f,c
  4570   00F0B4  EF54  F078         	goto	u2005
  4571   00F0B8  5032               	movf	??___fltol^0,w,c
  4572   00F0BA  6E36               	movwf	___fltol@sign1^0,c
  4573   00F0BC  8E30               	bsf	(___fltol@f1+2)^0,7,c
  4574   00F0BE  0EFF               	movlw	255
  4575   00F0C0  162E               	andwf	___fltol@f1^0,f,c
  4576   00F0C2  0EFF               	movlw	255
  4577   00F0C4  162F               	andwf	(___fltol@f1+1)^0,f,c
  4578   00F0C6  0EFF               	movlw	255
  4579   00F0C8  1630               	andwf	(___fltol@f1+2)^0,f,c
  4580   00F0CA  0E00               	movlw	0
  4581   00F0CC  1631               	andwf	(___fltol@f1+3)^0,f,c
  4582   00F0CE  0E96               	movlw	150
  4583   00F0D0  5E37               	subwf	___fltol@exp1^0,f,c
  4584   00F0D2  BE37               	btfsc	___fltol@exp1^0,7,c
  4585   00F0D4  EF70  F078         	goto	u2010
  4586   00F0D8  EF6E  F078         	goto	u2011
  4587   00F0DC                     u2011:
  4588   00F0DC  EF86  F078         	goto	l2338
  4589   00F0E0                     u2010:
  4590   00F0E0  5037               	movf	___fltol@exp1^0,w,c
  4591   00F0E2  0A80               	xorlw	128
  4592   00F0E4  0F97               	addlw	151
  4593   00F0E6  B0D8               	btfsc	status,0,c
  4594   00F0E8  EF78  F078         	goto	u2021
  4595   00F0EC  EF7A  F078         	goto	u2020
  4596   00F0F0                     u2021:
  4597   00F0F0  EF7C  F078         	goto	l2334
  4598   00F0F4                     u2020:
  4599   00F0F4  EF3F  F078         	goto	l2314
  4600   00F0F8                     l2334:
  4601   00F0F8  90D8               	bcf	status,0,c
  4602   00F0FA  3231               	rrcf	(___fltol@f1+3)^0,f,c
  4603   00F0FC  3230               	rrcf	(___fltol@f1+2)^0,f,c
  4604   00F0FE  322F               	rrcf	(___fltol@f1+1)^0,f,c
  4605   00F100  322E               	rrcf	___fltol@f1^0,f,c
  4606   00F102  3E37               	incfsz	___fltol@exp1^0,f,c
  4607   00F104  EF7C  F078         	goto	l2334
  4608   00F108  EF9E  F078         	goto	l2348
  4609   00F10C                     l2338:
  4610   00F10C  0E1F               	movlw	31
  4611   00F10E  6437               	cpfsgt	___fltol@exp1^0,c
  4612   00F110  EF8C  F078         	goto	u2031
  4613   00F114  EF8E  F078         	goto	u2030
  4614   00F118                     u2031:
  4615   00F118  EF96  F078         	goto	l2346
  4616   00F11C                     u2030:
  4617   00F11C  EF3F  F078         	goto	l2314
  4618   00F120                     l2344:
  4619   00F120  90D8               	bcf	status,0,c
  4620   00F122  362E               	rlcf	___fltol@f1^0,f,c
  4621   00F124  362F               	rlcf	(___fltol@f1+1)^0,f,c
  4622   00F126  3630               	rlcf	(___fltol@f1+2)^0,f,c
  4623   00F128  3631               	rlcf	(___fltol@f1+3)^0,f,c
  4624   00F12A  0637               	decf	___fltol@exp1^0,f,c
  4625   00F12C                     l2346:
  4626   00F12C  5037               	movf	___fltol@exp1^0,w,c
  4627   00F12E  A4D8               	btfss	status,2,c
  4628   00F130  EF9C  F078         	goto	u2041
  4629   00F134  EF9E  F078         	goto	u2040
  4630   00F138                     u2041:
  4631   00F138  EF90  F078         	goto	l2344
  4632   00F13C                     u2040:
  4633   00F13C                     l2348:
  4634   00F13C  5036               	movf	___fltol@sign1^0,w,c
  4635   00F13E  B4D8               	btfsc	status,2,c
  4636   00F140  EFA4  F078         	goto	u2051
  4637   00F144  EFA6  F078         	goto	u2050
  4638   00F148                     u2051:
  4639   00F148  EFAE  F078         	goto	l2352
  4640   00F14C                     u2050:
  4641   00F14C  1E31               	comf	(___fltol@f1+3)^0,f,c
  4642   00F14E  1E30               	comf	(___fltol@f1+2)^0,f,c
  4643   00F150  1E2F               	comf	(___fltol@f1+1)^0,f,c
  4644   00F152  6C2E               	negf	___fltol@f1^0,c
  4645   00F154  0E00               	movlw	0
  4646   00F156  222F               	addwfc	(___fltol@f1+1)^0,f,c
  4647   00F158  2230               	addwfc	(___fltol@f1+2)^0,f,c
  4648   00F15A  2231               	addwfc	(___fltol@f1+3)^0,f,c
  4649   00F15C                     l2352:
  4650   00F15C  C02E  F02E         	movff	___fltol@f1,?___fltol
  4651   00F160  C02F  F02F         	movff	___fltol@f1+1,?___fltol+1
  4652   00F164  C030  F030         	movff	___fltol@f1+2,?___fltol+2
  4653   00F168  C031  F031         	movff	___fltol@f1+3,?___fltol+3
  4654   00F16C                     l686:
  4655   00F16C  0012               	return		;funcret
  4656   00F16E                     __end_of___fltol:
  4657                           	callstack 0
  4658                           
  4659 ;; *************** function ___fldiv *****************
  4660 ;; Defined at:
  4661 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  b               4   20[COMRAM] long 
  4664 ;;  a               4   24[COMRAM] long 
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  grs             4   39[COMRAM] unsigned long 
  4667 ;;  rem             4   32[COMRAM] unsigned long 
  4668 ;;  new_exp         2   37[COMRAM] short 
  4669 ;;  aexp            1   44[COMRAM] unsigned char 
  4670 ;;  bexp            1   43[COMRAM] unsigned char 
  4671 ;;  sign            1   36[COMRAM] unsigned char 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  4   20[COMRAM] unsigned char 
  4674 ;; Registers used:
  4675 ;;		wreg, status,2, status,0
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4681 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;Total ram usage:       25 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; This function calls:
  4688 ;;		Nothing
  4689 ;; This function is called by:
  4690 ;;		_CCP_PWM_Set_Duty
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           	psect	text27
  4695   00FC66                     __ptext27:
  4696                           	callstack 0
  4697   00FC66                     ___fldiv:
  4698                           	callstack 29
  4699   00FC66  5018               	movf	(___fldiv@b+3)^0,w,c
  4700   00FC68  0B80               	andlw	128
  4701   00FC6A  6E25               	movwf	___fldiv@sign^0,c
  4702   00FC6C  5018               	movf	(___fldiv@b+3)^0,w,c
  4703   00FC6E  2418               	addwf	(___fldiv@b+3)^0,w,c
  4704   00FC70  6E2C               	movwf	___fldiv@bexp^0,c
  4705   00FC72  AE17               	btfss	(___fldiv@b+2)^0,7,c
  4706   00FC74  EF3E  F07E         	goto	u1761
  4707   00FC78  EF40  F07E         	goto	u1760
  4708   00FC7C                     u1761:
  4709   00FC7C  EF41  F07E         	goto	l2180
  4710   00FC80                     u1760:
  4711   00FC80  802C               	bsf	___fldiv@bexp^0,0,c
  4712   00FC82                     l2180:
  4713   00FC82  502C               	movf	___fldiv@bexp^0,w,c
  4714   00FC84  B4D8               	btfsc	status,2,c
  4715   00FC86  EF47  F07E         	goto	u1771
  4716   00FC8A  EF49  F07E         	goto	u1770
  4717   00FC8E                     u1771:
  4718   00FC8E  EF5E  F07E         	goto	l2190
  4719   00FC92                     u1770:
  4720   00FC92  282C               	incf	___fldiv@bexp^0,w,c
  4721   00FC94  A4D8               	btfss	status,2,c
  4722   00FC96  EF4F  F07E         	goto	u1781
  4723   00FC9A  EF51  F07E         	goto	u1780
  4724   00FC9E                     u1781:
  4725   00FC9E  EF59  F07E         	goto	l2186
  4726   00FCA2                     u1780:
  4727   00FCA2  0E00               	movlw	0
  4728   00FCA4  6E15               	movwf	___fldiv@b^0,c
  4729   00FCA6  0E00               	movlw	0
  4730   00FCA8  6E16               	movwf	(___fldiv@b+1)^0,c
  4731   00FCAA  0E00               	movlw	0
  4732   00FCAC  6E17               	movwf	(___fldiv@b+2)^0,c
  4733   00FCAE  0E00               	movlw	0
  4734   00FCB0  6E18               	movwf	(___fldiv@b+3)^0,c
  4735   00FCB2                     l2186:
  4736   00FCB2  8E17               	bsf	(___fldiv@b+2)^0,7,c
  4737   00FCB4  0E00               	movlw	0
  4738   00FCB6  6E18               	movwf	(___fldiv@b+3)^0,c
  4739   00FCB8  EF66  F07E         	goto	l2192
  4740   00FCBC                     l2190:
  4741   00FCBC  0E00               	movlw	0
  4742   00FCBE  6E15               	movwf	___fldiv@b^0,c
  4743   00FCC0  0E00               	movlw	0
  4744   00FCC2  6E16               	movwf	(___fldiv@b+1)^0,c
  4745   00FCC4  0E00               	movlw	0
  4746   00FCC6  6E17               	movwf	(___fldiv@b+2)^0,c
  4747   00FCC8  0E00               	movlw	0
  4748   00FCCA  6E18               	movwf	(___fldiv@b+3)^0,c
  4749   00FCCC                     l2192:
  4750   00FCCC  501C               	movf	(___fldiv@a+3)^0,w,c
  4751   00FCCE  0B80               	andlw	128
  4752   00FCD0  1A25               	xorwf	___fldiv@sign^0,f,c
  4753   00FCD2  501C               	movf	(___fldiv@a+3)^0,w,c
  4754   00FCD4  241C               	addwf	(___fldiv@a+3)^0,w,c
  4755   00FCD6  6E2D               	movwf	___fldiv@aexp^0,c
  4756   00FCD8  AE1B               	btfss	(___fldiv@a+2)^0,7,c
  4757   00FCDA  EF71  F07E         	goto	u1791
  4758   00FCDE  EF73  F07E         	goto	u1790
  4759   00FCE2                     u1791:
  4760   00FCE2  EF74  F07E         	goto	l2200
  4761   00FCE6                     u1790:
  4762   00FCE6  802D               	bsf	___fldiv@aexp^0,0,c
  4763   00FCE8                     l2200:
  4764   00FCE8  502D               	movf	___fldiv@aexp^0,w,c
  4765   00FCEA  B4D8               	btfsc	status,2,c
  4766   00FCEC  EF7A  F07E         	goto	u1801
  4767   00FCF0  EF7C  F07E         	goto	u1800
  4768   00FCF4                     u1801:
  4769   00FCF4  EF91  F07E         	goto	l2210
  4770   00FCF8                     u1800:
  4771   00FCF8  282D               	incf	___fldiv@aexp^0,w,c
  4772   00FCFA  A4D8               	btfss	status,2,c
  4773   00FCFC  EF82  F07E         	goto	u1811
  4774   00FD00  EF84  F07E         	goto	u1810
  4775   00FD04                     u1811:
  4776   00FD04  EF8C  F07E         	goto	l2206
  4777   00FD08                     u1810:
  4778   00FD08  0E00               	movlw	0
  4779   00FD0A  6E19               	movwf	___fldiv@a^0,c
  4780   00FD0C  0E00               	movlw	0
  4781   00FD0E  6E1A               	movwf	(___fldiv@a+1)^0,c
  4782   00FD10  0E00               	movlw	0
  4783   00FD12  6E1B               	movwf	(___fldiv@a+2)^0,c
  4784   00FD14  0E00               	movlw	0
  4785   00FD16  6E1C               	movwf	(___fldiv@a+3)^0,c
  4786   00FD18                     l2206:
  4787   00FD18  8E1B               	bsf	(___fldiv@a+2)^0,7,c
  4788   00FD1A  0E00               	movlw	0
  4789   00FD1C  6E1C               	movwf	(___fldiv@a+3)^0,c
  4790   00FD1E  EF99  F07E         	goto	l2212
  4791   00FD22                     l2210:
  4792   00FD22  0E00               	movlw	0
  4793   00FD24  6E19               	movwf	___fldiv@a^0,c
  4794   00FD26  0E00               	movlw	0
  4795   00FD28  6E1A               	movwf	(___fldiv@a+1)^0,c
  4796   00FD2A  0E00               	movlw	0
  4797   00FD2C  6E1B               	movwf	(___fldiv@a+2)^0,c
  4798   00FD2E  0E00               	movlw	0
  4799   00FD30  6E1C               	movwf	(___fldiv@a+3)^0,c
  4800   00FD32                     l2212:
  4801   00FD32  5019               	movf	___fldiv@a^0,w,c
  4802   00FD34  101A               	iorwf	(___fldiv@a+1)^0,w,c
  4803   00FD36  101B               	iorwf	(___fldiv@a+2)^0,w,c
  4804   00FD38  101C               	iorwf	(___fldiv@a+3)^0,w,c
  4805   00FD3A  A4D8               	btfss	status,2,c
  4806   00FD3C  EFA2  F07E         	goto	u1821
  4807   00FD40  EFA4  F07E         	goto	u1820
  4808   00FD44                     u1821:
  4809   00FD44  EFBC  F07E         	goto	l2224
  4810   00FD48                     u1820:
  4811   00FD48  0E00               	movlw	0
  4812   00FD4A  6E15               	movwf	___fldiv@b^0,c
  4813   00FD4C  0E00               	movlw	0
  4814   00FD4E  6E16               	movwf	(___fldiv@b+1)^0,c
  4815   00FD50  0E00               	movlw	0
  4816   00FD52  6E17               	movwf	(___fldiv@b+2)^0,c
  4817   00FD54  0E00               	movlw	0
  4818   00FD56  6E18               	movwf	(___fldiv@b+3)^0,c
  4819   00FD58  0E80               	movlw	128
  4820   00FD5A  1217               	iorwf	(___fldiv@b+2)^0,f,c
  4821   00FD5C  0E7F               	movlw	127
  4822   00FD5E  1218               	iorwf	(___fldiv@b+3)^0,f,c
  4823   00FD60                     l2218:
  4824   00FD60  5025               	movf	___fldiv@sign^0,w,c
  4825   00FD62  1218               	iorwf	(___fldiv@b+3)^0,f,c
  4826   00FD64  C015  F015         	movff	___fldiv@b,?___fldiv
  4827   00FD68  C016  F016         	movff	___fldiv@b+1,?___fldiv+1
  4828   00FD6C  C017  F017         	movff	___fldiv@b+2,?___fldiv+2
  4829   00FD70  C018  F018         	movff	___fldiv@b+3,?___fldiv+3
  4830   00FD74  EFFF  F07F         	goto	l971
  4831   00FD78                     l2224:
  4832   00FD78  502C               	movf	___fldiv@bexp^0,w,c
  4833   00FD7A  A4D8               	btfss	status,2,c
  4834   00FD7C  EFC2  F07E         	goto	u1831
  4835   00FD80  EFC4  F07E         	goto	u1830
  4836   00FD84                     u1831:
  4837   00FD84  EFCE  F07E         	goto	l2232
  4838   00FD88                     u1830:
  4839   00FD88  0E00               	movlw	0
  4840   00FD8A  6E15               	movwf	?___fldiv^0,c
  4841   00FD8C  0E00               	movlw	0
  4842   00FD8E  6E16               	movwf	(?___fldiv+1)^0,c
  4843   00FD90  0E00               	movlw	0
  4844   00FD92  6E17               	movwf	(?___fldiv+2)^0,c
  4845   00FD94  0E00               	movlw	0
  4846   00FD96  6E18               	movwf	(?___fldiv+3)^0,c
  4847   00FD98  EFFF  F07F         	goto	l971
  4848   00FD9C                     l2232:
  4849   00FD9C  502D               	movf	___fldiv@aexp^0,w,c
  4850   00FD9E  C02C  F01D         	movff	___fldiv@bexp,??___fldiv
  4851   00FDA2  6A1E               	clrf	(??___fldiv+1)^0,c
  4852   00FDA4  5E1D               	subwf	??___fldiv^0,f,c
  4853   00FDA6  0E00               	movlw	0
  4854   00FDA8  5A1E               	subwfb	(??___fldiv+1)^0,f,c
  4855   00FDAA  0E7F               	movlw	127
  4856   00FDAC  241D               	addwf	??___fldiv^0,w,c
  4857   00FDAE  6E26               	movwf	___fldiv@new_exp^0,c
  4858   00FDB0  0E00               	movlw	0
  4859   00FDB2  201E               	addwfc	(??___fldiv+1)^0,w,c
  4860   00FDB4  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  4861   00FDB6  C015  F021         	movff	___fldiv@b,___fldiv@rem
  4862   00FDBA  C016  F022         	movff	___fldiv@b+1,___fldiv@rem+1
  4863   00FDBE  C017  F023         	movff	___fldiv@b+2,___fldiv@rem+2
  4864   00FDC2  C018  F024         	movff	___fldiv@b+3,___fldiv@rem+3
  4865   00FDC6  0E00               	movlw	0
  4866   00FDC8  6E15               	movwf	___fldiv@b^0,c
  4867   00FDCA  0E00               	movlw	0
  4868   00FDCC  6E16               	movwf	(___fldiv@b+1)^0,c
  4869   00FDCE  0E00               	movlw	0
  4870   00FDD0  6E17               	movwf	(___fldiv@b+2)^0,c
  4871   00FDD2  0E00               	movlw	0
  4872   00FDD4  6E18               	movwf	(___fldiv@b+3)^0,c
  4873   00FDD6  0E00               	movlw	0
  4874   00FDD8  6E28               	movwf	___fldiv@grs^0,c
  4875   00FDDA  0E00               	movlw	0
  4876   00FDDC  6E29               	movwf	(___fldiv@grs+1)^0,c
  4877   00FDDE  0E00               	movlw	0
  4878   00FDE0  6E2A               	movwf	(___fldiv@grs+2)^0,c
  4879   00FDE2  0E00               	movlw	0
  4880   00FDE4  6E2B               	movwf	(___fldiv@grs+3)^0,c
  4881   00FDE6  0E00               	movlw	0
  4882   00FDE8  6E2D               	movwf	___fldiv@aexp^0,c
  4883   00FDEA  EF2F  F07F         	goto	l973
  4884   00FDEE                     l2242:
  4885   00FDEE  502D               	movf	___fldiv@aexp^0,w,c
  4886   00FDF0  B4D8               	btfsc	status,2,c
  4887   00FDF2  EFFD  F07E         	goto	u1841
  4888   00FDF6  EFFF  F07E         	goto	u1840
  4889   00FDFA                     u1841:
  4890   00FDFA  EF16  F07F         	goto	l2250
  4891   00FDFE                     u1840:
  4892   00FDFE  90D8               	bcf	status,0,c
  4893   00FE00  3621               	rlcf	___fldiv@rem^0,f,c
  4894   00FE02  3622               	rlcf	(___fldiv@rem+1)^0,f,c
  4895   00FE04  3623               	rlcf	(___fldiv@rem+2)^0,f,c
  4896   00FE06  3624               	rlcf	(___fldiv@rem+3)^0,f,c
  4897   00FE08  90D8               	bcf	status,0,c
  4898   00FE0A  3615               	rlcf	___fldiv@b^0,f,c
  4899   00FE0C  3616               	rlcf	(___fldiv@b+1)^0,f,c
  4900   00FE0E  3617               	rlcf	(___fldiv@b+2)^0,f,c
  4901   00FE10  3618               	rlcf	(___fldiv@b+3)^0,f,c
  4902   00FE12  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  4903   00FE14  EF0E  F07F         	goto	u1851
  4904   00FE18  EF10  F07F         	goto	u1850
  4905   00FE1C                     u1851:
  4906   00FE1C  EF11  F07F         	goto	l976
  4907   00FE20                     u1850:
  4908   00FE20  8015               	bsf	___fldiv@b^0,0,c
  4909   00FE22                     l976:
  4910   00FE22  90D8               	bcf	status,0,c
  4911   00FE24  3628               	rlcf	___fldiv@grs^0,f,c
  4912   00FE26  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  4913   00FE28  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  4914   00FE2A  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  4915   00FE2C                     l2250:
  4916   00FE2C  5019               	movf	___fldiv@a^0,w,c
  4917   00FE2E  5C21               	subwf	___fldiv@rem^0,w,c
  4918   00FE30  501A               	movf	(___fldiv@a+1)^0,w,c
  4919   00FE32  5822               	subwfb	(___fldiv@rem+1)^0,w,c
  4920   00FE34  501B               	movf	(___fldiv@a+2)^0,w,c
  4921   00FE36  5823               	subwfb	(___fldiv@rem+2)^0,w,c
  4922   00FE38  501C               	movf	(___fldiv@a+3)^0,w,c
  4923   00FE3A  5824               	subwfb	(___fldiv@rem+3)^0,w,c
  4924   00FE3C  A0D8               	btfss	status,0,c
  4925   00FE3E  EF23  F07F         	goto	u1861
  4926   00FE42  EF25  F07F         	goto	u1860
  4927   00FE46                     u1861:
  4928   00FE46  EF2E  F07F         	goto	l2256
  4929   00FE4A                     u1860:
  4930   00FE4A  8C2B               	bsf	(___fldiv@grs+3)^0,6,c
  4931   00FE4C  5019               	movf	___fldiv@a^0,w,c
  4932   00FE4E  5E21               	subwf	___fldiv@rem^0,f,c
  4933   00FE50  501A               	movf	(___fldiv@a+1)^0,w,c
  4934   00FE52  5A22               	subwfb	(___fldiv@rem+1)^0,f,c
  4935   00FE54  501B               	movf	(___fldiv@a+2)^0,w,c
  4936   00FE56  5A23               	subwfb	(___fldiv@rem+2)^0,f,c
  4937   00FE58  501C               	movf	(___fldiv@a+3)^0,w,c
  4938   00FE5A  5A24               	subwfb	(___fldiv@rem+3)^0,f,c
  4939   00FE5C                     l2256:
  4940   00FE5C  2A2D               	incf	___fldiv@aexp^0,f,c
  4941   00FE5E                     l973:
  4942   00FE5E  0E19               	movlw	25
  4943   00FE60  642D               	cpfsgt	___fldiv@aexp^0,c
  4944   00FE62  EF35  F07F         	goto	u1871
  4945   00FE66  EF37  F07F         	goto	u1870
  4946   00FE6A                     u1871:
  4947   00FE6A  EFF7  F07E         	goto	l2242
  4948   00FE6E                     u1870:
  4949   00FE6E  5021               	movf	___fldiv@rem^0,w,c
  4950   00FE70  1022               	iorwf	(___fldiv@rem+1)^0,w,c
  4951   00FE72  1023               	iorwf	(___fldiv@rem+2)^0,w,c
  4952   00FE74  1024               	iorwf	(___fldiv@rem+3)^0,w,c
  4953   00FE76  B4D8               	btfsc	status,2,c
  4954   00FE78  EF40  F07F         	goto	u1881
  4955   00FE7C  EF42  F07F         	goto	u1880
  4956   00FE80                     u1881:
  4957   00FE80  EF5A  F07F         	goto	l2268
  4958   00FE84                     u1880:
  4959   00FE84  8028               	bsf	___fldiv@grs^0,0,c
  4960   00FE86  EF5A  F07F         	goto	l2268
  4961   00FE8A                     l2262:
  4962   00FE8A  90D8               	bcf	status,0,c
  4963   00FE8C  3615               	rlcf	___fldiv@b^0,f,c
  4964   00FE8E  3616               	rlcf	(___fldiv@b+1)^0,f,c
  4965   00FE90  3617               	rlcf	(___fldiv@b+2)^0,f,c
  4966   00FE92  3618               	rlcf	(___fldiv@b+3)^0,f,c
  4967   00FE94  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  4968   00FE96  EF4F  F07F         	goto	u1891
  4969   00FE9A  EF51  F07F         	goto	u1890
  4970   00FE9E                     u1891:
  4971   00FE9E  EF52  F07F         	goto	l982
  4972   00FEA2                     u1890:
  4973   00FEA2  8015               	bsf	___fldiv@b^0,0,c
  4974   00FEA4                     l982:
  4975   00FEA4  90D8               	bcf	status,0,c
  4976   00FEA6  3628               	rlcf	___fldiv@grs^0,f,c
  4977   00FEA8  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  4978   00FEAA  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  4979   00FEAC  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  4980   00FEAE  0626               	decf	___fldiv@new_exp^0,f,c
  4981   00FEB0  A0D8               	btfss	status,0,c
  4982   00FEB2  0627               	decf	(___fldiv@new_exp+1)^0,f,c
  4983   00FEB4                     l2268:
  4984   00FEB4  AE17               	btfss	(___fldiv@b+2)^0,7,c
  4985   00FEB6  EF5F  F07F         	goto	u1901
  4986   00FEBA  EF61  F07F         	goto	u1900
  4987   00FEBE                     u1901:
  4988   00FEBE  EF45  F07F         	goto	l2262
  4989   00FEC2                     u1900:
  4990   00FEC2  0E00               	movlw	0
  4991   00FEC4  6E2D               	movwf	___fldiv@aexp^0,c
  4992   00FEC6  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  4993   00FEC8  EF68  F07F         	goto	u1911
  4994   00FECC  EF6A  F07F         	goto	u1910
  4995   00FED0                     u1911:
  4996   00FED0  EF8E  F07F         	goto	l984
  4997   00FED4                     u1910:
  4998   00FED4  0EFF               	movlw	255
  4999   00FED6  1428               	andwf	___fldiv@grs^0,w,c
  5000   00FED8  6E1D               	movwf	??___fldiv^0,c
  5001   00FEDA  0EFF               	movlw	255
  5002   00FEDC  1429               	andwf	(___fldiv@grs+1)^0,w,c
  5003   00FEDE  6E1E               	movwf	(??___fldiv+1)^0,c
  5004   00FEE0  0EFF               	movlw	255
  5005   00FEE2  142A               	andwf	(___fldiv@grs+2)^0,w,c
  5006   00FEE4  6E1F               	movwf	(??___fldiv+2)^0,c
  5007   00FEE6  0E7F               	movlw	127
  5008   00FEE8  142B               	andwf	(___fldiv@grs+3)^0,w,c
  5009   00FEEA  6E20               	movwf	(??___fldiv+3)^0,c
  5010   00FEEC  501D               	movf	??___fldiv^0,w,c
  5011   00FEEE  101E               	iorwf	(??___fldiv+1)^0,w,c
  5012   00FEF0  101F               	iorwf	(??___fldiv+2)^0,w,c
  5013   00FEF2  1020               	iorwf	(??___fldiv+3)^0,w,c
  5014   00FEF4  B4D8               	btfsc	status,2,c
  5015   00FEF6  EF7F  F07F         	goto	u1921
  5016   00FEFA  EF81  F07F         	goto	u1920
  5017   00FEFE                     u1921:
  5018   00FEFE  EF85  F07F         	goto	l985
  5019   00FF02                     u1920:
  5020   00FF02                     l2276:
  5021   00FF02  0E01               	movlw	1
  5022   00FF04  6E2D               	movwf	___fldiv@aexp^0,c
  5023   00FF06  EF8E  F07F         	goto	l984
  5024   00FF0A                     l985:
  5025   00FF0A  A015               	btfss	___fldiv@b^0,0,c
  5026   00FF0C  EF8A  F07F         	goto	u1931
  5027   00FF10  EF8C  F07F         	goto	u1930
  5028   00FF14                     u1931:
  5029   00FF14  EF8E  F07F         	goto	l984
  5030   00FF18                     u1930:
  5031   00FF18  EF81  F07F         	goto	l2276
  5032   00FF1C                     l984:
  5033   00FF1C  502D               	movf	___fldiv@aexp^0,w,c
  5034   00FF1E  B4D8               	btfsc	status,2,c
  5035   00FF20  EF94  F07F         	goto	u1941
  5036   00FF24  EF96  F07F         	goto	u1940
  5037   00FF28                     u1941:
  5038   00FF28  EFBA  F07F         	goto	l2288
  5039   00FF2C                     u1940:
  5040   00FF2C  0E01               	movlw	1
  5041   00FF2E  2615               	addwf	___fldiv@b^0,f,c
  5042   00FF30  0E00               	movlw	0
  5043   00FF32  2216               	addwfc	(___fldiv@b+1)^0,f,c
  5044   00FF34  2217               	addwfc	(___fldiv@b+2)^0,f,c
  5045   00FF36  2218               	addwfc	(___fldiv@b+3)^0,f,c
  5046   00FF38  A018               	btfss	(___fldiv@b+3)^0,0,c
  5047   00FF3A  EFA1  F07F         	goto	u1951
  5048   00FF3E  EFA3  F07F         	goto	u1950
  5049   00FF42                     u1951:
  5050   00FF42  EFBA  F07F         	goto	l2288
  5051   00FF46                     u1950:
  5052   00FF46  C015  F01D         	movff	___fldiv@b,??___fldiv
  5053   00FF4A  C016  F01E         	movff	___fldiv@b+1,??___fldiv+1
  5054   00FF4E  C017  F01F         	movff	___fldiv@b+2,??___fldiv+2
  5055   00FF52  C018  F020         	movff	___fldiv@b+3,??___fldiv+3
  5056   00FF56  3420               	rlcf	(??___fldiv+3)^0,w,c
  5057   00FF58  3220               	rrcf	(??___fldiv+3)^0,f,c
  5058   00FF5A  321F               	rrcf	(??___fldiv+2)^0,f,c
  5059   00FF5C  321E               	rrcf	(??___fldiv+1)^0,f,c
  5060   00FF5E  321D               	rrcf	??___fldiv^0,f,c
  5061   00FF60  C01D  F015         	movff	??___fldiv,___fldiv@b
  5062   00FF64  C01E  F016         	movff	??___fldiv+1,___fldiv@b+1
  5063   00FF68  C01F  F017         	movff	??___fldiv+2,___fldiv@b+2
  5064   00FF6C  C020  F018         	movff	??___fldiv+3,___fldiv@b+3
  5065   00FF70  4A26               	infsnz	___fldiv@new_exp^0,f,c
  5066   00FF72  2A27               	incf	(___fldiv@new_exp+1)^0,f,c
  5067   00FF74                     l2288:
  5068   00FF74  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5069   00FF76  EFC5  F07F         	goto	u1961
  5070   00FF7A  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  5071   00FF7C  E108               	bnz	u1960
  5072   00FF7E  2826               	incf	___fldiv@new_exp^0,w,c
  5073   00FF80  A0D8               	btfss	status,0,c
  5074   00FF82  EFC5  F07F         	goto	u1961
  5075   00FF86  EFC7  F07F         	goto	u1960
  5076   00FF8A                     u1961:
  5077   00FF8A  EFD2  F07F         	goto	l2292
  5078   00FF8E                     u1960:
  5079   00FF8E  0E00               	movlw	0
  5080   00FF90  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  5081   00FF92  6826               	setf	___fldiv@new_exp^0,c
  5082   00FF94  0E00               	movlw	0
  5083   00FF96  6E15               	movwf	___fldiv@b^0,c
  5084   00FF98  0E00               	movlw	0
  5085   00FF9A  6E16               	movwf	(___fldiv@b+1)^0,c
  5086   00FF9C  0E00               	movlw	0
  5087   00FF9E  6E17               	movwf	(___fldiv@b+2)^0,c
  5088   00FFA0  0E00               	movlw	0
  5089   00FFA2  6E18               	movwf	(___fldiv@b+3)^0,c
  5090   00FFA4                     l2292:
  5091   00FFA4  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5092   00FFA6  EFDF  F07F         	goto	u1970
  5093   00FFAA  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  5094   00FFAC  E106               	bnz	u1971
  5095   00FFAE  0426               	decf	___fldiv@new_exp^0,w,c
  5096   00FFB0  B0D8               	btfsc	status,0,c
  5097   00FFB2  EFDD  F07F         	goto	u1971
  5098   00FFB6  EFDF  F07F         	goto	u1970
  5099   00FFBA                     u1971:
  5100   00FFBA  EFED  F07F         	goto	l2296
  5101   00FFBE                     u1970:
  5102   00FFBE  0E00               	movlw	0
  5103   00FFC0  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  5104   00FFC2  0E00               	movlw	0
  5105   00FFC4  6E26               	movwf	___fldiv@new_exp^0,c
  5106   00FFC6  0E00               	movlw	0
  5107   00FFC8  6E15               	movwf	___fldiv@b^0,c
  5108   00FFCA  0E00               	movlw	0
  5109   00FFCC  6E16               	movwf	(___fldiv@b+1)^0,c
  5110   00FFCE  0E00               	movlw	0
  5111   00FFD0  6E17               	movwf	(___fldiv@b+2)^0,c
  5112   00FFD2  0E00               	movlw	0
  5113   00FFD4  6E18               	movwf	(___fldiv@b+3)^0,c
  5114   00FFD6  0E00               	movlw	0
  5115   00FFD8  6E25               	movwf	___fldiv@sign^0,c
  5116   00FFDA                     l2296:
  5117   00FFDA  C026  F02C         	movff	___fldiv@new_exp,___fldiv@bexp
  5118   00FFDE  A02C               	btfss	___fldiv@bexp^0,0,c
  5119   00FFE0  EFF4  F07F         	goto	u1981
  5120   00FFE4  EFF6  F07F         	goto	u1980
  5121   00FFE8                     u1981:
  5122   00FFE8  EFF9  F07F         	goto	l2302
  5123   00FFEC                     u1980:
  5124   00FFEC  8E17               	bsf	(___fldiv@b+2)^0,7,c
  5125   00FFEE  EFFA  F07F         	goto	l2304
  5126   00FFF2                     l2302:
  5127   00FFF2  9E17               	bcf	(___fldiv@b+2)^0,7,c
  5128   00FFF4                     l2304:
  5129   00FFF4  90D8               	bcf	status,0,c
  5130   00FFF6  302C               	rrcf	___fldiv@bexp^0,w,c
  5131   00FFF8  6E18               	movwf	(___fldiv@b+3)^0,c
  5132   00FFFA  EFB0  F07E         	goto	l2218
  5133   00FFFE                     l971:
  5134   00FFFE  0012               	return		;funcret
  5135   010000                     __end_of___fldiv:
  5136                           	callstack 0
  5137   000000                     
  5138                           	psect	rparam
  5139   000000                     
  5140                           	psect	idloc
  5141                           
  5142                           ;Config register IDLOC0 @ 0x200000
  5143                           ;	unspecified, using default values
  5144   200000                     	org	2097152
  5145   200000  FF                 	db	255
  5146                           
  5147                           ;Config register IDLOC1 @ 0x200001
  5148                           ;	unspecified, using default values
  5149   200001                     	org	2097153
  5150   200001  FF                 	db	255
  5151                           
  5152                           ;Config register IDLOC2 @ 0x200002
  5153                           ;	unspecified, using default values
  5154   200002                     	org	2097154
  5155   200002  FF                 	db	255
  5156                           
  5157                           ;Config register IDLOC3 @ 0x200003
  5158                           ;	unspecified, using default values
  5159   200003                     	org	2097155
  5160   200003  FF                 	db	255
  5161                           
  5162                           ;Config register IDLOC4 @ 0x200004
  5163                           ;	unspecified, using default values
  5164   200004                     	org	2097156
  5165   200004  FF                 	db	255
  5166                           
  5167                           ;Config register IDLOC5 @ 0x200005
  5168                           ;	unspecified, using default values
  5169   200005                     	org	2097157
  5170   200005  FF                 	db	255
  5171                           
  5172                           ;Config register IDLOC6 @ 0x200006
  5173                           ;	unspecified, using default values
  5174   200006                     	org	2097158
  5175   200006  FF                 	db	255
  5176                           
  5177                           ;Config register IDLOC7 @ 0x200007
  5178                           ;	unspecified, using default values
  5179   200007                     	org	2097159
  5180   200007  FF                 	db	255
  5181                           
  5182                           	psect	config
  5183                           
  5184                           ; Padding undefined space
  5185   300000                     	org	3145728
  5186   300000  FF                 	db	255
  5187                           
  5188                           ;Config register CONFIG1H @ 0x300001
  5189                           ;	unspecified, using default values
  5190                           ;	Oscillator Selection bits
  5191                           ;	FOSC = 0x7, unprogrammed default
  5192                           ;	Fail-Safe Clock Monitor Enable bit
  5193                           ;	FCMEN = 0x0, unprogrammed default
  5194                           ;	Internal/External Oscillator Switchover bit
  5195                           ;	IESO = 0x0, unprogrammed default
  5196   300001                     	org	3145729
  5197   300001  07                 	db	7
  5198                           
  5199                           ;Config register CONFIG2L @ 0x300002
  5200                           ;	unspecified, using default values
  5201                           ;	Power-up Timer Enable bit
  5202                           ;	PWRT = 0x1, unprogrammed default
  5203                           ;	Brown-out Reset Enable bits
  5204                           ;	BOREN = 0x3, unprogrammed default
  5205                           ;	Brown Out Reset Voltage bits
  5206                           ;	BORV = 0x3, unprogrammed default
  5207   300002                     	org	3145730
  5208   300002  1F                 	db	31
  5209                           
  5210                           ;Config register CONFIG2H @ 0x300003
  5211                           ;	unspecified, using default values
  5212                           ;	Watchdog Timer Enable bit
  5213                           ;	WDTEN = 0x1, unprogrammed default
  5214                           ;	Watchdog Timer Postscale Select bits
  5215                           ;	WDTPS = 0xF, unprogrammed default
  5216   300003                     	org	3145731
  5217   300003  1F                 	db	31
  5218                           
  5219                           ; Padding undefined space
  5220   300004                     	org	3145732
  5221   300004  FF                 	db	255
  5222                           
  5223                           ;Config register CONFIG3H @ 0x300005
  5224                           ;	unspecified, using default values
  5225                           ;	CCP2 MUX bit
  5226                           ;	CCP2MX = 0x1, unprogrammed default
  5227                           ;	PORTB A/D Enable bit
  5228                           ;	PBADEN = 0x1, unprogrammed default
  5229                           ;	Low-Power Timer1 Oscillator Enable bit
  5230                           ;	LPT1OSC = 0x0, unprogrammed default
  5231                           ;	HFINTOSC Fast Start-up
  5232                           ;	HFOFST = 0x1, unprogrammed default
  5233                           ;	MCLR Pin Enable bit
  5234                           ;	MCLRE = 0x1, unprogrammed default
  5235   300005                     	org	3145733
  5236   300005  8B                 	db	139
  5237                           
  5238                           ;Config register CONFIG4L @ 0x300006
  5239                           ;	unspecified, using default values
  5240                           ;	Stack Full/Underflow Reset Enable bit
  5241                           ;	STVREN = 0x1, unprogrammed default
  5242                           ;	Single-Supply ICSP Enable bit
  5243                           ;	LVP = 0x1, unprogrammed default
  5244                           ;	Extended Instruction Set Enable bit
  5245                           ;	XINST = 0x0, unprogrammed default
  5246                           ;	Background Debugger Enable bit
  5247                           ;	DEBUG = 0x1, unprogrammed default
  5248   300006                     	org	3145734
  5249   300006  85                 	db	133
  5250                           
  5251                           ; Padding undefined space
  5252   300007                     	org	3145735
  5253   300007  FF                 	db	255
  5254                           
  5255                           ;Config register CONFIG5L @ 0x300008
  5256                           ;	unspecified, using default values
  5257                           ;	Code Protection Block 0
  5258                           ;	CP0 = 0x1, unprogrammed default
  5259                           ;	Code Protection Block 1
  5260                           ;	CP1 = 0x1, unprogrammed default
  5261                           ;	Code Protection Block 2
  5262                           ;	CP2 = 0x1, unprogrammed default
  5263                           ;	Code Protection Block 3
  5264                           ;	CP3 = 0x1, unprogrammed default
  5265   300008                     	org	3145736
  5266   300008  0F                 	db	15
  5267                           
  5268                           ;Config register CONFIG5H @ 0x300009
  5269                           ;	unspecified, using default values
  5270                           ;	Boot Block Code Protection bit
  5271                           ;	CPB = 0x1, unprogrammed default
  5272                           ;	Data EEPROM Code Protection bit
  5273                           ;	CPD = 0x1, unprogrammed default
  5274   300009                     	org	3145737
  5275   300009  C0                 	db	192
  5276                           
  5277                           ;Config register CONFIG6L @ 0x30000A
  5278                           ;	unspecified, using default values
  5279                           ;	Write Protection Block 0
  5280                           ;	WRT0 = 0x1, unprogrammed default
  5281                           ;	Write Protection Block 1
  5282                           ;	WRT1 = 0x1, unprogrammed default
  5283                           ;	Write Protection Block 2
  5284                           ;	WRT2 = 0x1, unprogrammed default
  5285                           ;	Write Protection Block 3
  5286                           ;	WRT3 = 0x1, unprogrammed default
  5287   30000A                     	org	3145738
  5288   30000A  0F                 	db	15
  5289                           
  5290                           ;Config register CONFIG6H @ 0x30000B
  5291                           ;	unspecified, using default values
  5292                           ;	Configuration Register Write Protection bit
  5293                           ;	WRTC = 0x1, unprogrammed default
  5294                           ;	Boot Block Write Protection bit
  5295                           ;	WRTB = 0x1, unprogrammed default
  5296                           ;	Data EEPROM Write Protection bit
  5297                           ;	WRTD = 0x1, unprogrammed default
  5298   30000B                     	org	3145739
  5299   30000B  E0                 	db	224
  5300                           
  5301                           ;Config register CONFIG7L @ 0x30000C
  5302                           ;	unspecified, using default values
  5303                           ;	Table Read Protection Block 0
  5304                           ;	EBTR0 = 0x1, unprogrammed default
  5305                           ;	Table Read Protection Block 1
  5306                           ;	EBTR1 = 0x1, unprogrammed default
  5307                           ;	Table Read Protection Block 2
  5308                           ;	EBTR2 = 0x1, unprogrammed default
  5309                           ;	Table Read Protection Block 3
  5310                           ;	EBTR3 = 0x1, unprogrammed default
  5311   30000C                     	org	3145740
  5312   30000C  0F                 	db	15
  5313                           
  5314                           ;Config register CONFIG7H @ 0x30000D
  5315                           ;	unspecified, using default values
  5316                           ;	Boot Block Table Read Protection bit
  5317                           ;	EBTRB = 0x1, unprogrammed default
  5318   30000D                     	org	3145741
  5319   30000D  40                 	db	64
  5320                           tosu	equ	0xFFF
  5321                           tosh	equ	0xFFE
  5322                           tosl	equ	0xFFD
  5323                           stkptr	equ	0xFFC
  5324                           pclatu	equ	0xFFB
  5325                           pclath	equ	0xFFA
  5326                           pcl	equ	0xFF9
  5327                           tblptru	equ	0xFF8
  5328                           tblptrh	equ	0xFF7
  5329                           tblptrl	equ	0xFF6
  5330                           tablat	equ	0xFF5
  5331                           prodh	equ	0xFF4
  5332                           prodl	equ	0xFF3
  5333                           indf0	equ	0xFEF
  5334                           postinc0	equ	0xFEE
  5335                           postdec0	equ	0xFED
  5336                           preinc0	equ	0xFEC
  5337                           plusw0	equ	0xFEB
  5338                           fsr0h	equ	0xFEA
  5339                           fsr0l	equ	0xFE9
  5340                           wreg	equ	0xFE8
  5341                           indf1	equ	0xFE7
  5342                           postinc1	equ	0xFE6
  5343                           postdec1	equ	0xFE5
  5344                           preinc1	equ	0xFE4
  5345                           plusw1	equ	0xFE3
  5346                           fsr1h	equ	0xFE2
  5347                           fsr1l	equ	0xFE1
  5348                           bsr	equ	0xFE0
  5349                           indf2	equ	0xFDF
  5350                           postinc2	equ	0xFDE
  5351                           postdec2	equ	0xFDD
  5352                           preinc2	equ	0xFDC
  5353                           plusw2	equ	0xFDB
  5354                           fsr2h	equ	0xFDA
  5355                           fsr2l	equ	0xFD9
  5356                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        77
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     62      95
    BANK0           160      0      53
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    CCP_PWM_Stop@_ccp_obj	PTR const struct . size(2) Largest target is 9
		 -> motor_sp(BANK0[9]), 

    CCP_PWM_Start@_ccp_obj	PTR const struct . size(2) Largest target is 9
		 -> motor_sp(BANK0[9]), 

    CCP_PWM_Set_Duty@_ccp_obj	PTR const struct . size(2) Largest target is 9
		 -> motor_sp(BANK0[9]), 

    CCP_Init@_ccp_obj	PTR const struct . size(2) Largest target is 9
		 -> motor_sp(BANK0[9]), 

    segment_write@seg	PTR const struct . size(2) Largest target is 5
		 -> myseg(BANK0[5]), 

    segment_intilaize@seg	PTR struct . size(2) Largest target is 5
		 -> myseg(BANK0[5]), 

    led_turn_off@led	PTR const struct . size(2) Largest target is 1
		 -> LIGHT_LED(COMRAM[1]), 

    led_turn_on@led	PTR const struct . size(2) Largest target is 1
		 -> LIGHT_LED(COMRAM[1]), 

    led_initialize@led	PTR const struct . size(2) Largest target is 1
		 -> LIGHT_LED(COMRAM[1]), 

    DC_motor_Stop@motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(COMRAM[2]), motor_1(COMRAM[2]), 

    DC_motor_MOve_Anti_clock_Wise@motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(COMRAM[2]), motor_1(COMRAM[2]), 

    DC_motor_MOve_clock_Wise@motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(COMRAM[2]), motor_1(COMRAM[2]), 

    DC_motor_initialize@motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(COMRAM[2]), motor_1(COMRAM[2]), 

    gpio_pin_read_logic@status	PTR enum E2267 size(2) Largest target is 1
		 -> button_read_state@Pin_logic(COMRAM[1]), 

    gpio_pin_read_logic@pin	PTR const struct . size(2) Largest target is 3
		 -> Speed_down(BANK0[3]), Speed_up(BANK0[3]), LIGHTS_btn_OFF(BANK0[3]), MOTORS_BACKWARD(COMRAM[3]), 
		 -> MOTORS_FORWARD(COMRAM[3]), LIGHTS_btn_ON(COMRAM[3]), 

    gpio_pin_write_logic@pin	PTR const struct . size(2) Largest target is 5
		 -> led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), DC_motor_Stop@pin_obj_2(COMRAM[1]), DC_motor_Stop@pin_obj_1(COMRAM[1]), 
		 -> DC_motor_MOve_Anti_clock_Wise@pin_obj_2(COMRAM[1]), DC_motor_MOve_Anti_clock_Wise@pin_obj_1(COMRAM[1]), DC_motor_MOve_clock_Wise@pin_obj_2(COMRAM[1]), DC_motor_MOve_clock_Wise@pin_obj_1(COMRAM[1]), 
		 -> myseg.Segment_Pins(BANK0[4]), myseg(BANK0[5]), 

    gpio_pin_intilaize@pin	PTR const struct . size(2) Largest target is 9
		 -> led_initialize@pin_obj(COMRAM[1]), DC_motor_initialize@pin_obj_2(COMRAM[1]), DC_motor_initialize@pin_obj_1(COMRAM[1]), Speed_down(BANK0[3]), 
		 -> Speed_up(BANK0[3]), LIGHTS_btn_OFF(BANK0[3]), MOTORS_BACKWARD(COMRAM[3]), MOTORS_FORWARD(COMRAM[3]), 
		 -> LIGHTS_btn_ON(COMRAM[3]), myseg.Segment_Pins(BANK0[4]), myseg(BANK0[5]), motor_sp(BANK0[9]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllh[1]), PORTD(BITBIGSFRllh[1]), PORTC(BITBIGSFRllh[1]), PORTB(BITBIGSFRllh[1]), 
		 -> PORTA(BITBIGSFRlll[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRlll[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhlll[1]), TRISD(BITBIGSFRhlll[1]), TRISC(BITBIGSFRhlll[1]), TRISB(BITBIGSFRhlll[1]), 
		 -> TRISA(BITBIGSFRlll[1]), 

    button_read_state@btn_state	PTR enum E2322 size(2) Largest target is 1
		 -> MOTORS_btn_FORWARD_activ(COMRAM[1]), MOTORS_btn_BACKWARD_activ(COMRAM[1]), LIGHTS_btn_ON_activ(COMRAM[1]), LIGHTS_btn_OFF_activ(COMRAM[1]), 
		 -> speed_down_btn_state(COMRAM[1]), speed_up_btn_state(COMRAM[1]), 

    button_read_state@btn	PTR const struct . size(2) Largest target is 3
		 -> Speed_down(BANK0[3]), Speed_up(BANK0[3]), LIGHTS_btn_OFF(BANK0[3]), MOTORS_BACKWARD(COMRAM[3]), 
		 -> MOTORS_FORWARD(COMRAM[3]), LIGHTS_btn_ON(COMRAM[3]), 

    button_initialize@btn	PTR const struct . size(2) Largest target is 3
		 -> Speed_down(BANK0[3]), Speed_up(BANK0[3]), LIGHTS_btn_OFF(BANK0[3]), MOTORS_BACKWARD(COMRAM[3]), 
		 -> MOTORS_FORWARD(COMRAM[3]), LIGHTS_btn_ON(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_CCP_PWM_Set_Duty
    _system_init->_CCP_Init
    _segment_intilaize->_gpio_pin_intilaize
    _led_initialize->_gpio_pin_intilaize
    _button_initialize->_gpio_pin_intilaize
    _DC_motor_initialize->_gpio_pin_intilaize
    _CCP_Init->___lldiv
    _segment_write->_gpio_pin_write_logic
    _scooter_stop->_DC_motor_Stop
    _DC_motor_Stop->_gpio_pin_write_logic
    _scooter_forward->_DC_motor_MOve_clock_Wise
    _DC_motor_MOve_clock_Wise->_gpio_pin_write_logic
    _scooter_backward->_DC_motor_MOve_Anti_clock_Wise
    _DC_motor_MOve_Anti_clock_Wise->_gpio_pin_write_logic
    _led_turn_on->_gpio_pin_write_logic
    _led_turn_off->_gpio_pin_write_logic
    _button_read_state->_gpio_pin_read_logic
    _CCP_PWM_Set_Duty->___fltol
    ___xxtofl->___wmul
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   25882
                   _CCP_PWM_Set_Duty
                      _CCP_PWM_Start
                       _CCP_PWM_Stop
                  _button_read_state
                       _led_turn_off
                        _led_turn_on
                   _scooter_backward
                    _scooter_forward
                       _scooter_stop
                      _segment_write
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0    6714
                           _CCP_Init
                _DC_motor_initialize
                  _button_initialize
                     _led_initialize
                  _segment_intilaize
 ---------------------------------------------------------------------------------
 (2) _segment_intilaize                                    4     2      2    1365
                                              9 COMRAM     3     1      2
                 _gpio_pin_intilaize
 ---------------------------------------------------------------------------------
 (2) _led_initialize                                       5     3      2    1068
                                              9 COMRAM     4     2      2
                 _gpio_pin_intilaize
 ---------------------------------------------------------------------------------
 (2) _button_initialize                                    3     1      2    1371
                                              9 COMRAM     2     0      2
                 _gpio_pin_intilaize
 ---------------------------------------------------------------------------------
 (2) _DC_motor_initialize                                  6     4      2    1241
                                              9 COMRAM     5     3      2
                 _gpio_pin_intilaize
 ---------------------------------------------------------------------------------
 (2) _CCP_Init                                            13    11      2    1669
                                             13 COMRAM    12    10      2
                            ___lldiv
                 _gpio_pin_intilaize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intilaize                                   9     7      2     863
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     456
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _segment_write                                        4     1      3    2513
                                             10 COMRAM     3     0      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _scooter_stop                                         0     0      0    2355
                      _DC_motor_Stop
 ---------------------------------------------------------------------------------
 (2) _DC_motor_Stop                                        6     4      2    2355
                                             10 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _scooter_forward                                      0     0      0    2355
           _DC_motor_MOve_clock_Wise
 ---------------------------------------------------------------------------------
 (2) _DC_motor_MOve_clock_Wise                             6     4      2    2355
                                             10 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _scooter_backward                                     0     0      0    2355
      _DC_motor_MOve_Anti_clock_Wise
 ---------------------------------------------------------------------------------
 (2) _DC_motor_MOve_Anti_clock_Wise                        6     4      2    2355
                                             10 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _led_turn_on                                          5     3      2    2178
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _led_turn_off                                         5     3      2    2178
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    1981
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (1) _button_read_state                                    7     3      4    1479
                                              9 COMRAM     6     2      4
                _gpio_pin_read_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                 10     6      4     248
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _CCP_PWM_Stop                                         4     2      2     226
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _CCP_PWM_Start                                        4     2      2     226
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _CCP_PWM_Set_Duty                                     8     5      3    3303
                                             55 COMRAM     7     4      3
                            ___fldiv
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              6 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     711
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             45 COMRAM    10     6      4
                            ___fldiv (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             20 COMRAM    25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP_PWM_Set_Duty
     ___fldiv
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___fltol
       ___fldiv (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
     ___wmul
     ___xxtofl
   _CCP_PWM_Start
   _CCP_PWM_Stop
   _button_read_state
     _gpio_pin_read_logic
   _led_turn_off
     _gpio_pin_write_logic
   _led_turn_on
     _gpio_pin_write_logic
   _scooter_backward
     _DC_motor_MOve_Anti_clock_Wise
       _gpio_pin_write_logic
   _scooter_forward
     _DC_motor_MOve_clock_Wise
       _gpio_pin_write_logic
   _scooter_stop
     _DC_motor_Stop
       _gpio_pin_write_logic
   _segment_write
     _gpio_pin_write_logic
   _system_init
     _CCP_Init
       ___lldiv
       _gpio_pin_intilaize
     _DC_motor_initialize
       _gpio_pin_intilaize
     _button_initialize
       _gpio_pin_intilaize
     _led_initialize
       _gpio_pin_intilaize
     _segment_intilaize
       _gpio_pin_intilaize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      35       5       33.1%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3E      5F       1      100.0%
BITBIGSFRhhh        34      0       0      36        0.0%
BITBIGSFRlll        20      0       0      43        0.0%
BITBIGSFRhllh       1B      0       0      39        0.0%
BITBIGSFRhhl         B      0       0      37        0.0%
BITBIGSFRhlll        7      0       0      40        0.0%
BITBIGSFRllh         4      0       0      42        0.0%
BITBIGSFRlh          4      0       0      41        0.0%
BITBIGSFRhlh         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      94      44        0.0%
DATA                 0      0      94       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 08 22:52:30 2023

                                     l9 E70E                            ___fldiv@aexp 002D  
                          ___fldiv@bexp 002C                            ___fldiv@sign 0025  
    DC_motor_MOve_Anti_clock_Wise@motor 000B                    _Button_forward_state 0040  
                                    l20 F066                                      l25 F066  
                                    l73 F60E                                      l93 EA64  
                                    l88 F276                     ___wmul@multiplicand 0003  
                       _scooter_forward E6B8                     __end_of_system_init EB72  
                                   l213 F956                                     l223 FAA2  
                                   l234 FC08                                     l251 E6B6  
                                   l323 EAEA                                     l219 FA54  
                                   l316 F4CE                                     l245 EB70  
                                   l254 E6EA                                     l423 EC14  
                                   l263 ECE4                                     l248 E6D0  
                                   l416 EC04                                     l273 EDBC  
                                   l353 F79C                                     l292 E918  
                                   l268 EE94                                     l365 F3A2  
                                   l382 E820                                     l294 E972  
                                   l278 EF6C                                     l375 E9EA  
                                   l287 E838                                     l369 F3A2  
                                   l297 E8A6                                     l289 E88E  
                                   l378 E9EA                                     l386 E820  
                                   l299 E900                                     l389 E734  
                                   l686 F16C                                     l971 FFFE  
                                   l973 FE5E                                     l982 FEA4  
                                   l984 FF1C                                     l976 FE22  
                                   l985 FF0A                                     _PR2 000FCB  
                                   prod 000FF3                                     wreg 000FE8  
                  __end_of_CCP_PWM_Stop E822                            ?_led_turn_on 000B  
                         _LIGHTS_btn_ON 0049                       _segment_intilaize F3A4  
                          ___fltol@exp1 0037                                    l2000 EC28  
                                  l2010 ECB6                                    l2002 EC2C  
                                  l1051 F88C                                    l1044 F7F4  
                                  l2012 ECCC                                    l2004 ECA0  
                                  l2020 F3A4                                    l2110 EE48  
                                  l2102 EDBE                                    l2014 ECD8  
                                  l2006 ECA2                                    l2030 F3E0  
                                  l2022 F3B6                                    l1047 F950  
                                  l2200 FCE8                                    l2120 EE84  
                                  l2112 EE4A                                    l2104 EDBE  
                                  l2008 ECB4                                    l2040 F430  
                                  l2032 F3EE                                    l2024 F3BA  
                                  l2202 FCF8                                    l2210 FD22  
                                  l1058 F8E8                                    l2130 ECFC  
                                  l2114 EE5C                                    l2106 EDD0  
                                  l2050 F484                                    l2034 F40A  
                                  l2042 F442                                    l2026 F3C4  
                                  l2018 F3A4                                    l2300 FFEC  
                                  l2220 FD64                                    l2212 FD32  
                                  l2204 FD08                                    l2140 ED9C  
                                  l2132 ED70                                    l2124 ECE6  
                                  l2116 EE5E                                    l2108 EDD4  
                                  l2044 F45E                                    l2052 F492  
                                  l2036 F414                                    l2028 F3D2  
                                  l2302 FFF2                                    l2214 FD48  
                                  l2206 FD18                                    l2142 EDAC  
                                  l2134 ED72                                    l2126 ECE6  
                                  l2118 EE74                                    l2150 EEA8  
                                  l2070 F636                                    l2062 F610  
                                  l2054 F49E                                    l2046 F468  
                                  l2038 F422                                    l2304 FFF4  
                                  l2240 FDE6                                    l2232 FD9C  
                                  l2216 FD58                                    l2224 FD78  
                                  l2208 FD1A                                    l2320 F0BC  
                                  l2312 F068                                    l2136 ED84  
                                  l2128 ECF8                                    l2160 EF36  
                                  l2152 EEAC                                    l2080 F698  
                                  l2072 F652                                    l2064 F610  
                                  l2056 F4AE                                    l2048 F476  
                                  l2250 FE2C                                    l2242 FDEE  
                                  l2234 FDB6                                    l2226 FD88  
                                  l2218 FD60                                    l2322 F0BE  
                                  l2314 F07E                                    l2170 E72C  
                                  l2410 EF9A                                    l2402 EF6E  
                                  l2138 ED86                                    l2162 EF4C  
                                  l2154 EF20                                    l2146 EE96  
                                  l2090 F724                                    l2082 F6B4  
                                  l2074 F65A                                    l2066 F622  
                                  l2058 F4BE                                    l2260 FE84  
                                  l2252 FE4A                                    l2244 FDFE  
                                  l2236 FDC6                                    l2228 FD88  
                                  l2180 FC82                                    l2324 F0CE  
                                  l2500 E98A                                    l2420 F006  
                                  l2412 EFAE                                    l2404 EF72  
                                  l2164 EF5C                                    l2156 EF22  
                                  l2148 EE96                                    l2092 F762  
                                  l2084 F6C0                                    l2076 F676  
                                  l2068 F626                                    l2270 FEC2  
                                  l2262 FE8A                                    l2254 FE4C  
                                  l2246 FE12                                    l2238 FDD6  
                                  l2182 FC92                                    l2190 FCBC  
                                  l2174 FC66                                    l2350 F14C  
                                  l2334 F0F8                                    l2326 F0D2  
                                  l2318 F092                                    l2510 E9E4  
                                  l2502 E9A6                                    l2414 EFBE  
                                  l2422 F016                                    l2406 EF84  
                                  l2158 EF34                                    l2094 F794  
                                  l2086 F6DC                                    l2078 F67A  
                                  l2280 FF2C                                    l2272 FEC6  
                                  l2264 FE94                                    l2256 FE5C  
                                  l2248 FE20                                    l2192 FCCC  
                                  l2184 FCA2                                    l2176 FC72  
                                  l2352 F15C                                    l2344 F120  
                                  l2336 F102                                    l2328 F0E0  
                                  l2168 E710                                    l2360 F7BE  
                                  l2520 F30A                                    l2512 F278  
                                  l2504 E9B2                                    l2424 F026  
                                  l2416 EFDA                                    l2408 EF96  
                                  l2096 F796                                    l2088 F6E4  
                                  l2600 F9FA                                    l2290 FF8E  
                                  l2282 FF38                                    l2274 FED4  
                                  l2266 FEA2                                    l2258 FE6E  
                                  l2194 FCD2                                    l2186 FCB2  
                                  l2178 FC80                                    l2346 F12C  
                                  l2338 F10C                                    l2370 F836  
                                  l2362 F804                                    l2522 F326  
                                  l2514 F280                                    l2506 E9CE  
                                  l2418 EFEA                                    l2450 E902  
                                  l2530 EA66                                    l2098 F79A  
                                  l2610 FA38                                    l2602 FA06  
                                  l2292 FFA4                                    l2284 FF46  
                                  l2276 FF02                                    l2268 FEB4  
                                  l2196 FCD8                                    l2188 FCB4  
                                  l2348 F13C                                    l2380 F8BE  
                                  l2372 F842                                    l2364 F81A  
                                  l2356 F7A0                                    l2524 F356  
                                  l2516 F292                                    l2508 E9D6  
                                  l2428 F046                                    l2460 E890  
                                  l2452 E914                                    l2532 EA66  
                                  l1900 F504                                    l2620 FA86  
                                  l2612 FA48                                    l2604 FA16  
                                  l2294 FFBE                                    l2286 FF70  
                                  l2198 FCE6                                    l2390 F8FC  
                                  l2382 F8CA                                    l2374 F874  
                                  l2358 F7B0                                    l2526 F372  
                                  l2518 F296                                    l2470 E8F0  
                                  l2462 E890                                    l2454 E91A  
                                  l2534 EA78                                    l2710 F5F6  
                                  l1902 F50C                                    l1910 F60C  
                                  l2446 EAEC                                    l2630 FACA  
                                  l2622 FA96                                    l2614 FA64  
                                  l2606 FA1A                                    l2296 FFDA  
                                  l2288 FF74                                    l2392 F920  
                                  l2384 F8D8                                    l2376 F876  
                                  l2368 F82E                                    l2480 E7C2  
                                  l2712 F25E                                    l1920 F172  
                                  l2464 E8A2                                    l2456 E950  
                                  l2448 E902                                    l2472 E6B8  
                                  l2536 EA88                                    l1904 F568  
                                  l2640 FB0E                                    l2632 FADA  
                                  l2624 FAB2                                    l2616 FA68  
                                  l2608 FA30                                    l2298 FFDE  
                                  l2394 F930                                    l2386 F8F6  
                                  l2378 F882                                    l2490 E818  
                                  l2482 E7D4                                    l1922 F184  
                                  l1930 F24A                                    l2466 E8A8  
                                  l2458 E962                                    l2474 E69E  
                                  l2538 EA8C                                    l2650 FB40  
                                  l2642 FB10                                    l2634 FAEA  
                                  l2626 FAB6                                    l2618 FA7E  
                                  l2396 F93E                                    l2388 F8F8  
                                  l2484 E7D8                                    l1924 F18C  
                                  l1932 F274                                    l2468 E8DE  
                                  l2476 E6D2                                    l1940 EB72  
                                  l1908 F5CA                                    l2660 FB7E  
                                  l2644 FB1C                                    l2652 FB50  
                                  l2636 FAEE                                    l2628 FAC6  
                                  l2398 F940                                    l2494 E974  
                                  l2486 E7F4                                    l2478 E7C2  
                                  l1926 F1E8                                    l1918 F16E  
                                  l1950 EBBA                                    l1942 EB82  
                                  l2670 FBC2                                    l2662 FB8A  
                                  l2654 FB60                                    l2646 FB28  
                                  l2638 FAFE                                    l2496 E974  
                                  l2488 E7FC                                    l1960 EBFE  
                                  l1952 EBC4                                    l1944 EB98  
                                  l2680 FC18                                    l2672 FBC6  
                                  l2664 FB9E                                    l2656 FB70  
                                  l2648 FB3C                                    l2592 F952  
                                  l2498 E986                                    l1954 EBE2  
                                  l1946 EBA0                                    l1962 E6EC  
                                  l2682 FC1C                                    l2674 FBDC  
                                  l2666 FBA2                                    l2658 FB72  
                                  l2594 F9CE                                    l1972 E9EC  
                                  l1956 EBF2                                    l1948 EBAC  
                                  l1964 E6EC                                    l2684 FC32  
                                  l2676 FBEC                                    l2668 FBB2  
                                  l2596 F9DE                                    l1974 E9EC  
                                  l1958 EBF4                                    l1894 F4D0  
                                  l1966 E6FE                                    l1990 E870  
                                  l1982 E822                                    l2686 FC42  
                                  l2678 FBFC                                    l2598 F9EA  
                                  l1976 E9FE                                    l1896 F4D4  
                                  l1968 E702                                    l1992 E882  
                                  l1984 E822                                    l2688 FC52  
                                  l1978 EA02                                    l1898 F4E6  
                                  l1986 E834                                    l1996 EC16  
                                  l1988 E83A                                    l1998 EC16  
                    ?_segment_intilaize 000A                                    u2000 F0B2  
                                  u2010 F0E0                                    u2011 F0DC  
                                  u2020 F0F4                                    u2100 F8BA  
                                  u2021 F0F0                                    u2005 F0A8  
                                  u2101 F8B6                                    u2030 F11C  
                                  u2110 F8D8                                    u2031 F118  
                                  u2111 F8D4                                    u2040 F13C  
                                  u2120 F8E8                                    u2200 F006  
                                  u2041 F138                                    u2121 F8E4  
                                  u2201 F002                                    u2050 F14C  
                                  u2130 F8F6                                    u2210 F026  
                                  u2051 F148                                    u2131 F8F2  
                                  u2211 F022                                    u2140 F930  
                                  u2060 F7B0                                    u2300 E7D4  
                                  u2220 F042                                    u1420 F5E2  
                                  u1404 F528                                    u1500 E6FE  
                                  u2141 F92C                                    u2061 F7AC  
                                  u2301 E7D0                                    u2221 F03E  
                                  u1421 F5DC                                    u1405 F524  
                                  u1501 E6FA                                    _LATA 000F89  
                                  u2150 F93E                                    u2070 F7BE  
                                  u2310 E7F4                                    u1510 E9FE  
                                  u2230 F062                                    u1430 F5E4  
                                  u1414 F584                                    _LATB 000F8A  
                                  u2151 F93A                                    u2071 F7BA  
                                  u2311 E7F0                                    u1511 E9FA  
                                  u2231 F05E                                    u1415 F580  
                                  _LATC 000F8B                                    u2080 F81A  
                                  u2320 E818                                    u2160 EF84  
                                  u1440 F184                                    u2400 EA78  
                                  u1600 F45E                                    _LATD 000F8C  
                                  u2081 F816                                    u2321 E814  
                                  u2161 EF80                                    u1441 F180  
                                  u2401 EA74                                    u1601 F45A  
                                  _LATE 000F8D                                    u2090 F870  
                                  u2330 E986                                    u2170 EF96  
                                  u2410 EA88                                    u1610 F622  
                                  u1530 E834                                    u2091 F86C  
                                  u2331 E982                                    u2171 EF92  
                                  u2411 EA84                                    u1611 F61E  
                                  u1531 E830                                    u2340 E9A6  
                                  u1524 EA50                                    u2180 EFBE  
                                  u2260 E914                                    u1700 ECF8  
                                  u1380 F4E6                                    u1620 F652  
                                  u2500 FA16                                    u2341 E9A2  
                                  u1525 EA4C                                    u2181 EFBA  
                                  u2261 E910                                    u1701 ECF4  
                                  u1381 F4E2                                    u1621 F64E  
                                  u2501 FA12                                    u2350 E9CE  
                                  u2190 EFDA                                    u1454 F1A8  
                                  u1470 EB98                                    u1390 F504  
                                  u1630 F676                                    u1550 EC28  
                                  u2510 FA30                                    u2351 E9CA  
                                  u2191 EFD6                                    u1455 F1A4  
                                  u1471 EB94                                    u1391 F500  
                                  u1631 F672                                    u1551 EC24  
                                  u2511 FA2C                                    u1800 FCF8  
                                  u2360 E9E4                                    u1464 F204  
                                  u2280 E8A2                                    u1480 EBBA  
                                  u1640 F698                                    u2600 FAFE  
                                  u2520 FA48                                    u1801 FCF4  
                                  u2361 E9E0                                    u1465 F200  
                                  u2281 E89E                                    u1481 EBB6  
                                  u1641 F694                                    u1545 E880  
                                  u2601 FAFA                                    u2521 FA44  
                                  u1810 FD08                                    u2370 F292  
                                  u1730 EEA8                                    u1490 EBE2  
                                  u1650 F6B4                                    u2610 FB0E  
                                  u2530 FA64                                    u1811 FD04  
                                  u2371 F28E                                    u2275 E960  
                                  u1715 ED82                                    u1731 EEA4  
                                  u1491 EBDE                                    u1651 F6B0  
                                  u1547 E882                                    u2611 FB0A  
                                  u2531 FA60                                    u1900 FEC2  
                                  u1820 FD48                                    u2380 F326  
                                  u1660 F6DC                                    u1580 F3B6  
                                  u2620 FB60                                    u2540 FA7E  
                                  u1901 FEBE                                    u1821 FD44  
                                  u2381 F322                                    u2277 E962  
                                  u1725 ED9A                                    u1717 ED84  
                                  u1661 F6D8                                    u1565 ECB2  
                                  u1581 F3B2                                    u2621 FB5C  
                                  u2541 FA7A                                    u1910 FED4  
                                  u1830 FD88                                    u2390 F372  
                                  u1670 EDD0                                    u1590 F40A  
                                  u2630 FB70                                    u2550 FA96  
                                  u1911 FED0                                    u1831 FD84  
                                  u2391 F36E                                    u2295 E8EE  
                                  u1727 ED9C                                    u1671 EDCC  
                                  u1575 ECCA                                    u1567 ECB4  
                                  u1591 F406                                    u2631 FB6C  
                                  u2551 FA92                                    u1920 FF02  
                                  u1840 FDFE                                    u1760 FC80  
                                  u2640 FBC2                                    u2560 FAB2  
                                  u2480 F9DE                                    u1921 FEFE  
                                  u1841 FDFA                                    u1761 FC7C  
                                  u2297 E8F0                                    u1745 EF32  
                                  u1577 ECCC                                    u2641 FBBE  
                                  u2561 FAAE                                    u2481 F9DA  
                                  u1930 FF18                                    u1850 FE20  
                                  u1770 FC92                                    u2650 FBDC  
                                  u2570 FAC6                                    u2490 F9FA  
                                  u1931 FF14                                    u1851 FE1C  
                                  u1771 FC8E                                    u1755 EF4A  
                                  u1747 EF34                                    u2651 FBD8  
                                  u2571 FAC2                                    u2491 F9F6  
                                  u1940 FF2C                                    u1860 FE4A  
                                  u1780 FCA2                                    u2660 FBFC  
                                  u2580 FADA                                    u1941 FF28  
                                  u1861 FE46                                    u1781 FC9E  
                                  u1685 EE5A                                    u1757 EF4C  
                                  u2661 FBF8                                    u2581 FAD6  
                                  u1950 FF46                                    u1870 FE6E  
                                  u1790 FCE6                                    u2670 FC18  
                                  u2590 FAEA                                    u1951 FF42  
                                  u1871 FE6A                                    u1791 FCE2  
                                  u1695 EE72                                    u1687 EE5C  
                                  u2671 FC14                                    u2591 FAE6  
                                  u1960 FF8E                                    u1880 FE84  
                                  u2680 FC32                                    u1961 FF8A  
                                  u1881 FE80                                    u1697 EE74  
                                  u2681 FC2E                                    u1970 FFBE  
                                  u1890 FEA2                                    u2690 FC52  
                                  u1971 FFBA                                    u1891 FE9E  
                                  u2691 FC4E                                    u1980 FFEC  
                                  u1981 FFE8                                    u1990 F07E  
                                  u1991 F07A                                    _data 005F  
                                  _main F952                                    fsr2h 000FDA  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                  __end_of_led_initialize E890  
                                  prodh 000FF4                                    prodl 000FF3  
                   ??_segment_intilaize 000C                                    start 0000  
                       ___fldiv@new_exp 0026                   __end_of_CCP_PWM_Start E9EC  
                         ?_led_turn_off 000B                _MOTORS_btn_FORWARD_activ 0053  
                      __end_of_CCP_Init F79E                          _LIGHTS_btn_OFF 0092  
                          ___param_bank 000000              ??_DC_motor_MOve_clock_Wise 000D  
                  _gpio_pin_write_logic F16E           DC_motor_MOve_clock_Wise@motor 000B  
                         ___fltol@sign1 0036                                   ?_main 0001  
                       __end_of___fldiv 0000                         __end_of___fltol F16E  
                       __end_of___lldiv EC16                          _MOTORS_FORWARD 0046  
                                 _PORTA 000F80                                   _PORTB 000F81  
                                 _PORTC 000F82                                   _PORTD 000F83  
                                 _PORTE 000F84                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                                 _TRISD 000F95                                   _TRISE 000F96  
             __end_of_segment_intilaize F4D0                                   _myseg 0087  
                                 tablat 000FF5                                   status 000FD8  
                       ?_led_initialize 000A                          ??_led_turn_off 000D  
                  segment_intilaize@seg 000A                 __end_of_scooter_forward E6D2  
                       __initialization E76C                             _system_init EAEC  
                          __end_of_main FC66                   ?_gpio_pin_write_logic 0001  
                 CCP_PWM_Start@_ccp_obj 0001                    CCP_PWM_Stop@_ccp_obj 0001  
           __end_of_DC_motor_initialize ECE6                         _MOTORS_BACKWARD 0043  
                                ??_main 003F                           __activetblptr 000002  
                 __end_of_segment_write EAEC                       _button_initialize E6EC  
                     _button_read_state EF6E                                  _CCPR1L 000FBE  
                                _CCPR2L 000FBB                      ?_button_initialize 000A  
                    ?_button_read_state 000A                     _LIGHTS_btn_ON_activ 0055  
                      __end_of___xxtofl F952                           _tris_register 0074  
                   ??_button_initialize 000C                     ??_button_read_state 000E  
       ??_DC_motor_MOve_Anti_clock_Wise 000D                      DC_motor_Stop@motor 000B  
                                ___wmul E710                               ??___fldiv 001D  
                             ??___fltol 0032                               ??___lldiv 0009  
                            _Speed_down 008C                           _DC_motor_Stop EE96  
                                clear_0 E7B2                   led_initialize@pin_obj 000D  
                                isa$std 000001                            __pdataCOMRAM 003F  
             __end_of_button_initialize E710                __end_of_scooter_backward E6B8  
             __end_of_button_read_state F068                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                             ?_CCP_Init 000E                  DC_motor_Stop@pin_obj_1 000E  
                DC_motor_Stop@pin_obj_2 000F                            ___xxtofl@arg 0011  
                          ___xxtofl@exp 0010                            ___xxtofl@val 0007  
                            __accesstop 0060                 __end_of__initialization E7B8  
                      segment_write@seg 000B                        _CCP_PWM_Set_Duty F278  
                         ___rparam_used 000001                              ___fltol@f1 002E  
                     led_initialize@led 000A                        ?_scooter_forward 0001  
                          _CCP_PWM_Stop E7C2                  ??_gpio_pin_write_logic 0004  
                        __pcstackCOMRAM 0001                            __pidataBANK0 E737  
                  button_initialize@btn 000A                          ?_DC_motor_Stop 000B  
            _speed_down_btn_state_final 0041                    __end_of_led_turn_off E902  
                            ??_CCP_Init 0010                   CCP_PWM_Set_Duty@_duty 003A  
                  _LIGHTS_btn_OFF_activ 0054                    button_read_state@btn 000A  
                               ?___wmul 0001             CCP_PWM_Set_Duty@l_duty_temp 003D  
 __end_of_DC_motor_MOve_Anti_clock_Wise EDBE           _DC_motor_MOve_Anti_clock_Wise ECE6  
                             ?___xxtofl 0007                        ??_led_initialize 000C  
            button_read_state@Pin_logic 000F                                 __Hparam 0000  
                               __Lparam 0000                         ??_DC_motor_Stop 000D  
                          ?_system_init 0001                                 ___fldiv FC66  
                   _gpio_pin_read_logic E9EC                                 ___fltol F068  
                               ___lldiv EB72                           ?_scooter_stop 0001  
                               __pcinit E76C              __end_of_gpio_pin_intilaize F610  
                               __ramtop 1000                                 __ptext0 F952  
                               __ptext1 EAEC                                 __ptext2 F3A4  
                               __ptext3 E822                                 __ptext4 E6EC  
                               __ptext5 EC16                                 __ptext6 F610  
                               __ptext7 F4D0                                 __ptext8 EB72  
                               __ptext9 EA66                               _T2CONbits 000FCA  
                            ??___xxtofl 000B                                 _motor_1 004E  
                               _motor_2 004C               ?_DC_motor_MOve_clock_Wise 000B  
                             _LIGHT_LED 0056                    ?_gpio_pin_read_logic 0001  
                  end_of_initialization E7B8                           __Lmediumconst 0000  
                       ___lldiv@divisor 0005                         ___lldiv@counter 000D  
                   led_turn_off@pin_obj 000E                CCP_PWM_Set_Duty@_ccp_obj 0038  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc2 000FDE  
                        ??_scooter_stop 0010              button_read_state@btn_state 000C  
                 gpio_pin_intilaize@pin 0001                   gpio_pin_intilaize@ret 0009  
              __end_of_CCP_PWM_Set_Duty F3A4          ?_DC_motor_MOve_Anti_clock_Wise 000B  
                         ___xxtofl@sign 000F                               _TRISCbits 000F94  
                     segment_write@data 000D                       ?_scooter_backward 0001  
                 ??_gpio_pin_read_logic 0005                             ___fldiv@grs 0028  
                           ___fldiv@rem 0021                      ??_scooter_backward 0010  
                           _CCP1CONbits 000FBD                        CCP_Init@_ccp_obj 000E  
                           _CCP2CONbits 000FBA                            _led_turn_off E890  
                         _CCP_PWM_Start E974                          __end_of___wmul E736  
                         __pidataCOMRAM E686            _speed_down_button_high_valid 0059  
                  _speed_down_btn_state 0050                     start_initialization E76C  
                         ??_led_turn_on 000D                           _CCP_Init$1540 0016  
                         _CCP_Init$1539 0012                            _lat_register 006A  
                       led_turn_off@led 000B                          ?_CCP_PWM_Start 0001  
                              ??___wmul 0005                             __pdataBANK0 0060  
                             ___fldiv@a 0019                               ___fldiv@b 0015  
                 _Button_Backward_state 003F                             __pbssCOMRAM 0057  
             _MOTORS_btn_BACKWARD_activ 0052                           _segment_write EA66  
                  __end_of_scooter_stop E6EC                     __end_of_led_turn_on E974  
              _speed_up_btn_state_final 0042                                ?___fldiv 0015  
                              ?___fltol 002E                                ?___lldiv 0001  
      __end_of_DC_motor_MOve_clock_Wise EE96               gpio_pin_write_logic@logic 0003  
                        ?_segment_write 000B                                _CCP_Init F610  
                    _gpio_pin_intilaize F4D0                          ___wmul@product 0005  
                       ??_CCP_PWM_Start 0003                     ?_gpio_pin_intilaize 0001  
DC_motor_MOve_Anti_clock_Wise@pin_obj_1 000E  DC_motor_MOve_Anti_clock_Wise@pin_obj_2 000F  
                   _DC_motor_initialize EC16                                _PIR1bits 000F9E  
                    led_turn_on@pin_obj 000E                   __end_of_DC_motor_Stop EF6E  
     _MOTORS_BACKWARD_button_high_valid 0057                       ___wmul@multiplier 0001  
                     ?_CCP_PWM_Set_Duty 0038                    ??_gpio_pin_intilaize 0003  
                  ?_DC_motor_initialize 000A                      ??_CCP_PWM_Set_Duty 003B  
                           _led_turn_on E902                       ??_scooter_forward 0010  
               gpio_pin_write_logic@pin 0001                 gpio_pin_write_logic@ret 000A  
                             copy_data0 E780                               copy_data1 E7A0  
                    _speed_up_btn_state 0051                  gpio_pin_read_logic@pin 0001  
                        led_turn_on@led 000B                                __Hrparam 0000  
                         ?_CCP_PWM_Stop 0001                                __Lrparam 0000  
                              _Speed_up 008F                         ??_segment_write 000E  
           __end_of_gpio_pin_read_logic EA66                _DC_motor_MOve_clock_Wise EDBE  
                 ??_DC_motor_initialize 000C            DC_motor_initialize@pin_obj_1 000D  
          DC_motor_initialize@pin_obj_2 000E                                ___xxtofl F79E  
     DC_motor_MOve_clock_Wise@pin_obj_1 000E       DC_motor_MOve_clock_Wise@pin_obj_2 000F  
                              __ptext10 E6D2                                __ptext11 EE96  
                              __ptext20 E9EC                                __ptext12 E6B8  
                              __ptext21 E7C2                                __ptext13 EDBE  
                              __ptext22 E974                                __ptext14 E69E  
                              __ptext23 F278                                __ptext15 ECE6  
                              __ptext24 F79E                                __ptext16 E902  
                              __ptext25 E710                                __ptext17 E890  
                              __ptext26 F068                                __ptext18 F16E  
                              __ptext27 FC66                                __ptext19 EF6E  
                        ??_CCP_PWM_Stop 0003                                _motor_sp 007E  
                              isa$xinst 000000                            _scooter_stop E6D2  
            _speed_up_button_high_valid 005B               gpio_pin_read_logic@status 0003  
          __end_of_gpio_pin_write_logic F278                DC_motor_initialize@motor 000A  
                      ___lldiv@dividend 0001        _MOTORS_FORWARD_button_high_valid 005D  
                         ??_system_init 001A                        ___lldiv@quotient 0009  
                         _port_register 0060                          _led_initialize E822  
                      _scooter_backward E69E  
